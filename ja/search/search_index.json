{"config":{"lang":["ja"],"separator":"[\\s\\-\u3000\u3001\u3002\uff0c\uff0e]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u306f\u3058\u3081\u306b","text":"<p>EIPL\uff08Embodied Intelligence with Deep Predictive Learning\uff09\u3068\u306f\u3001\u65e9\u7a32\u7530\u5927\u5b66\u5c3e\u5f62\u54f2\u4e5f\u7814\u7a76\u5ba4\u3067\u958b\u767a\u3055\u308c\u305f\u3001\u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2\u3092\u7528\u3044\u305f\u30ed\u30dc\u30c3\u30c8\u52d5\u4f5c\u751f\u6210\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3042\u308b\u3002 \u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2 \u3068\u306f\u3001\u904e\u53bb\u306e\u5b66\u7fd2\u7d4c\u9a13\u306b\u57fa\u3065\u3044\u3066\u3001\u5b9f\u4e16\u754c\u306b\u9069\u3057\u305f\u52d5\u4f5c\u3092\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u4e88\u6e2c\u3059\u308b\u3053\u3068\u3067\u3001\u672a\u5b66\u7fd2\u306e\u74b0\u5883\u3084\u4f5c\u696d\u5bfe\u8c61\u306b\u5bfe\u3057\u67d4\u8edf\u306a\u52d5\u4f5c\u3092\u5b9f\u884c\u53ef\u80fd\u306a\u624b\u6cd5\u3067\u3042\u308a\u3001\u5c11\u306a\u3044\u52d5\u4f5c\u6559\u793a\u30b3\u30b9\u30c8\u3067\u52d5\u4f5c\u3092\u5b66\u7fd2\u30fb\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u3053\u3053\u3067\u306f\u3001\u5b9f\u30ed\u30dc\u30c3\u30c8\u3068\u3057\u3066\u30b9\u30de\u30fc\u30c8\u30ed\u30dc\u30c3\u30c8AIREC\uff08AIREC\uff1aAI-driven Robot for Embrace and Care\uff09\u3068Open Manpulator\u3092\u5bfe\u8c61\u306b\u3001\u53ce\u96c6\u3057\u305f\u8996\u899a\u30fb\u95a2\u7bc0\u89d2\u5ea6\u30c7\u30fc\u30bf\u3092\u7528\u3044\u3066\u3001\u30e2\u30c7\u30eb\u5b9f\u88c5\u304b\u3089\u5b66\u7fd2\u3001\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u52d5\u4f5c\u751f\u6210\u307e\u3067\u4f53\u7cfb\u7684\u306b\u5b66\u3076\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u307e\u305f\u4eca\u5f8c\u3001EIPL\u3092\u7528\u3044\u3066\u65b0\u305f\u306b\u958b\u767a\u3055\u308c\u305f\u52d5\u4f5c\u751f\u6210\u30e2\u30c7\u30eb\u306f\u3001Model Zoo \u306b\u9806\u6b21\u516c\u958b\u3059\u308b\u4e88\u5b9a\u3067\u3042\u308b\u3002 \u4ee5\u4e0b\u306b\u5404\u7ae0\u306e\u6982\u8981\u3092\u793a\u3059\u3002</p> <ol> <li> <p>\u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2</p> <p>\u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2\u306e\u30b3\u30f3\u30bb\u30d7\u30c8\u3068\u30ed\u30dc\u30c3\u30c8\u5b9f\u88c5\u306b\u5411\u3051\u305f3\u3064\u306e\u30b9\u30c6\u30c3\u30d7\u3001\u52d5\u4f5c\u6559\u793a\u3001\u5b66\u7fd2\u3001\u52d5\u4f5c\u751f\u6210\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002</p> </li> <li> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</p> <p>EIPL\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3068\u3001\u5b66\u7fd2\u6e08\u307f\u91cd\u307f\u3092\u4f7f\u3063\u305f\u52d5\u4f5c\u78ba\u8a8d\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002</p> </li> <li> <p>\u52d5\u4f5c\u6559\u793a</p> <p>EIPL\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3068\u3057\u3066\u3001AIREC\u3092\u7528\u3044\u305f\u7269\u4f53\u628a\u6301\u52d5\u4f5c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u63d0\u4f9b\u3002\u30bf\u30b9\u30af\u6982\u8981\u306b\u52a0\u3048\u3001ROSbag\u30c7\u30fc\u30bf\u304b\u3089\u30c7\u30fc\u30bf\u62bd\u51fa\u53ca\u3073\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002</p> </li> <li> <p>\u30e2\u30c7\u30eb\u5b66\u7fd2</p> <p>\u6ce8\u610f\u6a5f\u69cb\u52d5\u4f5c\u751f\u6210\u30e2\u30c7\u30eb\u3092\u4f8b\u306b\u3001\u30e2\u30c7\u30eb\u306e\u5b66\u7fd2\u304b\u3089\u63a8\u8ad6\u307e\u3067\u306e\u4e00\u9023\u306e\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002</p> </li> <li> <p>\u30ed\u30dc\u30c3\u30c8\u5fdc\u7528</p> <p>Open Manpulator\u3092\u7528\u3044\u305f\u52d5\u4f5c\u6559\u793a\u304b\u3089\u5b9f\u6a5f\u52d5\u4f5c\u751f\u6210\u307e\u3067\u306e\u4e00\u9023\u306e\u624b\u9806\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002</p> </li> <li> <p>ModelZoo</p> <p>EIPL\u3092\u7528\u3044\u3066\u958b\u767a\u3055\u308c\u305f\u52d5\u4f5c\u751f\u6210\u30e2\u30c7\u30eb\u3092\u9806\u6b21\u516c\u958b\u3059\u308b\u3002</p> </li> <li> <p>Tips</p> <p>\u30ed\u30dc\u30c3\u30c8\u52d5\u4f5c\u5b66\u7fd2\u6027\u80fd\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306e\u30ce\u30a6\u30cf\u30a6\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002</p> </li> </ol> <p>\u8b1d\u8f9e</p> <p>\u672c\u6210\u679c\u306f\u3001JST \u30e0\u30fc\u30f3\u30b7\u30e7\u30c3\u30c8\u578b\u7814\u7a76\u958b\u767a\u4e8b\u696d JPMJMS2031 \u306e\u652f\u63f4\u3092\u53d7\u3051\u305f\u3082\u306e\u3067\u3059\u3002\u3053\u3053\u306b\u8b1d\u610f\u3092\u8868\u3057\u307e\u3059\u3002</p>"},{"location":"faq/","title":"FAQ","text":""},{"location":"faq/#q","title":"Q. \u52d5\u4f5c\u304c\u5b89\u5b9a\u3057\u306a\u3044","text":"<ol> <li> <p>\u4e88\u6e2c\u30c7\u30fc\u30bf\u3092\u6df7\u5408\u3059\u308b     \u5b9f\u4e16\u754c\u306e\u30ce\u30a4\u30ba\u306b\u5bfe\u3057\u5b89\u5b9a\u7684\u306a\u52d5\u4f5c\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306b\u3001\u6642\u523b$t$\u306e\u30bb\u30f3\u30b5\u60c5\u5831\u306b\u3001\u524d\u6642\u523b$t-1$\u3067\u3082RNN\u306e\u4e88\u6e2c\u5024\u3092\u4e00\u5b9a\u306e\u5272\u5408\u3067\u6df7\u5408\u3057\u305f\u5024\u3092RNN\u306b\u5165\u529b\u3059\u308b\u3002     \u672c\u51e6\u7406\u306f\u30ed\u30fc\u30d1\u30b9\u30d5\u30a3\u30eb\u30bf\u3068\u540c\u7b49\u3067\u3042\u308a\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u30bb\u30f3\u30b5\u5024\u306b\u30ce\u30a4\u30ba\u304c\u4e57\u3063\u3066\u3082\u3001 \u524d\u6642\u523b\u306e\u4e88\u6e2c\u5024\u3092\u88dc\u52a9\u7684\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5b89\u5b9a\u3057\u305f\u52d5\u4f5c\u6307\u4ee4\u306e\u4e88\u6e2c\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002     \u306a\u304a\u6df7\u5408\u4fc2\u6570(<code>input_param</code>)\u304c\u5c0f\u3055\u904e\u304e\u308b\u3068\u3001\u5b9f\u4e16\u754c\u306e\u30bb\u30f3\u30b5\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066\u52d5\u4f5c\u3092\u4fee\u6b63\u3059\u308b\u3053\u3068\u304c\u56f0\u96e3\u306b\u306a\u308b\u305f\u3081\u3001\u4f4d\u7f6e\u5909\u5316\u306b\u5bfe\u3059\u308b\u30ed\u30d0\u30b9\u30c8\u6027\u304c\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3055\u308c\u305f\u3044\u3002     \u4eee\u306b<code>input_param=0.0</code>\u306e\u5834\u5408\u3001\u521d\u671f\u6642\u523b\u3067\u53d6\u5f97\u3057\u305f\u30bb\u30f3\u30b5\u60c5\u5831\u306e\u307f\u3092\u7528\u3044\u3066\u52d5\u4f5c\u751f\u6210\u3059\u308b\u3053\u3068\u306b\u306a\u308b\u3002     \u4ee5\u4e0b\u306f\u5b9f\u88c5\u4f8b\u3067\u3042\u308a\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u30ab\u30e1\u30e9\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u306b\u5bfe\u3057\u30c7\u30fc\u30bf\u3092\u6df7\u5408\u3057\u3066\u3044\u308b\u3002</p> <pre><code>x_image, x_joint = robot.get_sensor_data()\nif loop_ct &gt; 1:\nx_image = x_image * input_param + y_image * (1.0-input_param)\nx_joint = x_joint * input_param + y_joint * (1.0-input_param)\ny_image , y_joint, state = mode(x_image, x_joint, state)\n</code></pre> </li> </ol>"},{"location":"faq/#q_1","title":"Q. \u4e88\u6e2c\u753b\u50cf\u304c\u7570\u5e38","text":"<ol> <li>\u30ab\u30e1\u30e9\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u56fa\u5b9a\u3059\u308b     \u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u5b9f\u30ed\u30dc\u30c3\u30c8\u306b\u9069\u7528\u3057\u305f\u969b\u3001\u4e88\u6e2c\u753b\u50cf\u4e2d\u306b\u7269\u4f53\u304c\u6620\u3089\u306a\u3044\u3001\u4e88\u6e2c\u753b\u50cf\u304c\u30ce\u30a4\u30b8\u30fc\u3068\u3044\u3046\u554f\u984c\u304c\u767a\u751f\u3059\u308b\u3002     \u30ab\u30e1\u30e9\u30d1\u30e9\u30e1\u30fc\u30bf\uff08\u4f8b\u3048\u3070\u30db\u30ef\u30a4\u30c8\u30d0\u30e9\u30f3\u30b9\u306a\u3069\uff09\u304c\u81ea\u52d5\u7684\u306b\u5909\u5316\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u539f\u56e0\u3068\u3057\u3066\u8003\u3048\u3089\u308c\u308b\u305f\u3081\u3001     <code>\u30c7\u30fc\u30bf\u53ce\u96c6\u6642</code>\u306b\u30ab\u30e1\u30e9\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u56fa\u5b9a\u3057\u3066\u3059\u308b\u3002     \u3082\u3057\u304f\u306f\u3001<code>\u30c7\u30fc\u30bf\u53ce\u96c6\u6642</code>\u3068\u540c\u3058\u3088\u3046\u306a\u8996\u899a\u753b\u50cf\u306b\u306a\u308b\u3088\u3046\u306b\u3001<code>\u63a8\u8ad6\u6642</code>\u306b\u30ab\u30e1\u30e9\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u8abf\u6574\u3059\u308b\u3002</li> </ol>"},{"location":"faq/#q_2","title":"Q. \u5bfe\u8c61\u7269\u306b\u6ce8\u610f\u304c\u5411\u304b\u306a\u3044","text":"<ol> <li> <p>\u30ab\u30e1\u30e9\u4f4d\u7f6e\u3092\u8abf\u6574\u3059\u308b</p> <p>\u5b89\u5b9a\u3057\u305f\u6ce8\u610f\u70b9\u3068\u52d5\u4f5c\u3092\u7372\u5f97\u3059\u308b\u305f\u3081\u306b\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u8eab\u4f53\uff08\u30cf\u30f3\u30c9\u3082\u3057\u304f\u306f\u30a2\u30fc\u30e0\uff09\u3068\u5bfe\u8c61\u7269\u304c\u3001\u753b\u50cf\u4e2d\u306b\u5e38\u306b\u8868\u793a\u3055\u308c\u308b\u3053\u3068\u3092\u63a8\u5968\u3059\u308b\u3002 \u6ce8\u610f\u70b9\u304c\u30ed\u30dc\u30c3\u30c8\u306e\u8eab\u4f53\u3068\u5bfe\u8c61\u90e8\u306b\u5411\u304f\u3053\u3068\u3067\u3001\u4e21\u8005\u306e\u6642\u7cfb\u5217\u95a2\u4fc2\u304c\u5b66\u7fd2\u3057\u3084\u3059\u304f\u306a\u308b\u3002</p> </li> <li> <p>\u5bfe\u8c61\u7269\u3092\u5927\u304d\u304f\u3059\u308b</p> <p>\u753b\u50cf\u4e2d\u3067\u5bfe\u8c61\u7269\u304c\u5360\u3081\u308b\u5272\u5408\u304c\u5c0f\u3055\u3044\u3068\u3001CNN\u306e\u7573\u307f\u8fbc\u307f\u306b\u3088\u308a\u7269\u4f53\u4f4d\u7f6e\u304c\u55aa\u5931\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 \u305d\u306e\u305f\u3081\u3001\u5bfe\u8c61\u7269\u3092\u7269\u7406\u7684\u306b\u5927\u304d\u304f\u3059\u308b\u304b\u3001\u7269\u4f53\u5468\u8fba\u306e\u753b\u50cf\u30af\u30ed\u30c3\u30d7\u3059\u308b\u304b\u3001\u30ab\u30e1\u30e9\u3092\u5bfe\u8c61\u7269\u306b\u8fd1\u3065\u3051\u308b\u3053\u3068\u3002</p> </li> <li> <p>\u30e2\u30c7\u30eb\u3092\u518d\u5b66\u7fd2\u3059\u308b</p> <p>\u30e2\u30c7\u30eb\u306e\u521d\u671f\u91cd\u307f\u304c\u539f\u56e0\u3067\u5bfe\u8c61\u7269\u306b\u6ce8\u610f\u304c\u5411\u304b\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 \u540c\u3058\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u8907\u6570\u56de\u5b66\u7fd2\u3092\u884c\u3046\u3053\u3068\u3067\u30015\u56de\u4e2d3\u56de\u306f\u5bfe\u8c61\u7269\u306b\u6ce8\u610f\u304c\u5411\u304f\u7d50\u679c\u304c\u5f97\u3089\u308c\u308b\u3002</p> </li> </ol>"},{"location":"faq/#q_3","title":"Q. \u30c7\u30fc\u30bf\u30ed\u30fc\u30c0\u3092\u30ab\u30b9\u30bf\u30de\u30a4\u30ba\u3057\u305f\u3044","text":"<p><code>MultimodalDataset</code> \u30af\u30e9\u30b9\u3092\u6e21\u3059\u30c7\u30fc\u30bf\u306e\u6570\u3084\u3001\u5165\u51fa\u529b\u5b9a\u7fa9\u3092\u4e00\u90e8\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u4efb\u610f\u306e\u30bb\u30f3\u30b5\u3092\u8ffd\u52a0/\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u4ee5\u4e0b\u306f\u3001\u65b0\u305f\u306b\u30c8\u30eb\u30af\u30bb\u30f3\u30b5\u3092\u8ffd\u52a0\u3057\u305f\u4f8b\u3092\u793a\u3057\u3066\u3044\u308b\u3002</p> <pre><code>class MultimodalDataset(Dataset):\ndef __init__(self, images, joints, torque, stdev=0.02):\npass\ndef __getitem__(self, idx):\nreturn [[x_img, x_joint, x_torque], [y_img, y_joint, y_torque]]\n</code></pre>"},{"location":"license/","title":"License","text":"<p>\u672c\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u3001EIPL\uff08Embodied Intelligence with Deep Predictive Learning\uff09\u306f\u30d5\u30ea\u30fc\u30bd\u30d5\u30c8\u30a6\u30a7\u30a2\u8ca1\u56e3\uff08Free Software Foundation\uff09\u306b\u3088\u308a\u767a\u884c\u3055\u308c\u305fGNU Affero General Public License version 3: GNU AGPLv3\u306e\u6761\u4ef6\u306e\u4e0b\u3067\u3001\u518d\u914d\u5e03\u304a\u3088\u3073\uff0f\u307e\u305f\u306f\u6539\u5909\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"overview/","title":"\u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2","text":""},{"location":"overview/#dpl-overview","title":"\u6982\u8981","text":"<p>\u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2\uff08Deep Predictive Learning\uff09\u3068\u306f\u3001\u8133\u306e\u591a\u69d8\u306a\u6a5f\u80fd\u3092\u7d71\u4e00\u7684\u306b\u8aac\u660e\u3059\u308b\u81ea\u7531\u30a8\u30cd\u30eb\u30ae\u30fc\u539f\u7406\u3092\u53c2\u8003\u306b\u958b\u767a\u3055\u308c\u305f\u30ed\u30dc\u30c3\u30c8\u52d5\u4f5c\u751f\u6210\u624b\u6cd5\u3067\u3042\u308b1\u3002 \u9060\u9694\u64cd\u4f5c\u306a\u3069\u3092\u7528\u3044\u3066\u5b9f\u4e16\u754c\u3067\u30ed\u30dc\u30c3\u30c8\u304c\u52d5\u4f5c\u3092\u7d4c\u9a13\u3057\u305f\u969b\u306e\u904b\u52d5\u3068\u611f\u899a\u306e\u6642\u7cfb\u5217\u60c5\u5831\u3092\u7528\u3044\u3066\u3001\u6642\u523b($t$)\u3068\u6b21\u6642\u523b($t+1$)\u306e\u611f\u899a\u904b\u52d5\u60c5\u5831\u306e\u4e88\u6e2c\u8aa4\u5dee\u304c\u6700\u5c0f\u306b\u306a\u308b\u3088\u3046\u306b\u518d\u8d77\u7d50\u5408\u578b\u795e\u7d4c\u56de\u8def\u30e2\u30c7\u30eb\uff08Recurrent Neural Network: RNN\uff09\u3092\u5b66\u7fd2\u3059\u308b\u3002 \u5b9f\u884c\u6642\u306b\u306f\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u611f\u899a\u904b\u52d5\u60c5\u5831\u304b\u3089\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u8fd1\u672a\u6765\u306e\u611f\u899a\u3068\u52d5\u4f5c\u3092\u4e88\u6e2c\u3057\u3001RNN\u5185\u306e\u30a2\u30c8\u30e9\u30af\u30bf\u306e\u5f15\u304d\u8fbc\u307f\u4f5c\u7528\u306b\u3088\u308a\u7d50\u679c\u7684\u306b\u4e88\u6e2c\u8aa4\u5dee\u304c\u6700\u5c0f\u306b\u306a\u308b\u3088\u3046\u306a\u52d5\u4f5c\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u4e0b\u56f3\u306f\u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2\u306e\u30ed\u30dc\u30c3\u30c8\u5b9f\u88c5\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u52d5\u4f5c\u6559\u793a\u3001\u5b66\u7fd2\u3001\u52d5\u4f5c\u751f\u6210\u306e3\u30b9\u30c6\u30c3\u30d7\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3002</p> <p></p>"},{"location":"overview/#dpl-teach","title":"\u52d5\u4f5c\u6559\u793a","text":"<p>\u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2\u3067\u306f\u30ed\u30dc\u30c3\u30c8\u306e\u611f\u899a\u904b\u52d5\u60c5\u5831\uff08\u904b\u52d5\u60c5\u5831\u30fb\u30bb\u30f3\u30b5\u60c5\u5831\u306a\u3069\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\uff09\u3092\u76f4\u63a5\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u52d5\u4f5c\u751f\u6210\u30e2\u30c7\u30eb\u3092\u30c7\u30fc\u30bf\u30c9\u30ea\u30d6\u30f3\u306b\u7372\u5f97\u3059\u308b\u3002 \u305d\u306e\u305f\u3081\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u306f\u30ed\u30dc\u30c3\u30c8\u306e\u8eab\u4f53\u3068\u74b0\u5883\u3068\u306e\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u306b\u95a2\u3059\u308b\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 \u307e\u305f\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u91cf\u3068\u8cea\u306f\u30e2\u30c7\u30eb\u306e\u6027\u80fd\u306b\u5927\u304d\u304f\u5f71\u97ff\u3059\u308b\u305f\u3081\u3001\u9ad8\u54c1\u8cea\u306a\u30c7\u30e2\u30f3\u30b9\u30c8\u30ec\u30fc\u30b7\u30e7\u30f3\u30c7\u30fc\u30bf\u3092\u52b9\u7387\u7684\u306b\u53ce\u96c6\u3067\u304d\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3002</p> <p>\u30b9\u30c6\u30c3\u30d7\uff11\u3067\u306f\u3001\u6240\u671b\u306e\u52d5\u4f5c\u3092\u30ed\u30dc\u30c3\u30c8\u306b\u6559\u793a\u3057\u3001\u305d\u306e\u6642\u306e\u611f\u899a\u904b\u52d5\u60c5\u5831\u3092\u4e00\u5b9a\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\u3067\u8a18\u9332\u3059\u308b\u3053\u3068\u3067\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3059\u308b\u3002 \u4ee3\u8868\u7684\u306a\u52d5\u4f5c\u6559\u793a\u65b9\u6cd5\u3068\u3057\u3066\u3001\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u306b\u3088\u308b\u52d5\u4f5c\u8a18\u8ff02 \u3001\u30c0\u30a4\u30ec\u30af\u30c8\u30c6\u30a3\u30fc\u30c1\u30f3\u30b03\u3001\u30c6\u30ec\u30aa\u30da\u30ec\u30fc\u30b7\u30e7\u30f31\u306a\u3069\u304c\u6319\u3052\u3089\u308c\u308b\u3002 \u30ed\u30dc\u30c3\u30c8\u7528\u30d7\u30ed\u30b0\u30e9\u30df\u30f3\u30b0\u8a00\u8a9e\u306a\u3069\u3092\u7528\u3044\u3066\u4e8b\u524d\u306b\u52d5\u4f5c\u3092\u8a18\u8ff0\u3057\u3066\u304a\u304f\u3053\u3068\u306f\u6700\u3082\u5358\u7d14\u306a\u6559\u793a\u624b\u6cd5\u3067\u3042\u308b\u304c\u3001\u9577\u671f\u306e\u52d5\u4f5c\u3092\u30ed\u30dc\u30c3\u30c8\u306b\u884c\u308f\u305b\u308b\u969b\u306b\u306f\u8a18\u8ff0\u304c\u8907\u96d1\u306b\u306a\u308a\u3001\u5b9f\u73fe\u3067\u304d\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 \u4e00\u65b9\u3001\u4eba\u9593\u304c\u30ed\u30dc\u30c3\u30c8\u3092\u64cd\u4f5c\u3057\u3066\u52d5\u4f5c\u6559\u793a\u3092\u884c\u3046\u3053\u3068\u3067\u3001\u7cbe\u5bc6\u306a\u30e2\u30c7\u30ea\u30f3\u30b0\u3084\u30d1\u30e9\u30e1\u30fc\u30bf\u8abf\u6574\u306a\u3069\u3092\u5fc5\u8981\u3068\u305b\u305a\u306b\u8a13\u7df4\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u4e2d\u3067\u3082\u3001\u5b9f\u969b\u306e\u30ed\u30dc\u30c3\u30c8\u8996\u70b9\u304b\u3089\u30de\u30cb\u30d4\u30e5\u30ec\u30fc\u30bf\u3092\u9060\u9694\u64cd\u4f5c\u3059\u308b\u624b\u6cd5\uff08Wizard of Oz4\uff09\u306f\u30bf\u30b9\u30af\u306b\u5bfe\u3059\u308b\u4eba\u9593\u306e\u64cd\u4f5c\u30b9\u30ad\u30eb\u3092\u76f4\u89b3\u7684\u306b\u30ed\u30dc\u30c3\u30c8\u306b\u6559\u793a\u3067\u304d\u308b\u305f\u3081\u671b\u307e\u3057\u3044\u3002 \u4f5c\u696d\u8005\u306f\u81ea\u5206\u81ea\u8eab\u306e\u8eab\u4f53\u3092\u64cd\u308b\u3088\u3046\u306b\u30ed\u30dc\u30c3\u30c8\u3092\u64cd\u7e26\u3059\u308b\u3053\u3068\u3067\u3001\u74b0\u5883\u3068\u306e\u81ea\u7136\u306a\u30a4\u30f3\u30bf\u30e9\u30af\u30b7\u30e7\u30f3\u3092\u884c\u3046\u3002 \u307e\u305f\u3001\u64cd\u4f5c\u8005\u306f\u30bb\u30f3\u30b5\u60c5\u5831\u304b\u3089\u5f97\u305f\u60c5\u5831\u3092\u3082\u3068\u306b\u52d5\u4f5c\u3092\u6c7a\u5b9a\u3059\u308b\u305f\u3081\u3001\u53d6\u5f97\u3057\u305f\u6559\u793a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306b\u306f\u52d5\u4f5c\u5b66\u7fd2\u306b\u5fc5\u8981\u306a\u60c5\u5831\u304c\u542b\u307e\u308c\u308b\u3068\u8003\u3048\u3089\u308c\u3001\u30e2\u30c7\u30eb\u306e\u8a13\u7df4\u306b\u6709\u52b9\u306a\u30c7\u30fc\u30bf\u306e\u7372\u5f97\u304c\u671f\u5f85\u3055\u308c\u308b\u3002</p>"},{"location":"overview/#dpl-train","title":"\u5b66\u7fd2","text":"<p>\u30b9\u30c6\u30c3\u30d72\u306e\u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2\u3067\u306f\u3001\u5b9f\u4e16\u754c\u3067\u30ed\u30dc\u30c3\u30c8\u304c\u52d5\u4f5c\u3092\u7d4c\u9a13\u3057\u305f\u6642\u306e\u904b\u52d5\u3068\u611f\u899a\u306e\u6642\u7cfb\u5217\u3092\u5b66\u7fd2\u3059\u308b\u3002 \u4eba\u304c\u30ed\u30dc\u30c3\u30c8\u3092\u8907\u6570\u56de\u9060\u9694\u64cd\u4f5c\u3057\u305f\u969b\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u30bb\u30f3\u30b5\u60c5\u5831\u3092\u5b66\u7fd2\u30c7\u30fc\u30bf\u3068\u3057\u3001\u73fe\u5728\u3068\u6b21\u6642\u523b\u306e\u8996\u899a\u8eab\u4f53\u60c5\u5831\u306e\u4e88\u6e2c\u8aa4\u5dee\u304c\u6700\u5c0f\u306b\u306a\u308b\u3088\u3046\u306b\u30e2\u30c7\u30eb\u3092\u5b66\u7fd2\u3059\u308b\u3002 \u5177\u4f53\u7684\u306b\u306f\u3001\u73fe\u5728\u306e\u30ed\u30dc\u30c3\u30c8\u72b6\u614b\uff08$i_t, s_t$\uff09\u3092\u30e2\u30c7\u30eb\u306b\u5165\u529b\u3057\u3001\u6b21\u30b9\u30c6\u30c3\u30d7\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u4e88\u6e2c\u72b6\u614b\uff08$\\hat i_t, \\hat s_{t+1}$ \uff09\u3068\u771f\u5024\uff08$i_{t+1}, s_{t+1}$\uff09\u304c\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u5b66\u7fd2\u3059\u308b\u3002 \u5b66\u7fd2\u30c7\u30fc\u30bf\u306b\u306f\u6b63\u89e3\u30e9\u30d9\u30eb\u304c\u3064\u3051\u3089\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u3053\u306e\u6559\u5e2b\u3042\u308a\u5b66\u7fd2\u306b\u3088\u308a\u30ed\u30dc\u30c3\u30c8\u52d5\u4f5c\u751f\u6210\u306b\u91cd\u8981\u306a\u7279\u5fb4\u91cf\u62bd\u51fa\u3084\u30e2\u30fc\u30c0\u30eb\u9593\u306e\u95a2\u4fc2\u6027\u306e\u5b66\u7fd2\u3092\u884c\u3046\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u5f93\u6765\u306e\u30ed\u30dc\u30c6\u30a3\u30af\u30b9\u3067\u5fc5\u8981\u3067\u3042\u3063\u305f\u74b0\u5883\u306e\u7269\u7406\u30e2\u30c7\u30eb\u306e\u8a73\u7d30\u306a\u8a2d\u8a08\u3084\u3001\u8907\u6570\u306e\u30e2\u30c0\u30ea\u30c6\u30a3\u306b\u307e\u305f\u304c\u308b\u74b0\u5883\u8a8d\u8b58\u3068\u52d5\u4f5c\u751f\u6210\u306e\u6a5f\u80fd\u3092\u7d71\u5408\u3057\u305f\u30c0\u30a4\u30ca\u30df\u30c3\u30af\u3092\u7372\u5f97\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p>\u30e2\u30c7\u30eb\u306f\u30ed\u30dc\u30c3\u30c8\u306e\u611f\u899a\u904b\u52d5\u60c5\u5831\u3092\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306b\u3001\u7279\u5fb4\u91cf\u62bd\u51fa\u3068\u6642\u7cfb\u5217\u5b66\u7fd2\u90e8\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3002 \u7279\u5fb4\u91cf\u62bd\u51fa\u90e8\u306f\u30ed\u30dc\u30c3\u30c8\u304c\u53d6\u5f97\u3057\u305f\u30bb\u30f3\u30b5\u60c5\u5831\u304b\u3089\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3057\u3001\u6642\u7cfb\u5217\u5b66\u7fd2\u90e8\u3067\u306f\u62bd\u51fa\u3057\u305f\u7279\u5fb4\u91cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u306a\u3069\u3067\u8868\u73fe\u3055\u308c\u308b\u30ed\u30dc\u30c3\u30c8\u72b6\u614b\u3092\u7d71\u5408\u3057\u305f\u611f\u899a\u904b\u52d5\u60c5\u5831\u3092\u5b66\u7fd2\u3059\u308b\u3002 \u672c\u30de\u30cb\u30e5\u30a2\u30eb\u3067\u306f\u3001\u7279\u5fb4\u91cf\u62bd\u51fa\u90e8\u3068\u6642\u7cfb\u5217\u5b66\u7fd2\u90e8\u3092End-End\u3067\u5b66\u7fd2\u3055\u305b\u308b\u65b9\u6cd5\u3092 CNNRNN\u3001SARNN\u306b\u3001\u72ec\u7acb\u3057\u3066\u5b66\u7fd2\u3055\u305b\u308b\u65b9\u6cd5\u3092CAE-RNN \u306b\u3001\u305d\u308c\u305e\u308c\u306e\u5229\u70b9\u30fb\u6b20\u70b9\u3092\u542b\u3081\u3066\u8ff0\u3079\u308b\u3002</p>"},{"location":"overview/#dpl-execute","title":"\u63a8\u8ad6","text":"<p>\u30b9\u30c6\u30c3\u30d73\u306e\u52d5\u4f5c\u751f\u6210\u3067\u306f\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u611f\u899a\u904b\u52d5\u60c5\u5831\u304b\u3089\u30ea\u30a2\u30eb\u30bf\u30a4\u30e0\u306b\u8fd1\u672a\u6765\u306e\u611f\u899a\u3068\u904b\u52d5\u3092\u4e88\u6e2c\u3059\u308b\u3002 \u5177\u4f53\u7684\u306b\u306f\u3001\u30e2\u30c7\u30eb\u306e\u524d\u5411\u304d\u8a08\u7b97\u3092\u6bce\u30b9\u30c6\u30c3\u30d7\u884c\u3046\u3053\u3068\u3067\u3001RNN\u306f\u5185\u90e8\u3067\u4fdd\u6301\u3059\u308b\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u60c5\u5831\uff08$c_t$\uff09\u3068\u5165\u529b\u60c5\u5831\uff08$x_t$\uff09\u306b\u57fa\u3065\u3044\u3066\u3001\u6b21\u30b9\u30c6\u30c3\u30d7\u306e\u30ed\u30dc\u30c3\u30c8\u72b6\u614b\uff08$\\hat x_{t+1} $\uff09\u3092\u4e88\u6e2c\u3059\u308b\u3002 \u305d\u306e\u5f8c\u3001RNN\u306e\u4e88\u6e2c\u5024\u3092\u76ee\u6a19\u72b6\u614b\u3068\u3057\u3066\u5404\u95a2\u7bc0\u306e\u5236\u5fa1\u3092\u884c\u3046\u3002 \u4e0a\u8a18\u306e\u4f5c\u696d\u3092\u30aa\u30f3\u30e9\u30a4\u30f3\u3067\u7e70\u308a\u8fd4\u3057\u884c\u3046\u3053\u3068\u3067\u3001\u9010\u6b21\u7684\u306b\u30ed\u30dc\u30c3\u30c8\u304b\u3089\u30bb\u30f3\u30b5\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3001\u30e2\u30c7\u30eb\u306b\u3088\u308b\u4e88\u6e2c\u3001\u30ed\u30dc\u30c3\u30c8\u3078\u306e\u5236\u5fa1\u30b3\u30de\u30f3\u30c9\u306e\u9001\u4fe1\u3092\u884c\u3046\u3002 \u3053\u306e\u4e88\u6e2c\u7d50\u679c\u3084\u5b9f\u74b0\u5883\u3068\u306e\u4e88\u6e2c\u8aa4\u5dee\u306b\u57fa\u3065\u3044\u3066\u3001\u30ed\u30dc\u30c3\u30c8\u306f\u5165\u529b\u306b\u5bfe\u3057\u3066\u52d5\u7684\u306b\u5bfe\u5fdc\u3059\u308b\u52d5\u4f5c\u3092\u751f\u6210\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p>\u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2\u30e2\u30c7\u30eb\u3092\u52d5\u4f5c\u751f\u6210\u306b\u7528\u3044\u308b\u5229\u70b9\u306e\u4e00\u3064\u306b\u3001\u30aa\u30f3\u30e9\u30a4\u30f3\u6642\u306b\u304a\u3051\u308b\u52d5\u4f5c\u306e\u751f\u6210\u901f\u5ea6\u304c\u6319\u3052\u3089\u308c\u308b\u3002 \u63d0\u6848\u3059\u308b\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u306f\u8efd\u91cf\u306a\u30e2\u30c7\u30eb\u304b\u3089\u69cb\u6210\u3055\u308c\u3066\u304a\u308a\u3001\u52d5\u4f5c\u751f\u6210\u6642\u306b\u5fc5\u8981\u306a\u8a08\u7b97\u6642\u9593\u30fb\u30b3\u30b9\u30c8\u304c\u5c11\u306a\u3044\u3002 \u3053\u308c\u307e\u3067\u306e\u5404\u6a5f\u80fd\u3092\u30b3\u30f3\u30dd\u30fc\u30cd\u30f3\u30c8\u5316\u3057\u3066\u5b9f\u88c5\u3059\u308b\u3053\u3068\u3067\u3001\u30bf\u30b9\u30af\u3084\u30ed\u30dc\u30c3\u30c8\u30cf\u30fc\u30c9\u306e\u5909\u66f4\u30fb\u30c7\u30d0\u30a4\u30b9\u306e\u8ffd\u52a0\u306a\u3069\u306b\u5fdc\u3058\u3066\u5b9f\u88c5\u3057\u305f\u30b7\u30b9\u30c6\u30e0\u3092\u5bb9\u6613\u306b\u4f7f\u3044\u307e\u308f\u3059\u3053\u3068\u3082\u53ef\u80fd\u3067\u3042\u308b5\u3002</p> <ol> <li> <p>Hiroshi Ito, Kenjiro Yamamoto, Hiroki Mori, and Tetsuya Ogata. Efficient multitask learning with an embodied predictive model for door opening and entry with whole-body control. Science Robotics, 7(65):eaax8177, 2022.\u00a0\u21a9\u21a9</p> </li> <li> <p>Kanata Suzuki, Momomi Kanamura, Yuki Suga, Hiroki Mori, and Tetsuya Ogata. In-air knotting of rope using dual-arm robot based on deep learning. In 2021 IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS), 6724\u20136731. IEEE, 2021.\u00a0\u21a9</p> </li> <li> <p>Hideyuki Ichiwara, Hiroshi Ito, Kenjiro Yamamoto, Hiroki Mori, and Tetsuya Ogata. Contact-rich manipulation of a flexible object based on deep predictive learning using vision and tactility. In 2022 International Conference on Robotics and Automation (ICRA), 5375\u20135381. IEEE, 2022.\u00a0\u21a9</p> </li> <li> <p>Pin-Chu Yang, Kazuma Sasaki, Kanata Suzuki, Kei Kase, Shigeki Sugano, and Tetsuya Ogata. Repeatable folding task by humanoid robot worker using deep learning. IEEE Robotics and Automation Letters, 2(2):397\u2013403, 2016.\u00a0\u21a9</p> </li> <li> <p>Momomi Kanamura, Kanata Suzuki, Yuki Suga, and Tetsuya Ogata. Development of a basic educational kit for robotic system with deep neural networks. Sensors, 21(11):3804, 2021.\u00a0\u21a9</p> </li> </ol>"},{"location":"install/install-software/","title":"\u6982\u8981","text":"<p>EPIL\u306f\u3001\u516c\u5f0f\u7684\u306bLinux\uff08Ubuntu 20.04\uff09\u3068Python3.8\u3092\u30b5\u30dd\u30fc\u30c8\u3057\u3066\u3044\u308b\u3002 \u6df1\u5c64\u5b66\u7fd2\u30d5\u30ec\u30fc\u30e0\u30ef\u30fc\u30af\u3068\u3057\u3066\u306fPytorch\u3092\u63a1\u7528\u3057\u3066\u304a\u308a\u3001\u6700\u65b0\u7248\u306e pytorch \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3059\u308b\u3002 \u7279\u306b\u3001Pytorch 2.0\u4ee5\u4e0a\u306f\u3001\u4e8b\u524d\u306b\u30b3\u30f3\u30d1\u30a4\u30eb\u3055\u308c\u305f\u3053\u3068\u306b\u3088\u308a\u3001\u5b66\u7fd2\u901f\u5ea6\u3092\u5411\u4e0a\u3055\u305b\u3001GPU\u30e1\u30e2\u30ea\u306e\u4f7f\u7528\u7387\u3092\u4f4e\u6e1b\u3055\u305b\u308b\u305f\u3081\u3001\u5927\u898f\u6a21\u306a\u30e2\u30c7\u30eb\u306e\u5b66\u7fd2\u3092\u9ad8\u901f\u306b\u5b9f\u884c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u306a\u304a\u3001CUDA\u3084Nvidia\u30c9\u30e9\u30a4\u30d0\u30fc\u306f\u5229\u7528\u3059\u308bPytorch\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u306b\u5408\u308f\u305b\u3066\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002</p>"},{"location":"install/install-software/#_2","title":"\u30d5\u30a1\u30a4\u30eb","text":"<p>\u672c\u30e9\u30a4\u30d6\u30e9\u30ea\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u69cb\u6210\u3055\u308c\u308b\u3002 <code>layer</code> \u3068 <code>model</code> \u306e\u4e00\u90e8\u306f torchinfo\u3092\u7528\u3044\u3066\u3001\u30e2\u30c7\u30eb\u69cb\u9020\u3092\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u3067\u691c\u8a3c\u3092\u884c\u3063\u3066\u3044\u308b\u3002</p> <ul> <li>data: \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3084\u3001\u30e2\u30c7\u30eb\u5b66\u7fd2\u306e\u305f\u3081\u306eDataloader</li> <li>layer: \u968e\u5c64\u578bRNN\u3084\u7a7a\u9593\u6ce8\u610f\u6a5f\u69cb\u306a\u3069\u3092\u5b9f\u88c5</li> <li>model: \u8907\u6570\u306e\u52d5\u4f5c\u751f\u6210\u30e2\u30c7\u30eb\u3092\u5b9f\u88c5\u3001\u5165\u529b\u306f\u95a2\u7bc0\u89d2\u5ea6\uff08\u4efb\u610f\u306e\u81ea\u7531\u5ea6\uff09\u3068\u30ab\u30e9\u30fc\u753b\u50cf\uff08128x128\u30d4\u30af\u30bb\u30eb\uff09</li> <li>test: \u30c6\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0</li> <li>utils: \u6b63\u898f\u5316\u3084\u53ef\u8996\u5316\u3001\u5f15\u6570\u51e6\u7406\u306a\u3069\u306e\u95a2\u6570</li> </ul>"},{"location":"install/install-software/#pip_install","title":"pip","text":"<p>Github\u304b\u3089EIPL\u306e\u30ea\u30dd\u30b8\u30c8\u30ea\u30af\u30ed\u30fc\u30f3\u3057\u3001pip\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3066\u74b0\u5883\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002</p> <pre><code>mkdir ~/work/\ncd ~/work/\ngit clone https://github.com/ogata-lab/eipl.git\ncd eipl\npip install -r requirements.txt\npip install -e .\n</code></pre>"},{"location":"install/install-software/#docker","title":"docker","text":"<p>Note</p> <p>\u73fe\u5728\u5bfe\u5fdc\u4e2d\u3002</p>"},{"location":"install/quick-start/","title":"\u30af\u30a4\u30c3\u30af\u30b9\u30bf\u30fc\u30c8","text":"<p>\u3053\u3053\u3067\u306f\u3001EIPL\u306e\u74b0\u5883\u304c\u9069\u5207\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u305f\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u5b66\u7fd2\u6e08\u307f\u91cd\u307f\u3068\u7a7a\u9593\u6ce8\u610f\u6a5f\u69cb\u4ed8\u304d\u52d5\u4f5c\u751f\u6210\u30e2\u30c7\u30eb\uff08SARNN\uff1aSpatial Attention with Recurrent Neural Network\uff09\u3092\u7528\u3044\u3066\u691c\u8a3c\u3092\u884c\u3046\u3002 \u30e2\u30c7\u30eb\u306e\u5177\u4f53\u7684\u306a\u5b66\u7fd2\u65b9\u6cd5\u3084\u30e2\u30c7\u30eb\u306e\u8a73\u7d30\u306b\u3064\u3044\u3066\u306f\u6b21\u7ae0\u4ee5\u964d\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"install/quick-start/#_2","title":"\u63a8\u8ad6","text":"<p>\u4ee5\u4e0b\u306b\u3001\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\u3068\u3092\u7528\u3044\u305fSARNN\u306e\u63a8\u8ad6\u65b9\u6cd5\u3092\u793a\u3059\u3002 \u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u30d5\u30a9\u30eb\u30c0\u5185\u306e<code>test.py</code>\u3092\u5b9f\u884c\u3059\u308b\u3068\u63a8\u8ad6\u7d50\u679c\u304c<code>output</code>\u30d5\u30a9\u30eb\u30c0\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3002 \u3053\u306e\u3068\u304d\u3001<code>--pretrained</code>\u5f15\u6570\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u5b66\u7fd2\u6e08\u307f\u91cd\u307f\u3068\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u304c\u81ea\u52d5\u7684\u306b\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3055\u308c\u308b\u3002</p> <pre><code>$ cd eipl/tutorials/sarnn\n$ python3 ./bin/test.py --pretrained\n$ ls ./output/\nSARNN_20230514_2312_17_4_1.0.gif\n</code></pre>"},{"location":"install/quick-start/#_3","title":"\u7d50\u679c","text":"<p>\u4e0b\u56f3\u306f\u63a8\u8ad6\u306e\u7d50\u679c\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u56f3\u4e2d\u5185\u306e\u9752\u70b9\u306f\u753b\u50cf\u304b\u3089\u62bd\u51fa\u3057\u305f\u6ce8\u610f\u70b9\u3001\u305d\u3057\u3066\u8d64\u70b9\u306fRNN\u304c\u4e88\u6e2c\u3057\u305f\u6ce8\u610f\u70b9\u3067\u3042\u308a\u3001\u30ed\u30dc\u30c3\u30c8\u30cf\u30f3\u30c9\u3068\u628a\u6301\u5bfe\u8c61\u7269\u306b\u7740\u76ee\u3057\u306a\u304c\u3089\u95a2\u7bc0\u89d2\u5ea6\u3092\u4e88\u6e2c\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002</p> <p></p>"},{"location":"install/quick-start/#_4","title":"\u30d8\u30eb\u30d7","text":"<p>\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u9069\u5207\u306b\u5b9f\u884c\u3067\u304d\u306a\u3044\u5834\u5408\u3001\u4ee5\u4e0b3\u3064\u306e\u539f\u56e0\u304c\u8003\u3048\u3089\u308c\u308b\u3002</p> <ol> <li> <p>\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u30a8\u30e9\u30fc     \u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u9069\u5207\u306b\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001     <code>pip freeze</code>\u30b3\u30de\u30f3\u30c9\u3092\u7528\u3044\u3066\u3001\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002     \u3082\u3057\u30e9\u30a4\u30d6\u30e9\u30ea\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u5834\u5408\u3001\u305d\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u60c5\u5831\u304c\u8868\u793a\u3055\u308c\u307e\u3059\u3002     \u8868\u793a\u3055\u308c\u306a\u3051\u308c\u3070\u3001\u30d1\u30c3\u30b1\u30fc\u30b8\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044\u53ef\u80fd\u6027\u304c\u3042\u308b\u305f\u3081\u3001\u518d\u5ea6\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u624b\u9806\u3092\u78ba\u8a8d\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code>pip freeze | grep eipl\n</code></pre> </li> <li> <p>\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30a8\u30e9\u30fc</p> <p>Proxy\u306a\u3069\u304c\u539f\u56e0\u3067\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3084\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u3092\u7528\u3044\u305f\u63a8\u8ad6\u304c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001\u91cd\u307f\u30d5\u30a1\u30a4\u30eb\u3068\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u624b\u52d5\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001<code>~/.eipl/</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306b\u4fdd\u5b58\u3057\u305f\u5f8c\u306b\u3001\u5c55\u958b\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p> <pre><code>$ cd ~/\n$ mkdir .eipl\n$ cd .eipl\n$ # copy grasp_bottle.tar and pretrained.tar to ~/.eipl/ directory\n$ tar xvf grasp_bottle.tar &amp;&amp; tar xvf pretrained.tar\n$ ls grasp_bottle/*\ngrasp_bottle/joint_bounds.npy\n...\n$ ls pretrained/*\npretrained/CAEBN:\nargs.json  model.pth\n...\n</code></pre> </li> <li> <p>\u63cf\u753b\u30a8\u30e9\u30fc</p> <p>\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u5f8c\u306b\u4e0b\u8a18\u306e\u3088\u3046\u306a\u30a8\u30e9\u30fc\u304c\u8868\u793a\u3055\u308c\u308b\u5834\u5408\u3001\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u30d5\u30a1\u30a4\u30eb\u306e\u751f\u6210\u306b\u5931\u6557\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u3002 \u3053\u306e\u5834\u5408\u3001\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u63cf\u753b\u6642\u306ewriter\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u89e3\u6c7a\u3059\u308b\u3002</p> <pre><code>File \"/usr/lib/python3/dist-packages/matplotlib/animation.py\", line 410, in cleanup\n    raise subprocess.CalledProcessError(\nsubprocess.CalledProcessError: Command '['ffmpeg', '-f', 'rawvideo', '-vcodec', 'rawvideo', '-s', '720x300', '-pix_fmt', 'rgba', '-r', '52.63157894736842', '-loglevel', 'error', '-i', 'pipe:', '-vcodec', 'h264', '-pix_fmt', 'yuv420p', '-y', './output/CAE-RNN-RT_20230510_0134_03_0_0.8.gif']' returned non-zero exit status 1.\n</code></pre> <p>\u521d\u3081\u306b\u3001apt\u3092\u7528\u3044\u3066imagemagick\u3068ffmpeg\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3002</p> <pre><code>$ sudo apt install imagemagick\n$ sudo apt install ffmpeg\n</code></pre> <p>\u6b21\u306b\u3001<code>test.py</code>\u306e\u6700\u4e0b\u90e8\u306e\u30b3\u30fc\u30c9\u3092\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u7de8\u96c6\u3059\u308b\u3053\u3068\u3067writer\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <pre><code># imagemagick\u3092\u7528\u3044\u308b\u5834\u5408\nani.save( './output/SARNN_{}_{}_{}.gif'.format(params['tag'], idx, args.input_param), writer=\"imagemagick\")\n\n# ffmpeg\u3092\u7528\u3044\u308b\u5834\u5408\nani.save( './output/SARNN_{}_{}_{}.gif'.format(params['tag'], idx, args.input_param), writer=\"ffmpeg\")\n</code></pre> </li> </ol>"},{"location":"model/SARNN/","title":"\u30e2\u30c7\u30eb\u6982\u8981","text":"<p>SARNN\u306f\u3001\u753b\u50cf\u304b\u3089\u30bf\u30b9\u30af\u306b\u91cd\u8981\u306a\u4f4d\u7f6e\uff08\u4f5c\u696d\u5bfe\u8c61\u7269\u3084\u30a2\u30fc\u30e0\uff09\u306e\u7a7a\u9593\u5ea7\u6a19\u3092\u300c\u660e\u793a\u7684\u300d\u306b\u62bd\u51fa\u3057\u3001\u305d\u306e\u5ea7\u6a19\u3068\u30ed\u30dc\u30c3\u30c8\u306e\u95a2\u7bc0\u89d2\u5ea6\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3067\u3001\u5bfe\u8c61\u7269\u306e\u4f4d\u7f6e\u5909\u5316\u306b\u5bfe\u3059\u308b\u30ed\u30d0\u30b9\u30c8\u6027\u3092\u5927\u5e45\u306b\u5411\u4e0a\u3055\u305b\u305f1\u3002 \u4e0b\u56f3\u306fSARNN\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u30ab\u30e1\u30e9\u753b\u50cf $i_t$ \u304b\u3089\u753b\u50cf\u7279\u5fb4\u91cf $f_t$ \u3068\u7269\u4f53\u306e\u4f4d\u7f6e\u5ea7\u6a19 $p_t$ \u3092\u62bd\u51fa\u3059\u308bEncoder\u90e8\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u95a2\u7bc0\u89d2\u5ea6 $a_t$ \u3068\u7269\u4f53\u306e\u4f4d\u7f6e\u60c5\u5831\u306e\u6642\u7cfb\u5217\u5909\u5316\u3092\u5b66\u7fd2\u3059\u308bRecurrent\u90e8\u3001\u305d\u3057\u3066\u753b\u50cf\u7279\u5fb4\u91cf $f_t$ \u3068\u30d2\u30fc\u30c8\u30de\u30c3\u30d7 $\\hat h_{t+1}$ \u306b\u57fa\u3065\u3044\u3066\u753b\u50cf\u3092\u518d\u69cb\u6210\u3059\u308bDecoder\u90e8\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3002 Encoder\u4e0a\u6bb5\u3068Decoder\u306eCNN \u5c64\uff08Convolution layer and Transposed convolutional layer\uff09\u306f\u3001\u753b\u50cf\u306e\u7279\u5fb4\u91cf\u62bd\u51fa\u3068\u518d\u69cb\u6210\u3092\u3059\u308b\u3053\u3068\u3067\u7269\u4f53\u306e\u8272\u3084\u5f62\u306b\u95a2\u3059\u308b\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\u3002 \u4e0b\u6bb5\u306eCNN\u306fSpatial Softmax\u5c64\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u7269\u4f53\u306e2D\u4f4d\u7f6e\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\u3002 Recurrent\u90e8\u306f\u3001\u7269\u4f53\u306e\u4f4d\u7f6e\u60c5\u5831 $p_{t+1}$ \u306e\u307f\u3092\u4e88\u6e2c\u3057\u3066\u3044\u308b\u305f\u3081\u3001Decoder\u3067\u753b\u50cf\u3092\u518d\u69cb\u6210\u3059\u308b\u3060\u3051\u306e\u5341\u5206\u306a\u60c5\u5831\u306f\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u3002 \u305d\u3053\u3067\u4e88\u6e2c\u4f4d\u7f6e\u60c5\u5831 $p_{t+1}$ \u3092\u4e2d\u5fc3\u3068\u3057\u305f\u30d2\u30fc\u30c8\u30de\u30c3\u30d7 $\\hat h_{t+1}$ \u3092\u751f\u6210\u3057\u3001\u4e0a\u6bb5\u306eCNN\u3067\u62bd\u51fa\u3057\u305f\u753b\u50cf\u7279\u5fb4\u91cf $f_t$ \u3068\u639b\u3051\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u3001\u4e88\u6e2c\u6ce8\u610f\u70b9\u306e\u5468\u8fba\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066\u4e88\u6e2c\u753b\u50cf $\\hat i_{t+1}$ \u3092\u751f\u6210\u3059\u308b\u3002</p> <p>\u3053\u3053\u3067\u306f\u3001SARNN\u306e\u7279\u5fb4\u7684\u306a\u6a5f\u80fd\u3067\u3042\u308b\u7a7a\u9593\u7684\u6ce8\u610f\u6a5f\u69cb \u3001\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u751f\u6210\u6a5f\u69cb\u3001\u8aa4\u5dee\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3001\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5\u306e\u5b9f\u88c5\u65b9\u6cd5\u3068\u30e2\u30c7\u30eb\u30af\u30e9\u30b9\u3092\u793a\u3059\u3002</p> <p></p>"},{"location":"model/SARNN/#spatial_softmax","title":"\u7a7a\u9593\u7684\u6ce8\u610f\u6a5f\u69cb","text":"<p>\u7a7a\u9593\u7684\u6ce8\u610f\u6a5f\u69cb\u306f\u3001\u7279\u9577\u30de\u30c3\u30d7\u306bSoftmax\u3092\u304b\u3051\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u91cd\u8981\u306a\u60c5\u5831\uff08\u30d4\u30af\u30bb\u30eb\u5024\u304c\u5927\u304d\u3044\uff09\u3092\u5f37\u8abf\u3057\u305f\u306e\u3061\u306b\u3001Position-Encoding\u3092\u7528\u3044\u3066\u5f37\u8abf\u3055\u308c\u305f\u30d4\u30af\u30bb\u30eb\u306e\u4f4d\u7f6e\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\u3002 \u4e0b\u56f3\u306f\u3001\u7a7a\u9593\u7684\u6ce8\u610f\u6a5f\u69cb\u306e\u51e6\u7406\u7d50\u679c\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u30e9\u30f3\u30c0\u30e0\u306b\u751f\u6210\u3057\u305f2\u3064\u306e\u30ac\u30a6\u30b9\u5206\u5e03\u3092\u7528\u3044\u3066\u751f\u6210\u3057\u305f\u300c\u7591\u4f3c\u300d\u7279\u5fb4\u30de\u30c3\u30d7\u5bfe\u3057\u3001Softmax\u3092\u304b\u3051\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u91cd\u8981\u306a\u4f4d\u7f6e\u60c5\u5831\uff08\u8d64\u70b9\uff09\u3092\u62bd\u51fa\u3059\u308b\u3002 \u3053\u306e\u3068\u304d\u3001CNN\u306e\u7279\u5fb4\u30de\u30c3\u30d7\u306b\u306f\u591a\u69d8\u306a\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5358\u7d14\u306bSoftmax\u3092\u304b\u3051\u5408\u308f\u305b\u305f\u3060\u3051\u3067\u306f\u5f37\u8abf\u3055\u308c\u306a\u3044\u305f\u3081\u3001\u6e29\u5ea6\u4ed8\u304dSoftmax \u3092\u7528\u3044\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3042\u308b\u3002 \u6e29\u5ea6\u4ed8\u304dSoftmax\u306e\u52b9\u679c\u306b\u3064\u3044\u3066\u306f\u3001\u4ee5\u4e0b\u30b5\u30f3\u30d7\u30eb\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30d1\u30e9\u30e1\u30fc\u30bf <code>temperature</code> \u3092\u8abf\u6574\u3057\u3066\u78ba\u8a8d\u3059\u308b\u3068\u3088\u3044\u3002 \u307e\u305f\u56f3\u4e2d\u306e\u8d64\u70b9\u306fSpatialSoftmax\u3067\u62bd\u51fa\u3057\u305f\u4f4d\u7f6e\u3092\u8868\u3057\u3066\u304a\u308a\u3001\u4e00\u65b9\u306e\u30ac\u30a6\u30b9\u5206\u5e03\u306e\u4e2d\u5fc3\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u9069\u5207\u306b\u4f4d\u7f6e\u60c5\u5831\u304c\u62bd\u51fa\u3067\u304d\u3066\u3044\u308b\u3002</p> <p></p> [SOURCE] SpatialSoftmax.py<pre><code>class SpatialSoftmax(nn.Module):\ndef __init__(self, width: int, height: int, temperature=1e-4, normalized=True):\nsuper(SpatialSoftmax, self).__init__()\nself.width = width\nself.height = height\nif temperature is None:\nself.temperature = torch.nn.Parameter(torch.ones(1))\nelse:\nself.temperature = temperature\n_, pos_x, pos_y = create_position_encoding(width, height, normalized=normalized)\nself.register_buffer(\"pos_x\", pos_x)\nself.register_buffer(\"pos_y\", pos_y)\ndef forward(self, x):\nbatch_size, channels, width, height = x.shape\nassert height == self.height\nassert width == self.width\n# flatten, apply softmax\nlogit = x.reshape(batch_size, channels, -1)\natt_map = torch.softmax(logit / self.temperature, dim=-1)\n# compute expectation\nexpected_x = torch.sum(self.pos_x * att_map, dim=-1, keepdim=True)\nexpected_y = torch.sum(self.pos_y * att_map, dim=-1, keepdim=True)\nkeys = torch.cat([expected_x, expected_y], -1)\n# keys [[x,y], [x,y], [x,y],...]\nkeys = keys.reshape(batch_size, channels, 2)\natt_map = att_map.reshape(-1, channels, width, height)\nreturn keys, att_map\n</code></pre>"},{"location":"model/SARNN/#heatmap","title":"\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u751f\u6210\u6a5f\u69cb","text":"<p>\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u751f\u6210\u6a5f\u69cb\u306f\u3001\u4f4d\u7f6e\u60c5\u5831\uff08\u7279\u5b9a\u306e\u30d4\u30af\u30bb\u30eb\u5ea7\u6a19\uff09\u3092\u4e2d\u5fc3\u3068\u3057\u305f\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3092\u751f\u6210\u3059\u308b\u3002 \u4e0b\u56f3\u306f\u3001\u7a7a\u9593\u7684\u6ce8\u610f\u6a5f\u69cb\u3067\u62bd\u51fa\u3057\u305f\u4f4d\u7f6e\uff08\u56f3\u4e2d\u8d64\u70b9\uff09\u3092\u4e2d\u5fc3\u306b\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u751f\u6210\u6a5f\u69cb\u304c\u751f\u6210\u3057\u305f\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u3092\u8868\u3057\u3066\u3044\u308b\u3002 \u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u306e\u5927\u304d\u3055\u306f\u3001\u30d1\u30e9\u30e1\u30fc\u30bf <code>heatmap_size</code> \u3067\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308a\u3001\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u30b5\u30a4\u30ba\u304c\u5c0f\u3055\u3044\u3068\u6ce8\u610f\u70b9\u8fd1\u508d\u306e\u60c5\u5831\u306e\u307f\u3001\u5927\u304d\u3044\u3068\u5468\u8fba\u306e\u60c5\u5831\u3082\u4e00\u90e8\u52a0\u5473\u3057\u3066\u753b\u50cf\u751f\u6210\u3092\u884c\u3046\u3002 \u306a\u304a\u3001\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u304c\u3042\u307e\u308a\u306b\u3082\u5c0f\u3055\u3044\u3068\u9069\u5207\u306a\u4e88\u6e2c\u753b\u50cf $\\hat i_{t+1}$ \u306e\u751f\u6210\u304c\u3067\u304d\u306a\u3044\u3001\u307e\u305f\u5927\u304d\u3059\u304e\u308b\u3068\u5468\u56f2\u306e\u74b0\u5883\u5909\u5316\uff08\u80cc\u666f\u3084\u969c\u5bb3\u7269\uff09\u306b\u654f\u611f\u306b\u306a\u308b\u305f\u3081\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u8abf\u6574\u304c\u5fc5\u8981\u3067\u3042\u308b\u3002</p> <p></p> [SOURCE] InverseSpatialSoftmax.py<pre><code>class InverseSpatialSoftmax(nn.Module):\ndef __init__(self, width: int, height: int, heatmap_size=0.1, normalized=True):\nsuper(InverseSpatialSoftmax, self).__init__()\nself.width = width\nself.height = height\nself.normalized = normalized\nself.heatmap_size = heatmap_size\npos_xy, _, _ = create_position_encoding(width, height, normalized=normalized)\nself.register_buffer(\"pos_xy\", pos_xy)\ndef forward(self, keys):\nsquared_distances = torch.sum(\ntorch.pow(self.pos_xy[None, None] - keys[:, :, :, None, None], 2.0), axis=2\n)\nheatmap = torch.exp(-squared_distances / self.heatmap_size)\nreturn heatmap\n</code></pre>"},{"location":"model/SARNN/#loss_scheduler","title":"\u8aa4\u5dee\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9","text":"<p>\u8aa4\u5dee\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3068\u306f\u3001\u6ce8\u610f\u70b9\u306e\u4e88\u6e2c\u8aa4\u5dee\u3092\u30a8\u30dd\u30c3\u30af\u306b\u5fdc\u3058\u3066\u5f90\u3005\u306b\u91cd\u307f\u4ed8\u3051\u3059\u308b <code>callback</code> \u3067\u3042\u308a\u3001SARNN\u3092\u5b66\u7fd2\u3055\u305b\u308b\u4e0a\u3067\u91cd\u8981\u306a\u6a5f\u80fd\u3067\u3042\u308b\u3002 \u4e0b\u56f3\u306f\u5f15\u6570 <code>curve_name</code> \u3054\u3068\u306e\u91cd\u307f\u4ed8\u3051\u66f2\u7dda\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u6a2a\u8ef8\u306f\u30a8\u30dd\u30c3\u30af\u6570\u3001\u7e26\u8ef8\u306f\u91cd\u307f\u4ed8\u3051\u306e\u5024\u3067\u3042\u308b\u3002 \u8aa4\u5dee\u306e\u91cd\u307f\u4ed8\u3051\u306f0\u304b\u3089\u59cb\u307e\u308a\u3001 <code>decay_end</code> \uff08\u4f8b\uff1a100\uff09\u3067\u8a2d\u5b9a\u3057\u305f\u30a8\u30dd\u30c3\u30af\u3067\u91cd\u307f\u4ed8\u3051\u306e\u6700\u5927\u5024\uff08\u4f8b\uff1a0.1\uff09\u3092\u8fd4\u3059\u3002 \u306a\u304a\u3001\u91cd\u307f\u4ed8\u3051\u6700\u5927\u5024\u306f <code>__call__</code> \u30e1\u30bd\u30c3\u30c9\u3067\u6307\u5b9a\u3059\u308b\u3002 \u672c\u30af\u30e9\u30b9\u3067\u306f\u3001\u56f3\u4e2d\u306b\u793a\u30595\u7a2e\u985e\u306e\u66f2\u7dda(\u7dda\u5f62\u88dc\u9593\u3001S\u5b57\u88dc\u5b8c\u3001\u9006S\u5b57\u88dc\u5b8c\u3001\u6e1b\u901f\u88dc\u5b8c\u3001\u52a0\u901f\u88dc\u5b8c)\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002</p> <p></p> <p>SARNN\u306e\u5b66\u7fd2\u306b\u8aa4\u5dee\u30b9\u30b1\u30b8\u30e5\u30fc\u30e9\u3092\u7528\u3044\u308b\u7406\u7531\u3068\u3057\u3066\u3001\u5b66\u7fd2\u521d\u671f\u6bb5\u968e\u3067\u306fCNN\u306e\u30d5\u30a3\u30eb\u30bf\u3092\u300c\u81ea\u7531\u306b\u300d\u5b66\u7fd2\u3055\u305b\u308b\u3053\u3068\u304c\u76ee\u7684\u3067\u3042\u308b\u3002 SARNN\u306eEncoder\u3068Decoder\u306f\u30e9\u30f3\u30c0\u30e0\u306b\u521d\u671f\u5316\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\u5b66\u7fd2\u521d\u671f\u6bb5\u968e\u3067\u306f\u8996\u899a\u753b\u50cf\u4e2d\u306e\u7279\u5fb4\u91cf\u3092\u9069\u5207\u306b\u62bd\u51fa/\u5b66\u7fd2\u3067\u304d\u3066\u3044\u306a\u3044\u3002 \u305d\u306e\u3088\u3046\u306a\u72b6\u6cc1\u3067\u5f97\u3089\u308c\u305f\u6ce8\u610f\u70b9\u4e88\u6e2c\u8aa4\u5dee\u3092\u9006\u4f1d\u642c\u3059\u308b\u3068\u4f5c\u696d\u5bfe\u8c61\u7269\u306b\u9069\u5207\u306b\u6ce8\u610f\u70b9\u304c\u5411\u304b\u305a\u3001\u300c\u4e88\u6e2c\u753b\u50cf\u8aa4\u5dee\u300d\u3092\u6700\u5c0f\u306b\u3059\u308b\u3088\u3046\u306a\u6ce8\u610f\u70b9\u304c\u5b66\u7fd2\u3055\u308c\u3066\u3057\u307e\u3046\u3002 \u305d\u306e\u305f\u3081\u3001\u5b66\u7fd2\u521d\u671f\u6bb5\u968e\u3067\u306f\u6ce8\u610f\u70b9\u306e\u4e88\u6e2c\u8aa4\u5dee\u306f\u7121\u8996\u3057\u3001CNN\u306e\u30d5\u30a3\u30eb\u30bf\u304c\u7279\u5fb4\u91cf\u3092\u5b66\u7fd2\u3057\u7d42\u3048\u305f\u9803\u306b\u6ce8\u610f\u70b9\u4e88\u6e2c\u306e\u8aa4\u5dee\u3092\u5b66\u7fd2\u3055\u305b\u308b\u3053\u3068\u3067\u3001\u4f5c\u696d\u306b\u91cd\u8981\u306a\u5bfe\u8c61\u7269\u306b\u306e\u307f\u7740\u76ee\u3057\u305f\u6ce8\u610f\u70b9\u3092\u7372\u5f97\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 <code>decay_end</code> \u304cCNN\u306e\u5b66\u7fd2\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u8abf\u6574\u3057\u3066\u304a\u308a\u3001\u901a\u5e381000\u30a8\u30dd\u30c3\u30af\u7a0b\u5ea6\u3092\u8a2d\u5b9a\u3057\u3066\u3044\u308b\u304c\u3001\u30bf\u30b9\u30af\u306b\u3088\u3063\u3066\u306f\u8abf\u6574\u304c\u5fc5\u8981\u3067\u3042\u308b\u3002</p> [SOURCE] callback.py<pre><code>class LossScheduler:\ndef __init__(self, decay_end=1000, curve_name=\"s\"):\ndecay_start = 0\nself.counter = -1\nself.decay_end = decay_end\nself.interpolated_values = self.curve_interpolation(\ndecay_start, decay_end, decay_end, curve_name\n)\ndef linear_interpolation(self, start, end, num_points):\nx = np.linspace(start, end, num_points)\nreturn x\ndef s_curve_interpolation(self, start, end, num_points):\nt = np.linspace(0, 1, num_points)\nx = start + (end - start) * (t - np.sin(2 * np.pi * t) / (2 * np.pi))\nreturn x\ndef inverse_s_curve_interpolation(self, start, end, num_points):\nt = np.linspace(0, 1, num_points)\nx = start + (end - start) * (t + np.sin(2 * np.pi * t) / (2 * np.pi))\nreturn x\ndef deceleration_curve_interpolation(self, start, end, num_points):\nt = np.linspace(0, 1, num_points)\nx = start + (end - start) * (1 - np.cos(np.pi * t / 2))\nreturn x\ndef acceleration_curve_interpolation(self, start, end, num_points):\nt = np.linspace(0, 1, num_points)\nx = start + (end - start) * (np.sin(np.pi * t / 2))\nreturn x\ndef curve_interpolation(self, start, end, num_points, curve_name):\nif curve_name == \"linear\":\ninterpolated_values = self.linear_interpolation(start, end, num_points)\nelif curve_name == \"s\":\ninterpolated_values = self.s_curve_interpolation(start, end, num_points)\nelif curve_name == \"inverse_s\":\ninterpolated_values = self.inverse_s_curve_interpolation(start, end, num_points)\nelif curve_name == \"deceleration\":\ninterpolated_values = self.deceleration_curve_interpolation(start, end, num_points)\nelif curve_name == \"acceleration\":\ninterpolated_values = self.acceleration_curve_interpolation(start, end, num_points)\nelse:\nassert False, \"Invalid curve name. {}\".format(curve_name)\nreturn interpolated_values / num_points\ndef __call__(self, loss_weight):\nself.counter += 1\nif self.counter &gt;= self.decay_end:\nreturn loss_weight\nelse:\nreturn self.interpolated_values[self.counter] * loss_weight\n</code></pre>"},{"location":"model/SARNN/#bptt","title":"\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5","text":"<p>\u30e2\u30c7\u30eb\u306e\u6642\u7cfb\u5217\u5b66\u7fd2\u3092\u884c\u3046\u305f\u3081\u306e\u8aa4\u5dee\u9006\u4f1d\u64ad\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u3057\u3066Backpropagation Through Time\uff08BPTT\uff09\u3092\u7528\u3044\u308b2\u3002 RNN\u3067\u306f\u3001\u5404\u6642\u523b\u3067\u306e\u5185\u90e8\u72b6\u614b $h_{t}$ \u306f\u3001\u524d\u6642\u523b\u306e\u6642\u523b $t-1$ \u306e\u5185\u90e8\u72b6\u614b $h_{t-1}$ \u306b\u4f9d\u5b58\u3059\u308b\u3002 BPTT\u3067\u306f\u3001\u5404\u6642\u523b\u3067\u306e\u8aa4\u5dee\u3092\u8a08\u7b97\u3057\u3001\u305d\u308c\u3092\u9061\u3063\u3066\u52fe\u914d\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u3067\u3001\u5404\u6642\u523b\u3067\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u66f4\u65b0\u3092\u884c\u3046\u3002 \u5177\u4f53\u7684\u306b\u306f\u3001\u753b\u50cf$i_t$\u3068\u95a2\u7bc0\u89d2\u5ea6 $a_{t}$ \u3092\u30e2\u30c7\u30eb\u306b\u5165\u529b\u3057\u3001\u6b21\u72b6\u614b\uff08$\\hat i_{t+1}$, $ \\hat a_{t+1}$\uff09\u3092\u51fa\u529b\uff08\u4e88\u6e2c\uff09\u3059\u308b\u3002 \u5168\u30b7\u30fc\u30b1\u30f3\u30b9\u306e\u4e88\u6e2c\u5024\u3068\u771f\u5024\uff08$f_{t+1}$, $a_{t+1}$\uff09\u306e\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee <code>nn.MSELoss</code> \u3092\u8a08\u7b97\u3057\u3001\u8aa4\u5dee\u5024<code>loss</code>\u306b\u57fa\u3065\u3044\u3066\u8aa4\u5dee\u4f1d\u756a\u3092\u884c\u3046\u3002 \u3053\u306e\u3068\u304d\u3001\u5404\u6642\u523b\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u3001\u305d\u306e\u6642\u523b\u3088\u308a\u5f8c\u306e\u3059\u3079\u3066\u306e\u6642\u523b\u3067\u4f7f\u7528\u3055\u308c\u308b\u305f\u3081\u3001\u6642\u9593\u7684\u306a\u5c55\u958b\u3092\u884c\u3044\u306a\u304c\u3089\u9006\u4f1d\u64ad\u3092\u884c\u3046\u3002</p> <p>47-54\u884c\u76ee\u306b\u793a\u3059\u3088\u3046\u306b\u3001SARNN\u306f\u753b\u50cf\u8aa4\u5dee\u3068\u95a2\u7bc0\u89d2\u5ea6\u8aa4\u5dee\u306b\u52a0\u3048\u3001\u6ce8\u610f\u70b9\u306e\u4e88\u6e2c\u8aa4\u5dee\u3082\u8a08\u7b97\u3059\u308b\u3002 \u6ce8\u610f\u70b9\u306e\u771f\u5024\u306f\u5b58\u5728\u3057\u306a\u3044\u305f\u3081\u3001\u53cc\u65b9\u5411\u8aa4\u5dee3 \u3092\u7528\u3044\u3066\u6ce8\u610f\u70b9\u306e\u5b66\u7fd2\u3092\u884c\u3046\u3002 \u5177\u4f53\u7684\u306b\u306f\u6642\u523b $t$ \u3067RNN\u304c\u4e88\u6e2c\u3057\u305f\u6ce8\u610f\u70b9 $ \\hat p_{t+1}$ \u3068\u6642\u523b $t+1$ \u3067CNN\u304c\u62bd\u51fa\u3057\u305f\u6ce8\u610f\u70b9 $p_{t+1}$ \u304c\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u8aa4\u5dee\u3092\u8a08\u7b97\u3059\u308b\u3002 \u3053\u306e\u53cc\u65b9\u5411\u8aa4\u5dee\u306b\u57fa\u3065\u3044\u3066\u3001LSTM\u3067\u6ce8\u610f\u70b9\u3068\u95a2\u7bc0\u89d2\u5ea6\u306e\u6642\u7cfb\u5217\u95a2\u4fc2\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3067\u3001\u5197\u9577\u306a\u753b\u50cf\u4e88\u6e2c\u3092\u6392\u9664\u3059\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u52d5\u4f5c\u4e88\u6e2c\u306b\u91cd\u8981\u306a\u6ce8\u610f\u70b9\u3092\u4e88\u6e2c\u3059\u308b\u3088\u3046\u306b\u8a98\u5c0e\u3059\u308b\u3002</p> <p>\u307e\u305f<code>loss_weights</code>\u306f\u3001\u5404\u30e2\u30c0\u30ea\u30c6\u30a3\u8aa4\u5dee\u306e\u91cd\u307f\u3065\u3051\u3092\u884c\u3063\u3066\u304a\u308a\u3001\u3069\u306e\u30e2\u30c0\u30ea\u30c6\u30a3\u3092\u91cd\u70b9\u7684\u306b\u5b66\u7fd2\u3059\u308b\u304b\u3092\u6c7a\u5b9a\u3059\u308b\u3002  \u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2\u3067\u306f\u3001\u4e88\u6e2c\u3055\u308c\u305f\u95a2\u7bc0\u89d2\u5ea6\u304c\u30ed\u30dc\u30c3\u30c8\u306e\u52d5\u4f5c\u6307\u4ee4\u306b\u76f4\u7d50\u3059\u308b\u305f\u3081\u95a2\u7bc0\u89d2\u5ea6\u3092\u91cd\u70b9\u7684\u306b\u5b66\u7fd2\u3055\u305b\u308b\u3002 \u3057\u304b\u3057\u9006\u306b\u753b\u50cf\u60c5\u5831\u306e\u5b66\u7fd2\u304c\u4e0d\u5341\u5206\u306a\u5834\u5408\u3001\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u306e\u7d71\u5408\u5b66\u7fd2\u304c\u9069\u5207\u306b\u884c\u3048\u306a\u3044\uff08\u753b\u50cf\u60c5\u5831\u306b\u5bfe\u5fdc\u3057\u305f\u95a2\u7bc0\u89d2\u5ea6\u4e88\u6e2c\u304c\u56f0\u96e3\u306b\u306a\u308b\uff09\u305f\u3081\u3001 \u91cd\u307f\u4ed8\u3051\u4fc2\u6570\u306f\u30e2\u30c7\u30eb\u3084\u30bf\u30b9\u30af\u306b\u5fdc\u3058\u3066\u8abf\u6574\u3059\u308b\u3053\u3068\u304c\u6c42\u3081\u3089\u308c\u308b\u3002 \u3053\u308c\u307e\u3067\u306e\u7d4c\u9a13\u4e0a\u3001\u91cd\u307f\u4ed8\u3051\u4fc2\u6570\u306f\u5168\u30661.0\u3001\u3082\u3057\u304f\u306f\u753b\u50cf\u306e\u307f0.1\u306b\u3059\u308b\u3053\u3068\u304c\u591a\u3044\u3002</p> [SOURCE] fullBPTT.py<pre><code>class fullBPTTtrainer:\ndef __init__(self, model, optimizer, loss_weights=[1.0, 1.0], device=\"cpu\"):\nself.device = device\nself.optimizer = optimizer\nself.loss_weights = loss_weights\nself.scheduler = LossScheduler(decay_end=1000, curve_name=\"s\")\nself.model = model.to(self.device)\ndef save(self, epoch, loss, savename):\ntorch.save(\n{\n\"epoch\": epoch,\n\"model_state_dict\": self.model.state_dict(),\n\"train_loss\": loss[0],\n\"test_loss\": loss[1],\n},\nsavename,\n)\ndef process_epoch(self, data, training=True):\nif not training:\nself.model.eval()\ntotal_loss = 0.0\nfor n_batch, ((x_img, x_joint), (y_img, y_joint)) in enumerate(data):\nx_img = x_img.to(self.device)\ny_img = y_img.to(self.device)\nx_joint = x_joint.to(self.device)\ny_joint = y_joint.to(self.device)\nstate = None\nyi_list, yv_list = [], []\ndec_pts_list, enc_pts_list = [], []\nT = x_img.shape[1]\nfor t in range(T - 1):\n_yi_hat, _yv_hat, enc_ij, dec_ij, state = self.model(\nx_img[:, t], x_joint[:, t], state\n)\nyi_list.append(_yi_hat)\nyv_list.append(_yv_hat)\nenc_pts_list.append(enc_ij)\ndec_pts_list.append(dec_ij)\nyi_hat = torch.permute(torch.stack(yi_list), (1, 0, 2, 3, 4))\nyv_hat = torch.permute(torch.stack(yv_list), (1, 0, 2))\nimg_loss = nn.MSELoss()(yi_hat, y_img[:, 1:]) * self.loss_weights[0]\njoint_loss = nn.MSELoss()(yv_hat, y_joint[:, 1:]) * self.loss_weights[1]\n# Gradually change the loss value using the LossScheluder class.\npt_loss = nn.MSELoss()(\ntorch.stack(dec_pts_list[:-1]), torch.stack(enc_pts_list[1:])\n) * self.scheduler(self.loss_weights[2])\nloss = img_loss + joint_loss + pt_loss\ntotal_loss += loss.item()\nif training:\nself.optimizer.zero_grad(set_to_none=True)\nloss.backward()\nself.optimizer.step()\nreturn total_loss / (n_batch + 1)\n</code></pre> <ol> <li> <p>Hideyuki Ichiwara, Hiroshi Ito, Kenjiro Yamamoto, Hiroki Mori, and Tetsuya Ogata. Contact-rich manipulation of a flexible object based on deep predictive learning using vision and tactility. In 2022 International Conference on Robotics and Automation (ICRA), 5375\u20135381. IEEE, 2022.\u00a0\u21a9</p> </li> <li> <p>David E Rumelhart, Geoffrey E Hinton, and Ronald J Williams. Learning representations by back-propagating errors. nature, 323(6088):533\u2013536, 1986.\u00a0\u21a9</p> </li> <li> <p>Hyogo Hiruma, Hiroshi Ito, Hiroki Mori, and Tetsuya Ogata. Deep active visual attention for real-time robot motion generation: emergence of tool-body assimilation and adaptive tool-use. IEEE Robotics and Automation Letters, 7(3):8550\u20138557, 2022.\u00a0\u21a9</p> </li> </ol>"},{"location":"model/SARNN/#model.SARNN","title":"<code>model.SARNN</code>","text":"<p>         Bases: <code>nn.Module</code></p> <p>SARNN: Spatial Attention with Recurrent Neural Network. <code>joint_dim</code> \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u95a2\u7bc0\u81ea\u7531\u5ea6\u304c\u7570\u306a\u308b\u30ed\u30dc\u30c3\u30c8\u306b\u3082\u5bfe\u5fdc\u53ef\u80fd\u3067\u3042\u308b\u3002 \u4e00\u65b9\u3067\u30ed\u30dc\u30c3\u30c8\u306e\u8996\u899a\u753b\u50cf <code>im_size</code> \u306f128x128\u30d4\u30af\u30bb\u30eb\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002 \u30ab\u30e1\u30e9\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u3001\u30c7\u30fc\u30bf\u306b\u3088\u3063\u3066\u306fEncoder\u3084Decoder\u306eCNN\u5c64\u306e\u6570\u3092\u8abf\u6574\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 <code>k_dim</code> \u306f\u6ce8\u610f\u70b9\u306e\u6570\u3092\u8868\u3057\u3066\u304a\u308a\u3001\u4efb\u610f\u306e\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\u6d3b\u6027\u5316\u95a2\u6570\u306b\u306f <code>LeakyReLU</code> \u3092\u7528\u3044\u305f\u3002</p> <p>Parameters:</p> Name Type Description Default <code>rec_dim</code> <code>int</code> <p>RNN\u306e\u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba</p> required <code>k_dim</code> <code>int</code> <p>\u6ce8\u610f\u70b9\u306e\u6570</p> <code>5</code> <code>joint_dim</code> <code>int</code> <p>\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u306e\u6b21\u5143\u6570</p> <code>14</code> <code>temperature</code> <code>float</code> <p>\u6e29\u5ea6\u4ed8\u304dSoftmax\u306e\u30cf\u30d1\u30e9\u30e1\u30fc\u30bf</p> <code>0.0001</code> <code>heatmap_size</code> <code>float</code> <p>\u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u306e\u30b5\u30a4\u30ba</p> <code>0.1</code> <code>kernel_size</code> <code>int</code> <p>CNN\u306e\u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba</p> <code>3</code> <code>activation</code> <code>str</code> <p>\u6d3b\u6027\u5316\u95a2\u6570</p> <code>'lrelu'</code> <code>im_size</code> <code>list</code> <p>\u5165\u529b\u753b\u50cf\u306e\u30b5\u30a4\u30ba [\u7e26\u3001\u6a2a].</p> <code>[128, 128]</code> Source code in <code>ja/docs/model/src/model.py</code> <pre><code>class SARNN(nn.Module):\n#:: SARNN\n\"\"\"SARNN: Spatial Attention with Recurrent Neural Network.\n    `joint_dim` \u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u95a2\u7bc0\u81ea\u7531\u5ea6\u304c\u7570\u306a\u308b\u30ed\u30dc\u30c3\u30c8\u306b\u3082\u5bfe\u5fdc\u53ef\u80fd\u3067\u3042\u308b\u3002\n    \u4e00\u65b9\u3067\u30ed\u30dc\u30c3\u30c8\u306e\u8996\u899a\u753b\u50cf `im_size` \u306f128x128\u30d4\u30af\u30bb\u30eb\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002\n    \u30ab\u30e1\u30e9\u753b\u50cf\u306e\u30d4\u30af\u30bb\u30eb\u30b5\u30a4\u30ba\u3092\u5909\u66f4\u3059\u308b\u5834\u5408\u3001\u30c7\u30fc\u30bf\u306b\u3088\u3063\u3066\u306fEncoder\u3084Decoder\u306eCNN\u5c64\u306e\u6570\u3092\u8abf\u6574\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002\n    `k_dim` \u306f\u6ce8\u610f\u70b9\u306e\u6570\u3092\u8868\u3057\u3066\u304a\u308a\u3001\u4efb\u610f\u306e\u6570\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\u6d3b\u6027\u5316\u95a2\u6570\u306b\u306f `LeakyReLU` \u3092\u7528\u3044\u305f\u3002\n    Arguments:\n        rec_dim (int): RNN\u306e\u96a0\u308c\u5c64\u306e\u30b5\u30a4\u30ba\n        k_dim (int, optional): \u6ce8\u610f\u70b9\u306e\u6570\n        joint_dim (int, optional): \u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u306e\u6b21\u5143\u6570\n        temperature (float, optional): \u6e29\u5ea6\u4ed8\u304dSoftmax\u306e\u30cf\u30d1\u30e9\u30e1\u30fc\u30bf\n        heatmap_size (float, optional): \u30d2\u30fc\u30c8\u30de\u30c3\u30d7\u306e\u30b5\u30a4\u30ba\n        kernel_size (int, optional): CNN\u306e\u30ab\u30fc\u30cd\u30eb\u30b5\u30a4\u30ba\n        activation (str, optional): \u6d3b\u6027\u5316\u95a2\u6570\n        im_size (list, optional): \u5165\u529b\u753b\u50cf\u306e\u30b5\u30a4\u30ba [\u7e26\u3001\u6a2a].\n    \"\"\"\ndef __init__(\nself,\nrec_dim,\nk_dim=5,\njoint_dim=14,\ntemperature=1e-4,\nheatmap_size=0.1,\nkernel_size=3,\nactivation=\"lrelu\",\nim_size=[128, 128],\n):\nsuper(SARNN, self).__init__()\nself.k_dim = k_dim\nif isinstance(activation, str):\nactivation = get_activation_fn(activation, inplace=True)\nsub_im_size = [im_size[0] - 3 * (kernel_size - 1), im_size[1] - 3 * (kernel_size - 1)]\nself.temperature = temperature\nself.heatmap_size = heatmap_size\n# Positional Encoder\nself.pos_encoder = nn.Sequential(\nnn.Conv2d(3, 16, 3, 1, 0),  # Convolutional layer 1\nactivation,\nnn.Conv2d(16, 32, 3, 1, 0),  # Convolutional layer 2\nactivation,\nnn.Conv2d(32, self.k_dim, 3, 1, 0),  # Convolutional layer 3\nactivation,\nSpatialSoftmax(\nwidth=sub_im_size[0], height=sub_im_size[1], temperature=self.temperature, normalized=True\n),  # Spatial Softmax layer\n)\n# Image Encoder\nself.im_encoder = nn.Sequential(\nnn.Conv2d(3, 16, 3, 1, 0),  # Convolutional layer 1\nactivation,\nnn.Conv2d(16, 32, 3, 1, 0),  # Convolutional layer 2\nactivation,\nnn.Conv2d(32, self.k_dim, 3, 1, 0),  # Convolutional layer 3\nactivation,\n)\nrec_in = joint_dim + self.k_dim * 2\nself.rec = nn.LSTMCell(rec_in, rec_dim)  # LSTM cell\n# Joint Decoder\nself.decoder_joint = nn.Sequential(nn.Linear(rec_dim, joint_dim), activation)  # Linear layer and activation\n# Point Decoder\nself.decoder_point = nn.Sequential(\nnn.Linear(rec_dim, self.k_dim * 2), activation\n)  # Linear layer and activation\n# Inverse Spatial Softmax\nself.issm = InverseSpatialSoftmax(\nwidth=sub_im_size[0], height=sub_im_size[1], heatmap_size=self.heatmap_size, normalized=True\n)\n# Image Decoder\nself.decoder_image = nn.Sequential(\nnn.ConvTranspose2d(self.k_dim, 32, 3, 1, 0),  # Transposed Convolutional layer 1\nactivation,\nnn.ConvTranspose2d(32, 16, 3, 1, 0),  # Transposed Convolutional layer 2\nactivation,\nnn.ConvTranspose2d(16, 3, 3, 1, 0),  # Transposed Convolutional layer 3\nactivation,\n)\ndef forward(self, xi, xv, state=None):\n\"\"\"\n        \u6642\u523b(t)\u306e\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u304b\u3089\u3001\u6b21\u6642\u523b(t+1)\u306e\u753b\u50cf\u3001\u95a2\u7bc0\u89d2\u5ea6\u3001\u6ce8\u610f\u70b9\u3092\u4e88\u6e2c\u3059\u308b\u3002\n        \u4e88\u6e2c\u3057\u305f\u95a2\u7bc0\u89d2\u5ea6\u3092\u30ed\u30dc\u30c3\u30c8\u306e\u5236\u5fa1\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u3001\n        \u30bb\u30f3\u30b5\u60c5\u5831\u306b\u57fa\u3065\u3044\u305f\u9010\u6b21\u7684\u306a\u52d5\u4f5c\u751f\u6210\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\n        Arguments:\n            xi (torch.Tensor): \u6642\u523bt\u306e\u753b\u50cf [batch_size, channels, height, width]\n            xv (torch.Tensor): \u6642\u523bt\u306e\u95a2\u7bc0\u89d2\u5ea6 [batch_size, input_dim]\n            state (tuple, optional): LSTM\u306e\u30bb\u30eb\u72b6\u614b\u3068\u96a0\u308c\u72b6\u614b [ [batch_size, rec_dim], [batch_size, rec_dim] ]\n        Returns:\n            y_image (torch.Tensor): \u4e88\u6e2c\u753b\u50cf [batch_size, channels, height, width]\n            y_joint (torch.Tensor): \u4e88\u6e2c\u95a2\u7bc0\u89d2\u5ea6 [batch_size, joint_dim]\n            enc_pts (torch.Tensor): Spatial softmax\u3067\u62bd\u51fa\u3057\u305f\u6ce8\u610f\u70b9 [batch_size, k_dim * 2]\n            dec_pts (torch.Tensor): RNN\u304c\u4e88\u6e2c\u3057\u305f\u6ce8\u610f\u70b9 [batch_size, k_dim * 2]\n            rnn_hid (tuple): LSTM\u306e\u30bb\u30eb\u72b6\u614b\u3068\u96a0\u308c\u72b6\u614b [ [batch_size, rec_dim], [batch_size, rec_dim] ]\n        \"\"\"\n# Encode input image\nim_hid = self.im_encoder(xi)\nenc_pts, _ = self.pos_encoder(xi)\n# Reshape encoded points and concatenate with input vector\nenc_pts = enc_pts.reshape(-1, self.k_dim * 2)\nhid = torch.cat([enc_pts, xv], -1)\nrnn_hid = self.rec(hid, state)  # LSTM forward pass\ny_joint = self.decoder_joint(rnn_hid[0])  # Decode joint prediction\ndec_pts = self.decoder_point(rnn_hid[0])  # Decode points\n# Reshape decoded points\ndec_pts_in = dec_pts.reshape(-1, self.k_dim, 2)\nheatmap = self.issm(dec_pts_in)  # Inverse Spatial Softmax\nhid = torch.mul(heatmap, im_hid)  # Multiply heatmap with image feature `im_hid`\ny_image = self.decoder_image(hid)  # Decode image\nreturn y_image, y_joint, enc_pts, dec_pts, rnn_hid\n</code></pre>"},{"location":"model/SARNN/#model.SARNN.forward","title":"<code>forward(xi, xv, state=None)</code>","text":"<p>\u6642\u523b(t)\u306e\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u304b\u3089\u3001\u6b21\u6642\u523b(t+1)\u306e\u753b\u50cf\u3001\u95a2\u7bc0\u89d2\u5ea6\u3001\u6ce8\u610f\u70b9\u3092\u4e88\u6e2c\u3059\u308b\u3002 \u4e88\u6e2c\u3057\u305f\u95a2\u7bc0\u89d2\u5ea6\u3092\u30ed\u30dc\u30c3\u30c8\u306e\u5236\u5fa1\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u3001 \u30bb\u30f3\u30b5\u60c5\u5831\u306b\u57fa\u3065\u3044\u305f\u9010\u6b21\u7684\u306a\u52d5\u4f5c\u751f\u6210\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>xi</code> <code>torch.Tensor</code> <p>\u6642\u523bt\u306e\u753b\u50cf [batch_size, channels, height, width]</p> required <code>xv</code> <code>torch.Tensor</code> <p>\u6642\u523bt\u306e\u95a2\u7bc0\u89d2\u5ea6 [batch_size, input_dim]</p> required <code>state</code> <code>tuple</code> <p>LSTM\u306e\u30bb\u30eb\u72b6\u614b\u3068\u96a0\u308c\u72b6\u614b [ [batch_size, rec_dim], [batch_size, rec_dim] ]</p> <code>None</code> <p>Returns:</p> Name Type Description <code>y_image</code> <code>torch.Tensor</code> <p>\u4e88\u6e2c\u753b\u50cf [batch_size, channels, height, width]</p> <code>y_joint</code> <code>torch.Tensor</code> <p>\u4e88\u6e2c\u95a2\u7bc0\u89d2\u5ea6 [batch_size, joint_dim]</p> <code>enc_pts</code> <code>torch.Tensor</code> <p>Spatial softmax\u3067\u62bd\u51fa\u3057\u305f\u6ce8\u610f\u70b9 [batch_size, k_dim * 2]</p> <code>dec_pts</code> <code>torch.Tensor</code> <p>RNN\u304c\u4e88\u6e2c\u3057\u305f\u6ce8\u610f\u70b9 [batch_size, k_dim * 2]</p> <code>rnn_hid</code> <code>tuple</code> <p>LSTM\u306e\u30bb\u30eb\u72b6\u614b\u3068\u96a0\u308c\u72b6\u614b [ [batch_size, rec_dim], [batch_size, rec_dim] ]</p> Source code in <code>ja/docs/model/src/model.py</code> <pre><code>def forward(self, xi, xv, state=None):\n\"\"\"\n    \u6642\u523b(t)\u306e\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u304b\u3089\u3001\u6b21\u6642\u523b(t+1)\u306e\u753b\u50cf\u3001\u95a2\u7bc0\u89d2\u5ea6\u3001\u6ce8\u610f\u70b9\u3092\u4e88\u6e2c\u3059\u308b\u3002\n    \u4e88\u6e2c\u3057\u305f\u95a2\u7bc0\u89d2\u5ea6\u3092\u30ed\u30dc\u30c3\u30c8\u306e\u5236\u5fa1\u30b3\u30de\u30f3\u30c9\u3068\u3057\u3066\u5165\u529b\u3059\u308b\u3053\u3068\u3067\u3001\n    \u30bb\u30f3\u30b5\u60c5\u5831\u306b\u57fa\u3065\u3044\u305f\u9010\u6b21\u7684\u306a\u52d5\u4f5c\u751f\u6210\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002\n    Arguments:\n        xi (torch.Tensor): \u6642\u523bt\u306e\u753b\u50cf [batch_size, channels, height, width]\n        xv (torch.Tensor): \u6642\u523bt\u306e\u95a2\u7bc0\u89d2\u5ea6 [batch_size, input_dim]\n        state (tuple, optional): LSTM\u306e\u30bb\u30eb\u72b6\u614b\u3068\u96a0\u308c\u72b6\u614b [ [batch_size, rec_dim], [batch_size, rec_dim] ]\n    Returns:\n        y_image (torch.Tensor): \u4e88\u6e2c\u753b\u50cf [batch_size, channels, height, width]\n        y_joint (torch.Tensor): \u4e88\u6e2c\u95a2\u7bc0\u89d2\u5ea6 [batch_size, joint_dim]\n        enc_pts (torch.Tensor): Spatial softmax\u3067\u62bd\u51fa\u3057\u305f\u6ce8\u610f\u70b9 [batch_size, k_dim * 2]\n        dec_pts (torch.Tensor): RNN\u304c\u4e88\u6e2c\u3057\u305f\u6ce8\u610f\u70b9 [batch_size, k_dim * 2]\n        rnn_hid (tuple): LSTM\u306e\u30bb\u30eb\u72b6\u614b\u3068\u96a0\u308c\u72b6\u614b [ [batch_size, rec_dim], [batch_size, rec_dim] ]\n    \"\"\"\n# Encode input image\nim_hid = self.im_encoder(xi)\nenc_pts, _ = self.pos_encoder(xi)\n# Reshape encoded points and concatenate with input vector\nenc_pts = enc_pts.reshape(-1, self.k_dim * 2)\nhid = torch.cat([enc_pts, xv], -1)\nrnn_hid = self.rec(hid, state)  # LSTM forward pass\ny_joint = self.decoder_joint(rnn_hid[0])  # Decode joint prediction\ndec_pts = self.decoder_point(rnn_hid[0])  # Decode points\n# Reshape decoded points\ndec_pts_in = dec_pts.reshape(-1, self.k_dim, 2)\nheatmap = self.issm(dec_pts_in)  # Inverse Spatial Softmax\nhid = torch.mul(heatmap, im_hid)  # Multiply heatmap with image feature `im_hid`\ny_image = self.decoder_image(hid)  # Decode image\nreturn y_image, y_joint, enc_pts, dec_pts, rnn_hid\n</code></pre>"},{"location":"model/dataloader/","title":"\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0","text":"<p>EIPL\u3067\u306f\u3001Pytorch\u304c\u6a19\u6e96\u3067\u63d0\u4f9b\u3059\u308b<code>Dataset</code>\u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057\u305f\u3001\u30ed\u30dc\u30c3\u30c8\u52d5\u4f5c\u5b66\u7fd2\u306e\u305f\u3081\u306e<code>MultimodalDataset</code>\u30af\u30e9\u30b9\u3092\u63d0\u4f9b\u3057\u3066\u3044\u308b\u3002 \u672c\u30af\u30e9\u30b9\u306f\u6bce\u30a8\u30dd\u30c3\u30af\u3001\u30e2\u30c7\u30eb\u3078\u306e\u5165\u529b\u30c7\u30fc\u30bf <code>x_data</code> \u3068\u771f\u5024 <code>y_data</code> \u306e\u30da\u30a2\u3092\u8fd4\u3059\u3002 \u5165\u529b\u30c7\u30fc\u30bf<code>x_data</code>\u306f\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u306e\u30da\u30a2\u306b\u306a\u3063\u3066\u304a\u308a\u3001\u6bce\u30a8\u30dd\u30c3\u30af\u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u884c\u3046\u3002 \u5165\u529b\u753b\u50cf\u306b\u306f\u3001\u7167\u660e\u5909\u5316\u306b\u5bfe\u3059\u308b\u30ed\u30d0\u30b9\u30c8\u6027\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306b\u8f1d\u5ea6\u3084\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u306a\u3069\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4ed8\u4e0e\u3057\u3001\u5165\u529b\u95a2\u7bc0\u89d2\u5ea6\u306b\u306f\u3001\u624b\u5148\u4f4d\u7f6e\u8aa4\u5dee\u306b\u5bfe\u3059\u308b\u30ed\u30d0\u30b9\u30c8\u6027\u3092\u5411\u4e0a\u3055\u305b\u308b\u305f\u3081\u306b\u30ac\u30a6\u30b7\u30a2\u30f3\u30ce\u30a4\u30ba\u3092\u4ed8\u4e0e\u3057\u3066\u3044\u308b\u3002 \u4e00\u65b9\u3067\u51fa\u529b\u30c7\u30fc\u30bf\u306b\u306f\u4e00\u5207\u30ce\u30a4\u30ba\u3092\u52a0\u3048\u3066\u3044\u306a\u3044\u3002 \u30e2\u30c7\u30eb\u306f\u30ce\u30a4\u30ba\u304c\u6df7\u3058\u3063\u305f\u5165\u529b\u30c7\u30fc\u30bf\u304b\u3089\u3001\u30ce\u30a4\u30ba\u3092\u7121\u8996\u3057\u305f\u72b6\u6cc1\uff08\u5185\u90e8\u8868\u73fe\uff09\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3067\u3001\u63a8\u8ad6\u6642\u306f\u5b9f\u4e16\u754c\u306e\u30ce\u30a4\u30ba\u306b\u5bfe\u3057\u30ed\u30d0\u30b9\u30c8\u306a\u52d5\u4f5c\u751f\u6210\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002</p> <p>\u4ee5\u4e0b\u306f\u3001AIREC\u3092\u7528\u3044\u3066\u53ce\u96c6\u3057\u305f\u7269\u4f53\u628a\u6301\u30bf\u30b9\u30af\u3092\u4f8b\u306b\u3001<code>MultimodalDataset</code>\u30af\u30e9\u30b9\u306e\u5229\u7528\u65b9\u6cd5\u3092\u793a\u3057\u3066\u3044\u308b\u3002 <code>MultimodalDataset</code>\u30af\u30e9\u30b9\u306b5\u6b21\u5143\u306e\u753b\u50cf\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\uff08\u30c7\u30fc\u30bf\u6570\u3001\u6642\u7cfb\u5217\u9577\u3001\u30c1\u30e3\u30cd\u30eb\u3001\u7e26\u3001\u6a2a\uff09\u30683\u6b21\u5143\u306e\u95a2\u7bc0\u89d2\u5ea6\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\uff08\u30c7\u30fc\u30bf\u6570\u3001\u6642\u7cfb\u5217\u9577\u3001\u95a2\u7bc0\u6570\uff09\u3092\u6e21\u3059\u3053\u3068\u3067\u81ea\u52d5\u7684\u306b\u30c7\u30fc\u30bf\u62e1\u5f35\u306a\u3069\u304c\u884c\u308f\u308c\u308b\u3002 \u306a\u304a\u3001<code>SampleDownloader</code>\u306fEIPL\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3092\u884c\u3046\u30af\u30e9\u30b9\u3067\u3042\u308a\u3001\u5fc5\u305a\u3057\u3082\u5fc5\u8981\u3067\u306f\u306a\u3044\u3002 <code>numpy.load</code>\u95a2\u6570\u306a\u3069\u3092\u7528\u3044\u3066\u3001\u81ea\u4f5c\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u76f4\u63a5\u8aad\u307f\u8fbc\u3093\u3067\u3082\u826f\u3044\u3002</p> \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f7f\u3044\u65b9<pre><code>from eipl.data import SampleDownloader, MultimodalDataset\n# \u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001\u6b63\u898f\u5316\ngrasp_data = SampleDownloader(\"airec\", \"grasp_bottle\", img_format=\"CHW\")\nimages, joints = grasp_data.load_norm_data(\"train\", vmin=0.1, vmax=0.9)\n# \u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u3092Dataset\u30af\u30e9\u30b9\u306b\u6e21\u3059\nmulti_dataset = MultimodalDataset(images, joints)\n# \u5165\u51fa\u529b\u30c7\u30fc\u30bf\u3092\u623b\u308a\u5024\u3068\u3057\u3066\u8fd4\u3059\u3002\nx_data, y_data = multi_dataset[1]\n</code></pre> <p>\u4e0b\u56f3\u306f<code>MultimodalDataset</code>\u30af\u30e9\u30b9\u304c\u8fd4\u3057\u305f\u30ed\u30dc\u30c3\u30c8\u306e\u30ab\u30e1\u30e9\u753b\u50cf\u3092\u793a\u3057\u3066\u304a\u308a\u3001 \u5de6\u304b\u3089\u9806\u306b\u53f3\u306f\u30ce\u30a4\u30ba\u306e\u7121\u3044\u753b\u50cf\u3001\u30ce\u30a4\u30ba\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u753b\u50cf\u3001\u305d\u3057\u3066\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u3067\u3042\u308b\u3002 \u6bce\u30a8\u30dd\u30c3\u30af\u30e9\u30f3\u30c0\u30e0\u306a\u30ce\u30a4\u30ba\u304c\u753b\u50cf\u306b\u4ed8\u4e0e\u3055\u308c\u308b\u305f\u3081\u3001\u30e2\u30c7\u30eb\u306f\u591a\u69d8\u306a\u8996\u899a\u72b6\u6cc1\u3092\u5b66\u7fd2\u3059\u308b\u3002 \u307e\u305f\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u306e\u9ed2\u8272\u70b9\u7dda\u306f\u3001\u30ce\u30a4\u30ba\u304c\u306a\u3044\u30aa\u30ea\u30b8\u30ca\u30eb\u95a2\u7bc0\u89d2\u5ea6\u3001\u8272\u4ed8\u304d\u7dda\u306f\u30ac\u30a6\u30b7\u30a2\u30f3\u30ce\u30a4\u30ba\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u95a2\u7bc0\u89d2\u5ea6\u3067\u3042\u308b\u3002</p> <p></p> <p>Note</p> <p>Proxy\u306a\u3069\u304c\u539f\u56e0\u3067\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u304c\u53d6\u5f97\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001 \u3053\u3053\u304b\u3089\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u624b\u52d5\u3067\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u3001 <code>~/.eipl/</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306b\u4fdd\u5b58\u3057\u3066\u304f\u3060\u3055\u3044\u3002     <pre><code>$ cd ~/\n$ mkdir .eipl\n$ cd .eipl\n$ # copy grasp_bottle.tar to ~/.eipl/ directory\n$ tar xvf grasp_bottle.tar\n$ ls grasp_bottle/*\ngrasp_bottle/joint_bounds.npy\n</code></pre></p>"},{"location":"model/dataloader/#dataloader.MultimodalDataset","title":"<code>dataloader.MultimodalDataset</code>","text":"<p>         Bases: <code>Dataset</code></p> <p>\u3053\u306e\u30af\u30e9\u30b9\u306f\u3001CNNRNN/SARNN\u306e\u3088\u3046\u306a\u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u30c7\u30fc\u30bf\uff08\u753b\u50cf\u3001\u95a2\u7bc0\u306a\u3069\uff09\u3092\u6271\u3046\u30e2\u30c7\u30eb\u306e\u5b66\u7fd2\u306b\u4f7f\u7528\u3055\u308c\u308b\u3002</p> Source code in <code>ja/docs/model/src/dataloader.py</code> <pre><code>class MultimodalDataset(Dataset):\n#:: MultimodalDataset\n\"\"\"\n    \u3053\u306e\u30af\u30e9\u30b9\u306f\u3001CNNRNN/SARNN\u306e\u3088\u3046\u306a\u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u30c7\u30fc\u30bf\uff08\u753b\u50cf\u3001\u95a2\u7bc0\u306a\u3069\uff09\u3092\u6271\u3046\u30e2\u30c7\u30eb\u306e\u5b66\u7fd2\u306b\u4f7f\u7528\u3055\u308c\u308b\u3002\n    \"\"\"\ndef __init__(self, images, joints, stdev=0.02):\n\"\"\"\n        \u753b\u50cf\u3001\u95a2\u7bc0\u89d2\u5ea6\u3001\u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n        Args:\n            images (numpy array): \u753b\u50cf\u6642\u7cfb\u5217\u30c7\u30fc\u30bf [\u30c7\u30fc\u30bf\u6570\u3001\u6642\u7cfb\u5217\u9577\u3001\u30c1\u30e3\u30cd\u30eb\u3001\u7e26\u3001\u6a2a]\n            joints (numpy array): \u95a2\u7bc0\u89d2\u5ea6\u6642\u7cfb\u5217\u30c7\u30fc\u30bf [\u30c7\u30fc\u30bf\u6570\u3001\u6642\u7cfb\u5217\u9577\u3001\u95a2\u7bc0\u89d2\u5ea6]\n            stdev (float, optional): \u30ac\u30a6\u30b7\u30a2\u30f3\u30ce\u30a4\u30ba\u306e\u5206\u6563\u5024\u3001\u306a\u304a\u5e73\u5747\u306f0\u3067\u3042\u308b\u3002\n        \"\"\"\nself.stdev = stdev\nself.images = images\nself.joints = joints\nself.transform = transforms.ColorJitter(contrast=0.5, brightness=0.5, saturation=0.1)\ndef __len__(self):\n\"\"\"\n        \u30c7\u30fc\u30bf\u6570\u3092\u8fd4\u3059\n        \"\"\"\nreturn len(self.images)\ndef __getitem__(self, idx):\n\"\"\"\n        \u6307\u5b9a\u3055\u308c\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u306b\u30ce\u30a4\u30ba\u3092\u4ed8\u4e0e\u3057\u3001\u30e2\u30c7\u30eb\u5b66\u7fd2\u306e\u305f\u3081\u306e\u5165\u51fa\u529b\u30c7\u30fc\u30bf\u306e\u30da\u30a2\u3092\u8fd4\u3059\u3002\n        Args:\n            idx (int): \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n        Returns:\n            input_output_data (list): \u30ce\u30a4\u30ba\u304c\u4ed8\u52a0\u3055\u308c\u305f\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\uff08x_img, x_joint\uff09\u3068\u3001\u5143\u306e\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\uff08y_img, y_joint\uff09\u306e\u30da\u30a2\n        \"\"\"\ny_img = self.images[idx]\ny_joint = self.joints[idx]\nx_img = self.transform(self.images[idx])\nx_img = x_img + torch.normal(mean=0, std=self.stdev, size=x_img.shape)\nx_joint = self.joints[idx] + torch.normal(mean=0, std=self.stdev, size=y_joint.shape)\nreturn [[x_img, x_joint], [y_img, y_joint]]\n</code></pre>"},{"location":"model/dataloader/#dataloader.MultimodalDataset.__getitem__","title":"<code>__getitem__(idx)</code>","text":"<p>\u6307\u5b9a\u3055\u308c\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u306b\u30ce\u30a4\u30ba\u3092\u4ed8\u4e0e\u3057\u3001\u30e2\u30c7\u30eb\u5b66\u7fd2\u306e\u305f\u3081\u306e\u5165\u51fa\u529b\u30c7\u30fc\u30bf\u306e\u30da\u30a2\u3092\u8fd4\u3059\u3002</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>\u30a4\u30f3\u30c7\u30c3\u30af\u30b9</p> required <p>Returns:</p> Name Type Description <code>input_output_data</code> <code>list</code> <p>\u30ce\u30a4\u30ba\u304c\u4ed8\u52a0\u3055\u308c\u305f\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\uff08x_img, x_joint\uff09\u3068\u3001\u5143\u306e\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\uff08y_img, y_joint\uff09\u306e\u30da\u30a2</p> Source code in <code>ja/docs/model/src/dataloader.py</code> <pre><code>def __getitem__(self, idx):\n\"\"\"\n    \u6307\u5b9a\u3055\u308c\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u306b\u30ce\u30a4\u30ba\u3092\u4ed8\u4e0e\u3057\u3001\u30e2\u30c7\u30eb\u5b66\u7fd2\u306e\u305f\u3081\u306e\u5165\u51fa\u529b\u30c7\u30fc\u30bf\u306e\u30da\u30a2\u3092\u8fd4\u3059\u3002\n    Args:\n        idx (int): \u30a4\u30f3\u30c7\u30c3\u30af\u30b9\n    Returns:\n        input_output_data (list): \u30ce\u30a4\u30ba\u304c\u4ed8\u52a0\u3055\u308c\u305f\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\uff08x_img, x_joint\uff09\u3068\u3001\u5143\u306e\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\uff08y_img, y_joint\uff09\u306e\u30da\u30a2\n    \"\"\"\ny_img = self.images[idx]\ny_joint = self.joints[idx]\nx_img = self.transform(self.images[idx])\nx_img = x_img + torch.normal(mean=0, std=self.stdev, size=x_img.shape)\nx_joint = self.joints[idx] + torch.normal(mean=0, std=self.stdev, size=y_joint.shape)\nreturn [[x_img, x_joint], [y_img, y_joint]]\n</code></pre>"},{"location":"model/dataloader/#dataloader.MultimodalDataset.__init__","title":"<code>__init__(images, joints, stdev=0.02)</code>","text":"<p>\u753b\u50cf\u3001\u95a2\u7bc0\u89d2\u5ea6\u3001\u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u8a2d\u5b9a\u3059\u308b\u3002</p> <p>Parameters:</p> Name Type Description Default <code>images</code> <code>numpy array</code> <p>\u753b\u50cf\u6642\u7cfb\u5217\u30c7\u30fc\u30bf [\u30c7\u30fc\u30bf\u6570\u3001\u6642\u7cfb\u5217\u9577\u3001\u30c1\u30e3\u30cd\u30eb\u3001\u7e26\u3001\u6a2a]</p> required <code>joints</code> <code>numpy array</code> <p>\u95a2\u7bc0\u89d2\u5ea6\u6642\u7cfb\u5217\u30c7\u30fc\u30bf [\u30c7\u30fc\u30bf\u6570\u3001\u6642\u7cfb\u5217\u9577\u3001\u95a2\u7bc0\u89d2\u5ea6]</p> required <code>stdev</code> <code>float</code> <p>\u30ac\u30a6\u30b7\u30a2\u30f3\u30ce\u30a4\u30ba\u306e\u5206\u6563\u5024\u3001\u306a\u304a\u5e73\u5747\u306f0\u3067\u3042\u308b\u3002</p> <code>0.02</code> Source code in <code>ja/docs/model/src/dataloader.py</code> <pre><code>def __init__(self, images, joints, stdev=0.02):\n\"\"\"\n    \u753b\u50cf\u3001\u95a2\u7bc0\u89d2\u5ea6\u3001\u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u8a2d\u5b9a\u3059\u308b\u3002\n    Args:\n        images (numpy array): \u753b\u50cf\u6642\u7cfb\u5217\u30c7\u30fc\u30bf [\u30c7\u30fc\u30bf\u6570\u3001\u6642\u7cfb\u5217\u9577\u3001\u30c1\u30e3\u30cd\u30eb\u3001\u7e26\u3001\u6a2a]\n        joints (numpy array): \u95a2\u7bc0\u89d2\u5ea6\u6642\u7cfb\u5217\u30c7\u30fc\u30bf [\u30c7\u30fc\u30bf\u6570\u3001\u6642\u7cfb\u5217\u9577\u3001\u95a2\u7bc0\u89d2\u5ea6]\n        stdev (float, optional): \u30ac\u30a6\u30b7\u30a2\u30f3\u30ce\u30a4\u30ba\u306e\u5206\u6563\u5024\u3001\u306a\u304a\u5e73\u5747\u306f0\u3067\u3042\u308b\u3002\n    \"\"\"\nself.stdev = stdev\nself.images = images\nself.joints = joints\nself.transform = transforms.ColorJitter(contrast=0.5, brightness=0.5, saturation=0.1)\n</code></pre>"},{"location":"model/dataloader/#dataloader.MultimodalDataset.__len__","title":"<code>__len__()</code>","text":"<p>\u30c7\u30fc\u30bf\u6570\u3092\u8fd4\u3059</p> Source code in <code>ja/docs/model/src/dataloader.py</code> <pre><code>def __len__(self):\n\"\"\"\n    \u30c7\u30fc\u30bf\u6570\u3092\u8fd4\u3059\n    \"\"\"\nreturn len(self.images)\n</code></pre>"},{"location":"model/test/","title":"\u63a8\u8ad6","text":""},{"location":"model/test/#_1","title":"\u30aa\u30d5\u30e9\u30a4\u30f3\u63a8\u8ad6","text":"<p>SARNN\u304c\u9069\u5207\u306b\u5b66\u7fd2\u3055\u308c\u305f\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u30c6\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0 <code>test.py</code> \u3092\u7528\u3044\u3066\u691c\u8a3c\u3059\u308b\u3002 \u5f15\u6570 <code>filename</code> \u306f\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3001 <code>idx</code> \u306f\u53ef\u8996\u5316\u3057\u305f\u3044\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u3042\u308b\u3002 <code>input_param</code>\u306f\u5b9f\u4e16\u754c\u306e\u30ce\u30a4\u30ba\u306b\u5bfe\u3057\u5b89\u5b9a\u7684\u306a\u52d5\u4f5c\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u306e\u6df7\u5408\u4fc2\u6570\u3067\u3042\u308a\u3001\u6642\u523b$t$\u306e\u30bb\u30f3\u30b5\u60c5\u5831\u306b\u3001\u524d\u6642\u523b$t-1$\u306e\u30e2\u30c7\u30eb\u306e\u4e88\u6e2c\u5024\u3092\u4e00\u5b9a\u306e\u5272\u5408\u3067\u6df7\u5408\u3057\u305f\u5024\u3092\u30e2\u30c7\u30eb\u306b\u5165\u529b\u3059\u308b\u3002 \u672c\u51e6\u7406\u306f\u30ed\u30fc\u30d1\u30b9\u30d5\u30a3\u30eb\u30bf\u3068\u540c\u7b49\u3067\u3042\u308a\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u30bb\u30f3\u30b5\u5024\u306b\u30ce\u30a4\u30ba\u304c\u4e57\u3063\u3066\u3082\u3001 \u524d\u6642\u523b\u306e\u4e88\u6e2c\u5024\u3092\u88dc\u52a9\u7684\u306b\u5229\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u5b89\u5b9a\u3057\u305f\u52d5\u4f5c\u6307\u4ee4\u306e\u4e88\u6e2c\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u306a\u304a\u3001\u6df7\u5408\u4fc2\u6570\u304c\u5c0f\u3055\u904e\u304e\u308b\u3068\u5b9f\u4e16\u754c\u306e\u30bb\u30f3\u30b5\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066\u52d5\u4f5c\u3092\u4fee\u6b63\u3059\u308b\u3053\u3068\u304c\u56f0\u96e3\u306b\u306a\u308b\u305f\u3081\u3001\u4f4d\u7f6e\u5909\u5316\u306b\u5bfe\u3059\u308b\u30ed\u30d0\u30b9\u30c8\u6027\u304c\u4f4e\u4e0b\u3059\u308b\u3053\u3068\u306b\u6ce8\u610f\u3055\u308c\u305f\u3044\u3002</p> <pre><code>$ cd eipl/tutorials/sarnn/\n$ python3 bin/test.py --filename ./log/20230521_1247_41/SARNN.pth --idx 4 --input_param 1.0\n\nimages shape:(187, 128, 128, 3), min=0, max=255\njoints shape:(187, 8), min=-0.8595600128173828, max=1.8292399644851685\nloop_ct:0, joint:[ 0.00226304 -0.7357931  -0.28175825  1.2895856   0.7252841   0.14539993\n-0.0266939   0.00422328]\nloop_ct:1, joint:[ 0.00307412 -0.73363686 -0.2815826   1.2874944   0.72176594  0.1542334\n-0.02719587  0.00325996]\n.\n.\n.\n\n$ ls output/\nSARNN_20230521_1247_41_4_1.0.gif\n</code></pre> <p>\u4e0b\u56f3\u306b\u672a\u5b66\u7fd2\u4f4d\u7f6e\uff08D\u5730\u70b9\uff09\u3067\u306e\u63a8\u8ad6\u7d50\u679c\u3092\u793a\u3059\u3002 \u5de6\u304b\u3089\u5165\u529b\u753b\u50cf\u3001\u4e88\u6e2c\u753b\u50cf\u3001\u305d\u3057\u3066\u4e88\u6e2c\u95a2\u7bc0\u89d2\u5ea6\uff08\u70b9\u7dda\u306f\u771f\u5024\uff09\u3067\u3042\u308b\u3002 \u5165\u529b\u753b\u50cf\u4e2d\u306e\u9752\u70b9\u306f\u753b\u50cf\u304b\u3089\u62bd\u51fa\u3057\u305f\u6ce8\u610f\u70b9\u3001\u305d\u3057\u3066\u8d64\u70b9\u306fRNN\u304c\u4e88\u6e2c\u3057\u305f\u6ce8\u610f\u70b9\u3067\u3042\u308a\u3001\u30ed\u30dc\u30c3\u30c8\u30cf\u30f3\u30c9\u3068\u628a\u6301\u5bfe\u8c61\u7269\u306b\u7740\u76ee\u3057\u306a\u304c\u3089\u95a2\u7bc0\u89d2\u5ea6\u3092\u4e88\u6e2c\u3057\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002</p> <p></p>"},{"location":"model/test/#pca","title":"\u4e3b\u6210\u5206\u5206\u6790","text":"<p>\u6df1\u5c64\u4e88\u6e2c\u5b66\u7fd2\u3067\u306f\u3001\u5b66\u7fd2\u6e08\u307f\u30e2\u30c7\u30eb\u304c\u6c4e\u5316\u6027\u80fd\u3092\u5099\u3048\u3066\u3044\u308b\u304b\u3092\u4e8b\u524d\u691c\u8a0e\u3059\u308b\u305f\u3081\u306b\u3001\u4e3b\u6210\u5206\u5206\u67901 \u3092\u7528\u3044\u3066\u5185\u90e8\u8868\u73fe\u3092\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3059\u308b\u3002 \u5c0f\u30c7\u30fc\u30bf\u3067\u6c4e\u5316\u52d5\u4f5c\u3092\u7372\u5f97\u3059\u308b\u305f\u3081\u306b\u3001RNN\u306e\u5185\u90e8\u72b6\u614b\u306b\u52d5\u4f5c\u3092\u57cb\u3081\u8fbc\u3080\u5fc5\u8981\u304c\u3042\u308a\u3001\u6559\u793a\u52d5\u4f5c\u3054\u3068\u306b\u5185\u90e8\u72b6\u614b\u304c\u81ea\u5df1\u7d44\u7e54\u5316\uff08\u69cb\u9020\u5316\uff09\u3055\u308c\u308b\u3053\u3068\u304c\u671b\u307e\u3057\u3044\u3002 \u4ee5\u964d\u3001\u4e3b\u6210\u5206\u5206\u6790\u3092\u7528\u3044\u3066RNN\u306e\u5185\u90e8\u72b6\u614b\u3092\u4f4e\u6b21\u5143\u306b\u5727\u7e2e\u3057\u3001\u30c7\u30fc\u30bf\u306e\u7279\u5fb4\u3092\u8868\u3059\u8981\u7d20\uff08\u7b2c1\u30fc\u7b2c3\u4e3b\u6210\u5206\uff09\u3092\u53ef\u8996\u5316\u3059\u308b\u3053\u3068\u3067\u3001\u611f\u899a\u904b\u52d5\u60c5\u5831\uff08\u753b\u50cf\u30fb\u95a2\u7bc0\u89d2\u5ea6\uff09\u304c\u3069\u306e\u3088\u3046\u306b\u3057\u3066\u8868\u73fe\u3055\u308c\u3066\u3044\u308b\u306e\u304b\u3092\u691c\u8a3c\u3059\u308b\u3002</p> <p>\u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u3001\u63a8\u8ad6\u304a\u3088\u3073\u4e3b\u6210\u5206\u5206\u6790\u306e\u51e6\u7406\u3092\u4e00\u90e8\u629c\u7c8b\u3057\u305f\u3082\u306e\u3067\u3042\u308b\u3002 \u521d\u3081\u306b\u3001\u30e2\u30c7\u30eb\u306b\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5165\u529b\u3057\u3001\u5404\u6642\u523b\u306b\u304a\u3051\u308bRNN\u306e\u5185\u90e8\u72b6\u614b <code>state</code> \u3092\u30ea\u30b9\u30c8\u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b\u3002 LSTM \u306e\u5834\u5408\u3001<code>hidden state</code> \u3068 <code>cell state</code> \u304c <code>state</code> \u3057\u3066\u8fd4\u3063\u3066\u304f\u308b\u305f\u3081\u3001\u3053\u3053\u3067\u306f <code>hidden state</code> \u3092\u5bfe\u8c61\u306b\u53ef\u8996\u5316\u89e3\u6790\u3059\u308b\u3002 \u6b21\u306b\u3001\u7269\u4f53\u4f4d\u7f6e\u6bce\u306b\u304a\u3051\u308b\u5185\u90e8\u72b6\u614b\u3092\u6bd4\u8f03\u3059\u308b\u305f\u3081\u306b<code>hidden state</code>\u306e\u5f62\u72b6\u3001\uff3b\u30c7\u30fc\u30bf\u6570\u3001\u6642\u7cfb\u5217\u9577\u3001state\u306e\u6b21\u5143\u6570\uff3d\u304b\u3089\uff3b\u30c7\u30fc\u30bf\u6570\u00d7\u6642\u7cfb\u5217\u9577\u3001state\u306e\u6b21\u5143\u6570\uff3d\u306b\u5909\u5f62\u3059\u308b\u3002 \u6700\u5f8c\u306b\u300112\u884c\u76ee\u306b\u793a\u3059\u3088\u3046\u306b\u4e3b\u6210\u5206\u5206\u6790\u3092\u9069\u7528\u3059\u308b\u3053\u3068\u3067\u3001\u9ad8\u6b21\u5143\u306a <code>hidden state</code> \u3092\u4f4e\u6b21\u5143\u306a\u60c5\u5831\uff083\u6b21\u5143\uff09\u306b\u5727\u7e2e\u3059\u308b\u3002 \u5727\u7e2e\u3055\u308c\u305f\u4e3b\u6210\u5206 <code>pca_val</code> \u3092\u5143\u306e\u5f62\u72b6\uff3b\u30c7\u30fc\u30bf\u6570\u3001\u6642\u7cfb\u5217\u9577\u30013\u6b21\u5143\uff3d\u306b\u623b\u3057\u3001\u7269\u4f53\u4f4d\u7f6e\u3054\u3068\u306b\u8272\u4ed8\u3051\u30663D\u7a7a\u9593\u306b\u30d7\u30ed\u30c3\u30c8\u3059\u308b\u3053\u3068\u3067\u3001\u7269\u4f53\u4f4d\u7f6e\u3068\u5185\u90e8\u72b6\u614b\u306e\u95a2\u4fc2\u3092\u53ef\u8996\u5316\u3067\u304d\u308b\u3002</p> [SOURCE] test_pca_rnn.py<pre><code>states = tensor2numpy( states )\n# Reshape the state from [N,T,D] to [-1,D] for PCA of RNN.\n# N is the number of datasets\n# T is the sequence length\n# D is the dimension of the hidden state\nN,T,D  = states.shape\nstates = states.reshape(-1,D)\n# plot pca\nloop_ct = float(360)/T\npca_dim = 3\npca     = PCA(n_components=pca_dim).fit(states)\npca_val = pca.transform(states)\n# Reshape the states from [-1, pca_dim] to [N,T,pca_dim] to\n# visualize each state as a 3D scatter.\npca_val = pca_val.reshape( N, T, pca_dim )\nfig = plt.figure(dpi=60)\nax = fig.add_subplot(projection='3d')\ndef anim_update(i):\nax.cla()\nangle = int(loop_ct * i)\nax.view_init(30, angle)\nc_list = ['C0','C1','C2','C3','C4']\n</code></pre> <p>\u4e3b\u6210\u5206\u5206\u6790\u3092\u7528\u3044\u305f\u5185\u90e8\u72b6\u614b\u306e\u53ef\u8996\u5316\u30d7\u30ed\u30b0\u30e9\u30e0\u306b\u306f <code>test_pca_sarnn.py</code> \u3092\u7528\u3044\u308b\u3002\u5f15\u6570 filename \u306f\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3067\u3042\u308b\u3002</p> <pre><code>$ cd eipl/tutorials/sarnn/\n$ python3 ./bin/test_pca_sarnn.py --filename log/20230521_1247_41/SARNN.pth\n$ ls output/\nPCA_SARNN_20230521_1247_41.gif\n</code></pre> <p>\u4e0b\u56f3\u306fSARNN\u306e\u53ef\u8996\u5316\u7d50\u679c\u3067\u3042\u308a\u3001\u5404\u70b9\u7dda\u306f\u5185\u90e8\u72b6\u614b\u306e\u6642\u7cfb\u5217\u5909\u5316\u3092\u793a\u3057\u3066\u3066\u3044\u308b\u3002 \u5404\u30a2\u30c8\u30e9\u30af\u30bf\u306e\u8272\u306f\u7269\u4f53\u4f4d\u7f6e\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001\u9752\u3001\u30aa\u30ec\u30f3\u30b8\u3001\u7dd1\u306f\u6559\u793a\u4f4d\u7f6eA\u3001C\u3001E\u306b\u3001\u8d64\u3001\u7d2b\u306f\u672a\u5b66\u7fd2\u4f4d\u7f6eB\u3001D\u3067\u3042\u308b\u3002 \u7269\u4f53\u4f4d\u7f6e\u306b\u5fdc\u3058\u3066\u30a2\u30c8\u30e9\u30af\u30bf\u304c\u81ea\u5df1\u7d44\u7e54\u5316\uff08\u6574\u5217\uff09\u3057\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u7269\u4f53\u4f4d\u7f6e\u306b\u5fdc\u3058\u305f\u52d5\u4f5c\u304c\u5b66\u7fd2\uff08\u8a18\u61b6\uff09\u3055\u308c\u3066\u3044\u308b\u3068\u8a00\u3048\u308b\u3002 \u7279\u306b\u672a\u5b66\u7fd2\u4f4d\u7f6e\u306e\u30a2\u30c8\u30e9\u30af\u30bf\u306f\u3001\u6559\u793a\u4f4d\u7f6e\u306e\u9593\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u7269\u4f53\u4f4d\u7f6e\u304c\u7570\u306a\u308b\u628a\u6301\u52d5\u4f5c\u3092\u8907\u6570\u56de\u6559\u793a\u3057\u5b66\u7fd2\u3055\u305b\u308b\u3060\u3051\u3067\u3001\u672a\u5b66\u7fd2\u306e\u5185\u633f\u52d5\u4f5c\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p></p>"},{"location":"model/test/#online","title":"\u30aa\u30f3\u30e9\u30a4\u30f3\u52d5\u4f5c\u751f\u6210","text":"<p>\u4ee5\u4e0b\u306b\u7591\u4f3c\u30b3\u30fc\u30c9\u3092\u7528\u3044\u3066\u3001\u5b9f\u30ed\u30dc\u30c3\u30c8\u3092\u7528\u3044\u305f\u30aa\u30f3\u30e9\u30a4\u30f3\u52d5\u4f5c\u751f\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002 \u30ed\u30dc\u30c3\u30c8\u306f\u3001\u30b9\u30c6\u30c3\u30d72-5\u3092\u306e\u51e6\u7406\u3092\u3001\u6307\u5b9a\u3057\u305f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\u3067\u7e70\u308a\u8fd4\u3057\u884c\u3046\u3053\u3068\u3067\u3001\u30bb\u30f3\u30b5\u60c5\u5831\u306b\u57fa\u3065\u3044\u3066\u9010\u6b21\u52d5\u4f5c\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <ol> <li> <p>\u30e2\u30c7\u30eb\u8aad\u307f\u8fbc\u307f\uff0823\u884c\u76ee\uff09</p> <p>\u30e2\u30c7\u30eb\u306e\u5b9a\u7fa9\u3092\u884c\u3063\u305f\u5f8c\u306b\u3001\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\u3092\u8aad\u307f\u8fbc\u3080\u3002</p> </li> <li> <p>\u30bb\u30f3\u30b5\u60c5\u5831\u306e\u53d6\u5f97\u3001\u6b63\u898f\u5316\uff0838\u884c\u76ee\uff09</p> <p>\u30ed\u30dc\u30c3\u30c8\u30bb\u30f3\u30b5\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3001\u6b63\u898f\u5316\u51e6\u7406\u3092\u884c\u3046\u3002\u4f8b\u3048\u3070\u30ed\u30dc\u30c3\u30c8\u30b7\u30b9\u30c6\u30e0\u306b ROS \u3092\u7528\u3044\u3066\u3044\u308b\u5834\u5408\u3001 Subscribe \u3057\u305f\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u3092 <code>raw_image</code>, <code>raw_joint</code>\u3068\u3059\u308b\u3002 </p> </li> <li> <p>\u63a8\u8ad6\uff0851\u884c\u76ee\uff09</p> <p>\u6b63\u898f\u5316\u6e08\u307f\u306e\u753b\u50cf<code>x_img</code>\u3001\u95a2\u7bc0\u89d2\u5ea6<code>x_joint</code>\u3092\u7528\u3044\u3066\u3001\u6b21\u6642\u523b\u306e\u753b\u50cf<code>y_image</code>\u3068\u95a2\u7bc0\u89d2\u5ea6<code>y_joint</code>\u3092\u4e88\u6e2c\u3059\u308b\u3002\u305d\u3057\u3066\u3001\u5404\u4e88\u6e2c\u5024\u3092\u9006\u6b63\u898f\u5316\u3059\u308b\u3053\u3068\u3067\u3001\u4e88\u6e2c\u753b\u50cf<code>pred_image</code>\u3068\u4e88\u6e2c\u95a2\u7bc0\u89d2\u5ea6<code>pred_joint</code>\u3092\u8a08\u7b97\u3059\u308b\u3002</p> </li> <li> <p>\u6307\u4ee4\u9001\u4fe1\uff0861\u884c\u76ee\uff09</p> <p>\u4e88\u6e2c\u95a2\u7bc0\u89d2\u5ea6<code>pred_joint</code>\u3092\u30ed\u30dc\u30c3\u30c8\u306e\u52d5\u4f5c\u6307\u4ee4\u3068\u3059\u308b\u3068\u3053\u3068\u3067\u3001\u30ed\u30dc\u30c3\u30c8\u306f\u9010\u6b21\u52d5\u4f5c\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002ROS\u306e\u5834\u5408\u3001\u95a2\u7bc0\u89d2\u5ea6\u3092\u30e2\u30fc\u30bf\u306bPublish\u3059\u308b\u3053\u3068\u3067\u30ed\u30dc\u30c3\u30c8\u306f\u6307\u4ee4\u5024\u306b\u57fa\u3065\u3044\u3066\u5404\u30e2\u30fc\u30bf\u3092\u5236\u5fa1\u3059\u308b\u3002</p> </li> <li> <p>\u30b9\u30ea\u30fc\u30d7\uff0865\u884c\u76ee\uff09</p> <p>\u6700\u5f8c\u306b\u6307\u5b9a\u3057\u305f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\u3067\u63a8\u8ad6\u3092\u884c\u3046\u305f\u3081\u306b\u3001\u30b9\u30ea\u30fc\u30d7\u51e6\u7406\u3092\u5165\u308c\u308b\u3053\u3068\u3067\u30bf\u30a4\u30df\u30f3\u30b0\u8abf\u6574\u3092\u884c\u3046\u3002\u306a\u304a\u3001\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\u306f\u5b66\u7fd2\u30c7\u30fc\u30bf\u53ce\u96c6\u6642\u3068\u540c\u3058\u306b\u3059\u308b\u3002</p> </li> </ol> online.py<pre><code>parser = argparse.ArgumentParser()\nparser.add_argument(\"--model_pth\", type=str, default=None)\nparser.add_argument(\"--input_param\", type=float, default=0.8)\nargs = parser.parse_args()\n# restore parameters\ndir_name = os.path.split(args.model_pth)[0]\nparams = restore_args(os.path.join(dir_name, \"args.json\"))\n# load dataset\nminmax = [params[\"vmin\"], params[\"vmax\"]]\njoint_bounds = np.load(os.path.join(os.path.expanduser(\"~\"), \".eipl/grasp_bottle/joint_bounds.npy\"))\n# define model\nmodel = SARNN(\nrec_dim=params[\"rec_dim\"],\njoint_dim=8,\nk_dim=params[\"k_dim\"],\nheatmap_size=params[\"heatmap_size\"],\ntemperature=params[\"temperature\"],\n)\n# load weight\nckpt = torch.load(args.model_pth, map_location=torch.device(\"cpu\"))\nmodel.load_state_dict(ckpt[\"model_state_dict\"])\nmodel.eval()\n# Inference\n# Set the inference frequency; for a 10-Hz in ROS system, set as follows.\nfreq = 10  # 10Hz\nrate = rospy.Rate(freq)\nimage_list, joint_list = [], []\nstate = None\nnloop = 200  # freq * 20 sec\nfor loop_ct in range(nloop):\nstart_time = time.time()\n# load data and normalization\nraw_images, raw_joint = robot.get_sensor_data()\nx_img = raw_images[loop_ct].transpose(2, 0, 1)\nx_img = torch.Tensor(np.expand_dims(x_img, 0))\nx_img = normalization(x_img, (0, 255), minmax)\nx_joint = torch.Tensor(np.expand_dims(raw_joint, 0))\nx_joint = normalization(x_joint, joint_bounds, minmax)\n# closed loop\nif loop_ct &gt; 0:\nx_img = args.input_param * x_img + (1.0 - args.input_param) * y_image\nx_joint = args.input_param * x_joint + (1.0 - args.input_param) * y_joint\n# predict rnn\ny_image, y_joint, state = rnn_model(x_img, x_joint, state)\n# denormalization\npred_image = tensor2numpy(y_image[0])\npred_image = deprocess_img(pred_image, cae_params[\"vmin\"], cae_params[\"vmax\"])\npred_image = pred_image.transpose(1, 2, 0)\npred_joint = tensor2numpy(y_joint[0])\npred_joint = normalization(pred_joint, minmax, joint_bounds)\n# send pred_joint to robot\n# send_command(pred_joint)\npub.publish(pred_joint)\n# Sleep to infer at set frequency.\n# ROS system\nrate.sleep()\n</code></pre> <ol> <li> <p>Harold Hotelling. Analysis of a complex of statistical variables into principal components. Journal of educational psychology, 24(6):417, 1933.\u00a0\u21a9</p> </li> </ol>"},{"location":"model/train/","title":"\u5b66\u7fd2","text":""},{"location":"model/train/#_1","title":"\u30d5\u30a1\u30a4\u30eb","text":"<p>SARNN\u306e\u5b66\u7fd2\u306b\u306f\u3001EIPL\u30ea\u30dd\u30b8\u30c8\u30ea\u4e2d\u306etutorial/SARNN\u30d5\u30a9\u30eb\u30c0\u5185\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5229\u7528\u3059\u308b\u3002 \u5404\u30d5\u30a9\u30eb\u30c0\u3068\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5f79\u5272\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3042\u308b\u3002</p> <ul> <li>bin/train.py\uff1a\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3001\u5b66\u7fd2\u3001\u305d\u3057\u3066\u30e2\u30c7\u30eb\u306e\u4fdd\u5b58\u3092\u884c\u3046\u5b66\u7fd2\u30d7\u30ed\u30b0\u30e9\u30e0</li> <li>bin/test.py\uff1a\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\uff08\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\uff09\u306b\u57fa\u3065\u3044\u3066\u6bce\u6642\u523b\u306e\u52d5\u4f5c\u6307\u4ee4\u5024\u3092\u4e88\u6e2c\u3057\u3001\u63a8\u8ad6\u7d50\u679c\u3092\u53ef\u8996\u5316\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0</li> <li>bin/test_pca_sarnn.py\uff1a\u4e3b\u6210\u5206\u5206\u6790\u3092\u7528\u3044\u3066RNN\u306e\u5185\u90e8\u72b6\u614b\u3092\u53ef\u8996\u5316\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0</li> <li>libs/fullBPTT.py\uff1a\u6642\u7cfb\u5217\u5b66\u7fd2\u306e\u305f\u3081\u306e\u8aa4\u5dee\u9006\u4f1d\u64ad\u30af\u30e9\u30b9</li> <li>log\uff1a\u5b66\u7fd2\u7d50\u679c\u3068\u3057\u3066\u91cd\u307f\u3084\u5b66\u7fd2\u66f2\u7dda\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u60c5\u5831\u3092\u4fdd\u5b58</li> <li>output\uff1a\u63a8\u8ad6\u7d50\u679c\u3092\u4fdd\u5b58</li> </ul>"},{"location":"model/train/#train","title":"\u30e2\u30c7\u30eb\u5b66\u7fd2","text":"<p>\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0 <code>train.py</code> \u3092\u4f7f\u7528\u3057\u3066\u3001SARNN\u3092\u5b66\u7fd2\u3059\u308b\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068 <code>log</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306b\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\uff08pth\uff09\u3068Tensorboard\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u304c\u4fdd\u5b58\u3055\u308c\u308b\u3002 \u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001\u30e2\u30c7\u30eb\u306e\u7a2e\u985e\u3001\u30a8\u30dd\u30c3\u30af\u6570\u3001\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3001\u5b66\u7fd2\u7387\u3001\u6700\u9069\u5316\u624b\u6cd5\u306a\u3069\u3001\u5b66\u7fd2\u306b\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u53ef\u80fd\u3067\u3042\u308b\u3002 \u307e\u305f\u3001EarlyStopping\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3066\u3001\u5b66\u7fd2\u306e\u65e9\u671f\u7d42\u4e86\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u6c7a\u5b9a\u3059\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u30c6\u30b9\u30c8\u8aa4\u5dee\u304c\u6700\u5c0f\u306b\u306a\u3063\u305f\u6642\u70b9\u3067\u91cd\u307f\u3092\u4fdd\u5b58\u3059\u308b\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8a73\u7d30\u306a\u52d5\u4f5c\u306b\u3064\u3044\u3066\u306f\u3001\u30b3\u30fc\u30c9\u5185\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</p> <pre><code>$ cd eipl/tutorials/sarnn/\n$ python3 ./bin/train.py\n[INFO] Set tag = \"20230521_1247_41\"\n================================\nbatch_size : 5\ndevice : 0\nepoch : 100000\nheatmap_size : 0.1\nimg_loss : 0.1\njoint_loss : 1.0\nk_dim : 5\nlog_dir : log/\nlr : 0.001\nmodel : sarnn\noptimizer : adam\npt_loss : 0.1\nrec_dim : 50\nstdev : 0.02\ntag : \"20230521_1247_41\"\ntemperature : 0.0001\nvmax : 1.0\nvmin : 0.0\n================================\n12%|\u2588\u2588\u2588\u2588          | 11504/100000 [14:46:53&lt;114:10:44,  4.64s/it, train_loss=0.000251, test_loss=0.000316]\n</code></pre>"},{"location":"model/train/#tensorboard","title":"\u5b66\u7fd2\u66f2\u7dda","text":"<p>TensorBoard\u3092\u7528\u3044\u3066\u30e2\u30c7\u30eb\u306e\u5b66\u7fd2\u72b6\u6cc1\u3092\u78ba\u8a8d\u3059\u308b\u3002 \u91cd\u307f\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u30ed\u30b0\u30d5\u30a9\u30eb\u30c0\u3092\u5f15\u6570 <code>logdir</code> \u306b\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u4e0b\u56f3\u306b\u793a\u3059\u3088\u3046\u306a\u5b66\u7fd2\u66f2\u7dda\u3092\u30d6\u30e9\u30a6\u30b6\u3067\u898b\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306eloss\u304c\u5341\u5206\u306b\u4e0b\u304c\u3063\u3066\u3044\u308b\u304b\u3092\u66f2\u7dda\u3092\u898b\u3066\u5224\u65ad\u3059\u308b\u3002 \u5b66\u7fd2\u521d\u671f\u6bb5\u968e\u3067\u904e\u5b66\u7fd2\u50be\u5411\u304c\u307f\u3089\u308c\u308b\u5834\u5408\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u304b\u30e2\u30c7\u30eb\u306b\u7570\u5e38\u304c\u3042\u308b\u3001\u3082\u3057\u304f\u306f\u521d\u671f\u91cd\u307f\uff08\u30b7\u30fc\u30c9\uff09\u304c\u539f\u56e0\u3068\u8003\u3048\u3089\u308c\u308c\u308b\u3002 \u5bfe\u7b56\u3068\u3057\u3066\u306f\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u6b63\u898f\u5316\u7bc4\u56f2\u306e\u78ba\u8a8d\u3001\u30e2\u30c7\u30eb\u69cb\u9020\u306e\u78ba\u8a8d\u3001\u30b7\u30fc\u30c9\u5024\u3092\u5909\u3048\u3066\u518d\u5b66\u7fd2\u3001\u3092\u5b9f\u65bd\u3059\u308b\u3002 TensorBoard\u306e\u5177\u4f53\u7684\u306a\u4f7f\u3044\u65b9\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</p> <pre><code>$ cd eipl/tutorials/sarnn/\n$ tensorboard --logdir=./log/\nTensorFlow installation not found - running with reduced feature set.\nServing TensorBoard on localhost; to expose to the network, use a proxy or pass --bind_all\nTensorBoard 2.12.1 at http://localhost:6006/ (Press CTRL+C to quit)\n</code></pre> <p></p>"},{"location":"robot/overview/","title":"\u6982\u8981","text":"<p>\u3053\u3053\u3067\u306f\u7269\u4f53\u628a\u6301\u52d5\u4f5c\u3092\u4f8b\u306b\u3001Open Manpulator\u3092\u7528\u3044\u305f\u52d5\u4f5c\u6559\u793a\u304b\u3089\u5b9f\u6a5f\u52d5\u4f5c\u751f\u6210\u307e\u3067\u306e\u4e00\u9023\u624b\u9806\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002 \u4ee5\u4e0b\u306e5\u70b9\u306b\u3064\u3044\u3066\u8a18\u8f09\u3059\u308b\u4e88\u5b9a\u3067\u3042\u308b\u3002</p> <ol> <li>\u30cf\u30fc\u30c9\u30a6\u30a7\u30a2\u69cb\u6210</li> <li>ROS\u74b0\u5883\u69cb\u7bc9</li> <li>\u30c7\u30fc\u30bf\u53ce\u96c6</li> <li>\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f5c\u6210</li> <li>\u30e2\u30c7\u30eb\u5b66\u7fd2</li> <li>\u5b9f\u6a5f\u52d5\u4f5c\u751f\u6210</li> </ol> <p>Note</p> <p>\u5404\u7a2e\u30d1\u30c3\u30b1\u30fc\u30b8\u306b\u3064\u3044\u3066\u306f7\u6708\u4e2d\u306b\u63d0\u4f9b\u4e88\u5b9a</p>"},{"location":"teach/dataset/","title":"\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f5c\u6210","text":""},{"location":"teach/dataset/#_2","title":"\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9","text":"<p>AIREC\u3092\u7528\u3044\u3066\u7269\u4f53\u628a\u6301\u52d5\u4f5c\u3092\u6559\u793a\u3057\u305f\u969b\u306e\u30bb\u30f3\u30b5\u60c5\u5831\u304b\u3089\u3001\u6a5f\u68b0\u5b66\u7fd2\u306e\u305f\u3081\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002 \u3053\u3053\u3067\u306f\u3001\u53ce\u96c6\u6e08\u307f\u306e\u30b5\u30f3\u30d7\u30eb\u30c7\u30fc\u30bf\u3068\u30b9\u30af\u30ea\u30d7\u30c8\u3092\u7528\u3044\u3066\u3001\u8907\u6570\u306erosbag\u30c7\u30fc\u30bf\u304b\u3089\u7279\u5b9a\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u307f\u3092\u53d6\u308a\u51fa\u3057npz\u5f62\u5f0f\u3067\u4fdd\u5b58\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002 \u4ee5\u4e0b\u306e\u30b3\u30de\u30f3\u30c9\u306b\u5f93\u3063\u3066\u3001\u30d5\u30a1\u30a4\u30eb\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3068\u89e3\u51cd\u3092\u884c\u3046\u3002</p> <pre><code>$ mkdir ~/tmp\n$ cd tmp\n$ wget https://dl.dropboxusercontent.com/s/90wkfttf9w0bz0t/rosbag.tar\n$ tar xvf rosbag.tar\n$ cd rosbag\n$ ls\n1_rosbag2npz.py  2_make_dataset.py  3_check_data.py  bag  data  output  utils.py\n</code></pre>"},{"location":"teach/dataset/#_3","title":"\u30d5\u30a1\u30a4\u30eb","text":"<p>\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u30d5\u30a1\u30a4\u30eb\u306e\u4e2d\u8eab\u306f\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306a\u30d5\u30a9\u30eb\u30c0\u3067\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u756a\u53f71\u304b\u3089\u9806\u306b\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3060\u3051\u3067\u3001rosbag\u30c7\u30fc\u30bf\u304b\u3089\u5b66\u7fd2\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <ul> <li>1_rosbag2npy.py\uff1arosbag\u30c7\u30fc\u30bf\u304b\u3089\u6307\u5b9a\u3057\u305f\u60c5\u5831\uff08\u30c8\u30d4\u30c3\u30af\u30c7\u30fc\u30bf\uff09\u306e\u307f\u3092\u62bd\u51fa\u3057\u3001npz\u5f62\u5f0f\u306b\u5909\u63db\u3059\u308b\u3002</li> <li>2_make_dataset.py\uff1a\u672c\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f3\u3064\u306e\u51e6\u7406\u3092\u884c\u3046\u30021\u3064\u76ee\u306f\u30c7\u30fc\u30bf\u9577\u306e\u6574\u5f62\u3067\u3042\u308a\u3001 <code>rosbag record</code> \u6642\u306b <code>--duration</code> \u5f15\u6570\u3092\u8a2d\u5b9a\u3057\u3066\u3082\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u5b9f\u884c\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3088\u3063\u3066\u30c7\u30fc\u30bf\u306e\u6642\u7cfb\u5217\u9577\u304c\u7570\u306a\u308b\u305f\u3081\u3001\u5168\u30c7\u30fc\u30bf\u306e\u6642\u7cfb\u5217\u9577\u3092\u63c3\u3048\u308b\u30022\u3064\u76ee\u306f\u3001\u6307\u5b9a\u3057\u305f\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306b\u57fa\u3065\u3044\u3066\u5b66\u7fd2\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u4ed5\u5206\u3051\u3057\u3001\u4fdd\u5b58\u3059\u308b\u30023\u3064\u76ee\u306f\u3001\u95a2\u7bc0\u89d2\u5ea6\u306e\u6b63\u898f\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\uff08\u4e0a\u4e0b\u9650\uff09\u306e\u8a08\u7b97\u3092\u884c\u3046\u3002\u672c\u51e6\u7406\u306e\u8a73\u7d30\u306f \u3053\u3061\u3089 \u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</li> <li>3_check_data.py\uff1a\u53ce\u96c6\u30c7\u30fc\u30bf\u3092\u53ef\u8996\u5316\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u3042\u308a\u3001\u672c\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u30ed\u30dc\u30c3\u30c8\u306e\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u3092gif\u3068\u3057\u3066\u4fdd\u5b58\u3059\u308b\u3002\u5b66\u7fd2\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u524d\u306b\u3001\u5fc5\u305a\u753b\u50cf\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u7bc4\u56f2\u3084\u95a2\u7bc0\u89d2\u5ea6\u306e\u6b63\u898f\u5316\u7bc4\u56f2\u3092\u78ba\u8a8d\u3059\u308b\u3002</li> <li>utils.py\uff1a\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u4f5c\u6210\u306b\u5fc5\u8981\u306a\u524d\u51e6\u7406\u30d7\u30ed\u30b0\u30e9\u30e0\uff08\u6b63\u898f\u5316\u306a\u3069\uff09\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3002</li> <li>bag\uff1a\u53ce\u96c6\u3057\u305f <code>rosbag</code> \u30c7\u30fc\u30bf\u304c\u4fdd\u5b58\u3055\u308c\u3066\u3044\u308b\u3002</li> <li>data\uff1a <code>2_make_dataset.py</code> \u5b9f\u884c\u5f8c\u306b\u3001\u5b66\u7fd2\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3001\u305d\u3057\u3066\u95a2\u7bc0\u89d2\u5ea6\u306e\u6b63\u898f\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\u304c\u4fdd\u5b58\u3055\u308c\u308b\u3002</li> <li>output\uff1a\u53ef\u8996\u5316\u7d50\u679c\u304c\u4fdd\u5b58\u3055\u308c\u308b\u3002\u30d5\u30a1\u30a4\u30eb\u540d\u306e\u672b\u5c3e\u306e\u6570\u5b57\u306f\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3092\u793a\u3057\u3066\u3044\u308b\u3002</li> </ul>"},{"location":"teach/dataset/#_4","title":"\u30c7\u30fc\u30bf\u62bd\u51fa","text":"<p>\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001rosbag\u30c7\u30fc\u30bf\u304b\u3089\u6307\u5b9a\u3057\u305f\u60c5\u5831\uff08\u30c8\u30d4\u30c3\u30af\u30c7\u30fc\u30bf\uff09\u306e\u307f\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u5f15\u6570\u306e\u8a73\u7d30\u306f\u4ee5\u4e0b\u306e\u901a\u308a\u3067\u3042\u308b\u3002</p> <ul> <li>bag_dir \uff1a rosbag\u30c7\u30fc\u30bf\u304c\u4fdd\u5b58\u3055\u308c\u305f\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3092\u6307\u5b9a\u3059\u308b\u3002</li> <li>freq \uff1a \u30bb\u30f3\u30b5\u306b\u3088\u3063\u3066\u4fdd\u5b58\u6642\u306e\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\uff08Hz\uff09\u304c\u7570\u306a\u308b\u305f\u3081\u3001\u6307\u5b9a\u3057\u305f\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u30ec\u30fc\u30c8\u3067\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3001\u4fdd\u5b58\u3059\u308b\u3002</li> </ul> <pre><code>$ python3 1_rosbag2npz.py ./bag/ --freq 10\nFailed to load Python extension for LZ4 support. LZ4 compression will not be available.\n./bag/rollout_001.bag\n1664630681.9616075\n1664630682.0616074\n1664630682.1616075\n1664630682.2616074\n</code></pre> <p>\u5168\u3066\u306e\u30c8\u30d4\u30c3\u30af\u3092npz\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308b\u3068\u81a8\u5927\u306a\u30e1\u30e2\u30ea\u3092\u6d88\u8cbb\u3059\u308b\u305f\u3081\u3001\u672c\u30b9\u30af\u30ea\u30d7\u30c8\u3067\u306f\u4e00\u4f8b\u3068\u3057\u3066\u3001\u30ed\u30dc\u30c3\u30c8\u30bb\u30f3\u30b5\u60c5\u5831\uff08\u30ab\u30e1\u30e9\u753b\u50cf\u3001\u95a2\u7bc0\u89d2\u5ea6\u3001\u30b0\u30ea\u30c3\u30d1\u72b6\u614b\uff09\u3092\u4fdd\u5b58\u3059\u308b\u3002 31-35\u884c\u76ee\u3067\u4fdd\u5b58\u3057\u305f\u3044\u30c8\u30d4\u30c3\u30af\u540d\u3092\u5217\u6319\u3057\u300150-87\u884c\u76ee\u3067\u306f\u5404\u30c8\u30d4\u30c3\u30af\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u304b\u3089\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3057\u4e88\u3081\u7528\u610f\u3057\u305f\u30ea\u30b9\u30c8\u306b\u4fdd\u5b58\u3059\u308b\u3002 \u306a\u304a\u3001\u30ab\u30e1\u30e9\u753b\u50cf\u3092\u305d\u306e\u307e\u307e\u4fdd\u5b58\u3059\u308b\u3068\u81a8\u5927\u306a\u5bb9\u91cf\u304c\u5fc5\u8981\u306b\u306a\u308b\u305f\u3081\u3001\u4e8b\u524d\u306b\u30ea\u30b5\u30a4\u30ba\u3082\u3057\u304f\u306f\u30c8\u30ea\u30df\u30f3\u30b0\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3059\u308b\u3002 \u307e\u305f\u3001\u4e00\u5b9a\u9593\u9694\u3067\u30b5\u30f3\u30d7\u30ea\u30f3\u30b0\u3057\u3066\u3082\u3001rosbag record \u306e\u958b\u59cb\u30fb\u7d42\u4e86\u30bf\u30a4\u30df\u30f3\u30b0\u306b\u3088\u3063\u3066\u30c8\u30d4\u30c3\u30af\u306e\u30c7\u30fc\u30bf\u9577\u304c\u7570\u306a\u308b\u5834\u5408\u304c\u3042\u308b\u305f\u3081\u300195\u884c\u76ee\u4ee5\u964d\u3067\u306f\u6642\u7cfb\u5217\u9577\u306e\u8abf\u6574\u3092\u884c\u3063\u3066\u3044\u308b\u3002 \u306a\u304a\u672c\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u30c8\u30d4\u30c3\u30af\u540d\u3084\u30c7\u30fc\u30bf\u306e\u62bd\u51fa\u65b9\u6cd5\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u3067\u3001\u30e6\u30fc\u30b6\u81ea\u8eab\u306e\u30ed\u30dc\u30c3\u30c8\u3078\u9069\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> [SOURCE] 1_rosbag2npz.py<pre><code>import os\nimport cv2\nimport glob\nimport rospy\nimport rosbag\nimport argparse\nimport numpy as np\nparser = argparse.ArgumentParser()\nparser.add_argument(\"bag_dir\", type=str)\nparser.add_argument(\"--freq\", type=float, default=10)\nargs = parser.parse_args()\nfiles = glob.glob(os.path.join(args.bag_dir, \"*.bag\"))\nfiles.sort()\nfor file in files:\nprint(file)\nsavename = file.split(\".bag\")[0] + \".npz\"\n# Open the rosbag file\nbag = rosbag.Bag(file)\n# Get the start and end times of the rosbag file\nstart_time = bag.get_start_time()\nend_time = bag.get_end_time()\n# Get the topics in the rosbag file\n# topics = bag.get_type_and_topic_info()[1].keys()\ntopics = [\n\"/torobo/joint_states\",\n\"/torobo/head/see3cam_left/camera/color/image_repub/compressed\",\n\"/torobo/left_hand_controller/state\",\n]\n# Create a rospy.Time object to represent the current time\ncurrent_time = rospy.Time.from_sec(start_time)\njoint_list = []\nfinger_list = []\nimage_list = []\nfinger_state_list = []\nprev_finger = None\nfinger_state = 0\n# Loop through the rosbag file at regular intervals (args.freq)\nfreq = 1.0 / float(args.freq)\nwhile current_time.to_sec() &lt; end_time:\nprint(current_time.to_sec())\n# Get the messages for each topic at the current time\nfor topic in topics:\nfor topic_msg, msg, time in bag.read_messages(topic):\nif time &gt;= current_time:\nif topic == \"/torobo/joint_states\":\njoint_list.append(msg.position[7:14])\nif topic == \"/torobo/head/see3cam_left/camera/color/image_repub/compressed\":\nnp_arr = np.frombuffer(msg.data, np.uint8)\nnp_img = cv2.imdecode(np_arr, cv2.IMREAD_COLOR)\nnp_img = np_img[::2, ::2]\nimage_list.append(np_img[150:470, 110:430].astype(np.uint8))\nif topic == \"/torobo/left_hand_controller/state\":\nfinger = np.array(msg.desired.positions[3])\nif prev_finger is None:\nprev_finger = finger\nif finger - prev_finger &gt; 0.005 and finger_state == 0:\nfinger_state = 1\nelif prev_finger - finger &gt; 0.005 and finger_state == 1:\nfinger_state = 0\nprev_finger = finger\nfinger_list.append(finger)\nfinger_state_list.append(finger_state)\nbreak\n# Wait for the next interval\ncurrent_time += rospy.Duration.from_sec(freq)\nrospy.sleep(freq)\n# Close the rosbag file\nbag.close()\n# Convert list to array\njoints = np.array(joint_list, dtype=np.float32)\nfinger = np.array(finger_list, dtype=np.float32)\nfinger_state = np.array(finger_state_list, dtype=np.float32)\nimages = np.array(image_list, dtype=np.uint8)\n# Get shorter lenght\nshorter_length = min(len(joints), len(images), len(finger), len(finger_state))\n# Trim\njoints = joints[:shorter_length]\nfinger = finger[:shorter_length]\nimages = images[:shorter_length]\nfinger_state = finger_state[:shorter_length]\n# Save\nnp.savez(savename, joints=joints, finger=finger, finger_state=finger_state, images=images)\n</code></pre>"},{"location":"teach/dataset/#_5","title":"\u5b66\u7fd2/\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u4f5c\u6210","text":"<p>\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001 \u524d\u7bc0\u3067\u5909\u63db\u3055\u308c\u305fnpz\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u5b66\u7fd2\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u751f\u6210\u3059\u308b\u3002</p> <pre><code>$ python3 2_make_dataset.py\n./bag/rollout_001.npz\n./bag/rollout_002.npz\n./bag/rollout_003.npz\n./bag/rollout_004.npz\n./bag/rollout_005.npz\n</code></pre> <p>\u672c\u30d7\u30ed\u30b0\u30e9\u30e0\u306f\u6b21\u306e3\u30b9\u30c6\u30c3\u30d7\u304b\u3089\u69cb\u6210\u3055\u308c\u3001\u751f\u6210\u3055\u308c\u305f\u5404\u30c7\u30fc\u30bf\u306f <code>data</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306b\u4fdd\u5b58\u3055\u308c\u308b\u3002 \u306f\u3058\u3081\u306b\u3001 <code>load_data</code> \u95a2\u6570\u3092\u7528\u3044\u3066\u5168\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3092\u884c\u3046\u3002 \u3053\u306e\u6642\u300121,22,28,29\u884c\u76ee\u3067\u306f\u4ee5\u4e0b\u306e\u51e6\u7406\u304c\u884c\u308f\u308c\u308b\u3002</p> <ul> <li>resize_img : \u6307\u5b9a\u3057\u305f\u753b\u50cf\u30b5\u30a4\u30ba\u306b\u5909\u66f4\u3059\u308b\u3002 <code>cv2.resize</code> \u95a2\u6570\u3092\u30d9\u30fc\u30b9\u306b\u3001\u6642\u7cfb\u5217\u753b\u50cf\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002</li> <li>cos_interpolation : \u30ed\u30dc\u30c3\u30c8\u30cf\u30f3\u30c9\u306e\u958b\u9589\u30b3\u30de\u30f3\u30c9\u306e\u3088\u3046\u306b\u3001\u6025\u6fc0\u306b\u5909\u5316\u3059\u308b0/1\u306e\u30d0\u30a4\u30ca\u30ea\u30c7\u30fc\u30bf\u306e\u5b66\u7fd2\u3068\u4e88\u6e2c\u3092\u5bb9\u6613\u306b\u3059\u308b\u305f\u3081\u306b\u3001cos\u6ce2\u3092\u7528\u3044\u3066\u6ed1\u3089\u304b\u306a\u958b\u9589\u30b3\u30de\u30f3\u30c9\u306b\u6574\u5f62\u3059\u308b\u3002\u8a73\u7d30\u306f \u3053\u3061\u3089\u3002</li> <li>list_to_numpy : <code>rosbag record</code> \u6642\u306b\u4fdd\u5b58\u6642\u9593 <code>--duration</code> \u3092\u6307\u5b9a\u3057\u3066\u3082\u3001ROS\u30b7\u30b9\u30c6\u30e0\u306e\u5b9f\u884c\u30bf\u30a4\u30df\u30f3\u30b0\u306e\u95a2\u4fc2\u4e0a\u3001\u5fc5\u305a\u5168\u3066\u306erosbag\u30c7\u30fc\u30bf\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u9577\u304c\u540c\u3058\u306b\u306a\u308b\u3068\u306f\u9650\u3089\u306a\u3044\u3002\u305d\u3053\u3067\u3001\u6700\u3082\u9577\u3044\u30b7\u30fc\u30b1\u30f3\u30b9\u306b\u5408\u308f\u305b\u3066padding\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u3067\u3001\u30c7\u30fc\u30bf\u9577\u306e\u7d71\u4e00\u30fb\u6574\u5f62\u3092\u884c\u3046\u3002</li> </ul> <p>\u6b21\u306b45-48\u884c\u76ee\u3067\u306f\u3001\u30e6\u30fc\u30b6\u304c\u6307\u5b9a\u3059\u308b\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\uff0836,37\u884c\u76ee\uff09\u306b\u57fa\u3065\u3044\u3066\u5b66\u7fd2\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u4ed5\u5206\u3051\u3092\u884c\u3046\u3002 \u6559\u793a\u4f4d\u7f6e\u3068\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u306e\u95a2\u4fc2\u306f\u4ee5\u4e0b\u306e\u8868\u306b\u793a\u3059\u901a\u308a\u3067\u3042\u308b\u3002 \u8868\u306e\u4f4d\u7f6eA-E\u306f\u7269\u4f53\u4f4d\u7f6e\u306b\u5bfe\u5fdc\u3057\u3066\u304a\u308a\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306f\u5404\u6559\u793a\u4f4d\u7f6e\u3067\u305d\u308c\u305e\u308c4\u3064\u3001\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f\u5168\u4f4d\u7f6e\u3067\u305d\u308c\u305e\u308c1\u3064\u53ce\u96c6\u3057\u305f\u3002 \u3059\u306a\u308f\u3061\u3001\u5408\u8a08\u306715\u30c7\u30fc\u30bf\u3092\u53ce\u96c6\u3057\u305f\u3002 \u6559\u793a\u4f4d\u7f6e\u3067\u53ce\u96c6\u3057\u305f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u307f\u3092\u7528\u3044\u3066\u30e2\u30c7\u30eb\u3092\u8a55\u4fa1\u3057\u305f\u5834\u5408\u3001\u6559\u793a\u4f4d\u7f6e\u306b\u904e\u5b66\u7fd2\u3057\u3066\u3057\u307e\u3044\u3001\u672a\u5b66\u7fd2\u4f4d\u7f6e\u306b\u304a\u3051\u308b\u6c4e\u5316\u52d5\u4f5c\u3092\u7372\u5f97\u3057\u306b\u304f\u3044\u3002 \u305d\u306e\u305f\u3081\u3001\u591a\u69d8\u306a\u4f4d\u7f6e\u306b\u304a\u3051\u308b\u6c4e\u5316\u6027\u80fd\u3092\u7372\u5f97\u3059\u308b\u305f\u3081\u306b\u3001\u5c11\u91cf\u3067\u3082\u672a\u5b66\u7fd2\u4f4d\u7f6e\u3092\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306b\u542b\u3081\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3042\u308b\u3002</p> <p>\u6700\u5f8c\u306b49-50\u884c\u76ee\u3067\u3001\u95a2\u7bc0\u89d2\u5ea6\u306e\u6b63\u898f\u5316\u30d1\u30e9\u30e1\u30fc\u30bf\u3068\u3057\u3066\u5404\u95a2\u7bc0\u89d2\u5ea6\u306e\u4e0a\u4e0b\u9650\u3092\u8a08\u7b97\u3057\u3001\u4fdd\u5b58\u3059\u308b\u3002 \u95a2\u7bc0\u89d2\u5ea6\u306e\u4e0a\u4e0b\u9650\u3092\u8a08\u7b97\u3059\u308b\u7406\u7531\u306b\u3064\u3044\u3066\u306f\u3001\u3053\u3061\u3089\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</p> Position A B C D E train 0,1,2,3 None 5,6,7,8 None 10,11,12,13 test 4 15 9 16 14 [SOURCE] 2_make_dataset.py<pre><code>import os\nimport cv2\nimport glob\nimport argparse\nimport numpy as np\nimport matplotlib.pylab as plt\nfrom eipl.utils import resize_img, calc_minmax, list_to_numpy, cos_interpolation\ndef load_data(dir):\njoints = []\nimages = []\nseq_length = []\nfiles = glob.glob(os.path.join(dir, \"*.npz\"))\nfiles.sort()\nfor filename in files:\nprint(filename)\nnpz_data = np.load(filename)\nimages.append(resize_img(npz_data[\"images\"], (128, 128)))\nfinger_state = cos_interpolation(npz_data[\"finger_state\"])\n_joints = np.concatenate((npz_data[\"joints\"], finger_state), axis=-1)\njoints.append(_joints)\nseq_length.append(len(_joints))\nmax_seq = max(seq_length)\nimages = list_to_numpy(images, max_seq)\njoints = list_to_numpy(joints, max_seq)\nreturn images, joints\nif __name__ == \"__main__\":\n# dataset index\ntrain_list = [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13]\ntest_list = [4, 9, 14, 15, 16]\n# load data\nimages, joints = load_data(\"./bag/\")\n# save images and joints\nnp.save(\"./data/train/images.npy\", images[train_list].astype(np.uint8))\nnp.save(\"./data/train/joints.npy\", joints[train_list].astype(np.float32))\nnp.save(\"./data/test/images.npy\", images[test_list].astype(np.uint8))\nnp.save(\"./data/test/joints.npy\", joints[test_list].astype(np.float32))\n# save joint bounds\njoint_bounds = calc_minmax(joints)\nnp.save(\"./data/joint_bounds.npy\", joint_bounds)\n</code></pre>"},{"location":"teach/dataset/#_6","title":"\u30c7\u30fc\u30bf\u53ef\u8996\u5316","text":"<p>\u6b21\u306e\u30b3\u30de\u30f3\u30c9\u3092\u5b9f\u884c\u3059\u308b\u3053\u3068\u3067\u3001 \u30ed\u30dc\u30c3\u30c8\u306e\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u304cgif\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u308b\u3002 \u5f15\u6570 <code>idx</code> \u306f\u53ef\u8996\u5316\u3057\u305f\u3044\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u3042\u308b\u3002 \u5b9f\u884c\u7d50\u679c\u3088\u308a\u3001\u95a2\u7bc0\u89d2\u5ea6\u306e\u7bc4\u56f2\u304c [-0.92, 1.85] \u304b\u3089 [0.1, 0.9] \u306b\u306a\u3063\u3066\u304a\u308a\u3001\u30e6\u30fc\u30b6\u304c\u6307\u5b9a\u3057\u305f\u6b63\u898f\u5316\u7bc4\u56f2\u5185\u306b\u53ce\u307e\u3063\u3066\u3044\u308b\u3053\u3068\u304c\u308f\u304b\u308b\u3002 \u307e\u305f\u4e0b\u56f3\u306f\u3001\u5b9f\u969b\u306b\u751f\u6210\u3055\u308c\u305fgif\u30a2\u30cb\u30e1\u30fc\u30b7\u30e7\u30f3\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u5de6\u304b\u3089\u30ab\u30e1\u30e9\u753b\u50cf\u3001\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u3001\u6b63\u898f\u5316\u5f8c\u306e\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u3067\u3042\u308b\u3002 \u4eee\u306b\u753b\u50cf\u306e\u30c8\u30ea\u30df\u30f3\u30b0\u3084\u95a2\u7bc0\u89d2\u5ea6\u306e\u6b63\u898f\u5316\u7bc4\u56f2\u304c\u671f\u5f85\u3068\u7570\u306a\u308b\u5834\u5408\u3001\u524d\u7bc0\u306e <code>resize_img</code>\u3001 <code>calc_minmax</code> \u51e6\u7406\u3067\u8aa4\u308a\u304c\u767a\u751f\u3057\u3066\u3044\u308b\u53ef\u80fd\u6027\u304c\u9ad8\u3044\u3002</p> <pre><code>$ python3 3_check_data.py --idx 4\nload test data, index number is 4\nJoint: shape=(5, 187, 8), min=-0.92, max=1.85\nNorm joint: shape=(5, 187, 8), min=0.1, max=0.9\n</code></pre> <p></p> [SOURCE] 3_check_data.py<pre><code>import argparse\nimport numpy as np\nimport matplotlib.pylab as plt\nimport matplotlib.animation as anim\nfrom eipl.utils import normalization\nparser = argparse.ArgumentParser()\nparser.add_argument(\"--idx\", type=int, default=0)\nargs = parser.parse_args()\nidx = int(args.idx)\njoints = np.load(\"./data/test/joints.npy\")\njoint_bounds = np.load(\"./data/joint_bounds.npy\")\nimages = np.load(\"./data/test/images.npy\")\nN = images.shape[1]\n# normalized joints\nminmax = [0.1, 0.9]\nnorm_joints = normalization(joints, joint_bounds, minmax)\n# print data information\nprint(\"load test data, index number is {}\".format(idx))\nprint(\"Joint: shape={}, min={:.3g}, max={:.3g}\".format(joints.shape, joints.min(), joints.max()))\nprint(\n\"Norm joint: shape={}, min={:.3g}, max={:.3g}\".format(\nnorm_joints.shape, norm_joints.min(), norm_joints.max()\n)\n)\n# plot images and normalized joints\nfig, ax = plt.subplots(1, 3, figsize=(14, 5), dpi=60)\ndef anim_update(i):\nfor j in range(3):\nax[j].cla()\n# plot image\nax[0].imshow(images[idx, i, :, :, ::-1])\nax[0].axis(\"off\")\nax[0].set_title(\"Image\")\n# plot joint angle\nax[1].set_ylim(-1.0, 2.0)\nax[1].set_xlim(0, N)\nax[1].plot(joints[idx], linestyle=\"dashed\", c=\"k\")\nfor joint_idx in range(8):\nax[1].plot(np.arange(i + 1), joints[idx, : i + 1, joint_idx])\nax[1].set_xlabel(\"Step\")\nax[1].set_title(\"Joint angles\")\n# plot normalized joint angle\nax[2].set_ylim(0.0, 1.0)\nax[2].set_xlim(0, N)\nax[2].plot(norm_joints[idx], linestyle=\"dashed\", c=\"k\")\nfor joint_idx in range(8):\nax[2].plot(np.arange(i + 1), norm_joints[idx, : i + 1, joint_idx])\nax[2].set_xlabel(\"Step\")\nax[2].set_title(\"Normalized joint angles\")\nani = anim.FuncAnimation(fig, anim_update, interval=int(N / 10), frames=N)\nani.save(\"./output/check_data_{}.gif\".format(idx))\n</code></pre>"},{"location":"teach/environment/","title":"\u5b9f\u884c\u74b0\u5883","text":""},{"location":"teach/environment/#ros","title":"ROS","text":"<p>ROS\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u308b\u74b0\u5883\u3067\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u3092\u884c\u3046\u5834\u5408\u3001\u4ee5\u4e0b\u306e\u51e6\u7406\u306f\u4e0d\u8981\u3067\u3042\u308b\u305f\u3081\u3001 \u6b21\u7ae0\u3078\u9032\u3093\u3067\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"teach/environment/#pyenv","title":"pyenv","text":"<p>\u672c\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001<code>rosbag</code> \u304b\u3089\u30c7\u30fc\u30bf\u3092\u62bd\u51fa\u3059\u308b\u306e\u306b rospy \u3068 rosbag \u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5229\u7528\u3059\u308b\u3002 \u305d\u306e\u305f\u3081ROS\uff08Noetic\u63a8\u5968\uff09\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u6e08\u307f\u306ePC\u3067\u3042\u308c\u3070\u3001\u305d\u306e\u307e\u307e\u5b9f\u884c\u3059\u308c\u3070\u554f\u984c\u306a\u304f\u52d5\u4f5c\u3059\u308b\u3002</p> <p>\u4e00\u65b9\u3067\u3001ROS\u304c\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3055\u308c\u3066\u3044\u306a\u3044PC\u3067rospy\u306a\u3069\u3092\u4f7f\u3046\u65b9\u6cd5\u3068\u3057\u3066\u3001 rospypi/simple\u304c\u6319\u3052\u3089\u308c\u308b\u3002 \u672c\u30d1\u30c3\u30b1\u30fc\u30b8\u306f\u3001ROS\u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3059\u308b\u3053\u3068\u306a\u304f\u3001rospy\u3084tf2\u306a\u3069\u306e\u30d0\u30a4\u30ca\u30ea\u30d1\u30c3\u30b1\u30fc\u30b8\u3092\u5229\u7528\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u3055\u3089\u306b\u3001Linux\u3084Windows\u3001MacOS\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u53ce\u96c6\u3057\u305f\u30c7\u30fc\u30bf\u3092\u81ea\u8eab\u306ePC\u74b0\u5883\u3067\u5bb9\u6613\u306b\u89e3\u6790\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u306a\u304a\u3001\u65e2\u5b58\u306epython\u74b0\u5883\u3068\u306e\u7af6\u5408\u3092\u9632\u3050\u305f\u3081\u306b\u3001venv\u3092\u7528\u3044\u3066\u4eee\u60f3\u74b0\u5883\u3092\u4f5c\u308b\u3053\u3068\u3092\u63a8\u5968\u3059\u308b\u3002 \u4ee5\u4e0b\u306b\u3001venv\u3092\u7528\u3044\u305frospypi/simple\u30e9\u30a4\u30d6\u30e9\u30ea\u306e\u74b0\u5883\u69cb\u7bc9\u624b\u9806\u3092\u793a\u3059\u3002</p> <pre><code>$ python3 -m venv ~/.venv/rosbag\n$ source ~/.venv/rosbag/bin/activate\n$ pip install -U pip\n$ pip install --extra-index-url https://rospypi.github.io/simple/ rospy rosbag\n$ pip install matplotlib numpy opencv-python\n</code></pre> <p>Note</p> <p>rospypi/simple\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u3059\u3079\u3066\u306e\u30e1\u30c3\u30bb\u30fc\u30b8\u30c7\u30fc\u30bf\u306b\u5bfe\u5fdc\u3067\u304d\u308b\u3053\u3068\u306f\u78ba\u8a8d\u3067\u304d\u3066\u3044\u306a\u3044\u3002 \u7279\u306b\u30ab\u30b9\u30bf\u30e0ROS\u30e1\u30c3\u30bb\u30fc\u30b8\u306f\u672a\u691c\u8a3c\u3067\u3042\u308b\u305f\u3081\u3001\u4eee\u60f3\u74b0\u5883\u3067\u30d7\u30ed\u30b0\u30e9\u30e0\u304c\u6b63\u3057\u304f\u5b9f\u884c\u3067\u304d\u306a\u3044\u5834\u5408\u306f\u3001 ROS\u74b0\u5883\u3067\u5b9f\u884c\u3059\u308b\u3053\u3068\u3002</p>"},{"location":"teach/overview/","title":"\u6982\u8981","text":"<p>\u3053\u3053\u3067\u306f\u3001ROS\u3092\u7528\u3044\u3066\u52d5\u4f5c\u6559\u793a\u3057\u305f\u969b\u306e\u30ed\u30dc\u30c3\u30c8\u30bb\u30f3\u30b5\u30c7\u30fc\u30bf <code>rosbag</code> \u304b\u3089\u6a5f\u68b0\u5b66\u7fd2\u306e\u305f\u3081\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002 \u672c\u7ae0\u3067\u306f\u7406\u89e3\u3092\u6df1\u3081\u308b\u305f\u3081\u306b\u3001\u53ce\u96c6\u6e08\u307f\u306e\u30c7\u30fc\u30bf\u3068\u30b9\u30af\u30ea\u30d7\u30c8\u3092  \u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\uff081.3GB\uff09 \u3057\u3001\u30de\u30cb\u30e5\u30a2\u30eb\u306b\u6cbf\u3063\u3066\u5b9f\u884c\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3059\u308b\u3002</p>"},{"location":"teach/overview/#task","title":"\u5b9f\u9a13\u30bf\u30b9\u30af","text":"<p>\u6771\u4eac\u30ed\u30dc\u30c6\u30a3\u30af\u30b9\u793e\u88fd\u306e\u30b9\u30de\u30fc\u30c8\u30ed\u30dc\u30c3\u30c8 AIREC\uff08AI-driven Robot for Embrace and Care\uff09 \u3092\u7528\u3044\u3066\u3001\u7269\u4f53\u628a\u6301\u52d5\u4f5c\u3092\u6559\u793a\u3059\u308b\u3002 \u4e0b\u56f3\u306f\u30bf\u30b9\u30af\u306e\u6982\u8981\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u56f3\u4e2d\u306b\u793a\u3059\u6559\u793a\u4f4d\u7f6e\uff08\u4e38\u70b93\u304b\u6240\uff09\u3067\u306e\u7269\u4f53\u628a\u6301\u7d4c\u9a13\u306b\u57fa\u3065\u3044\u3066\u3001\u672a\u5b66\u7fd2\u4f4d\u7f6e\uff082\u304b\u6240\uff09\u306b\u304a\u3051\u308b\u6c4e\u5316\u6027\u80fd\u3092\u8a55\u4fa1\u3059\u308b\u3002 \u5b66\u7fd2\u30c7\u30fc\u30bf\u306f\u5404\u6559\u793a\u4f4d\u7f6e\u3067\u305d\u308c\u305e\u308c4\u56de\u5408\u8a0812\u30c7\u30fc\u30bf\u3001 \u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306f\u672a\u5b66\u7fd2\u4f4d\u7f6e\u3082\u542b\u3080\u51685\u304b\u6240\u3067\u305d\u308c\u305e\u308c1\u56de\u5408\u8a085\u30c7\u30fc\u30bf\u53ce\u96c6\u3057\u305f\u3002</p> <p></p>"},{"location":"teach/overview/#teaching","title":"\u52d5\u4f5c\u6559\u793a","text":"<p>AIREC\u306f\u3001\u4ee5\u4e0b\u306b\u793a\u3059\u3088\u3046\u306b\u30d0\u30a4\u30e9\u30c6\u30e9\u30eb\u9060\u9694\u64cd\u4f5c\u304c\u53ef\u80fd\u306a\u30ed\u30dc\u30c3\u30c8\u30b7\u30b9\u30c6\u30e0\u3067\u3042\u308a\u3001 \u64cd\u4f5c\u8005\u306f\u30e2\u30cb\u30bf\u306b\u8868\u793a\u3055\u308c\u305f\u30ed\u30dc\u30c3\u30c8\u8996\u899a\u753b\u50cf\u3068\u30ed\u30dc\u30c3\u30c8\u304b\u3089\u306e\u529b\u899a\u30d5\u30a3\u30fc\u30c9\u30d0\u30c3\u30af\u306b\u57fa\u3065\u3044\u3066\u52d5\u4f5c\u6559\u793a\u3092\u884c\u3046\u3053\u3068\u3067\u3001 \u591a\u81ea\u7531\u5ea6\u30ed\u30dc\u30c3\u30c8\u3092\u3088\u308a\u76f4\u611f\u7684\u306b\u6559\u793a\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u3053\u3053\u3067\u306f\u3001\u9060\u9694\u64cd\u4f5c\u88c5\u7f6e\u3092\u7528\u3044\u3066\u30bf\u30b9\u30af\u3092\u6559\u793a\u3057\u305f\u969b\u306e\u30ed\u30dc\u30c3\u30c8\u306e\u30bb\u30f3\u30b5\u60c5\u5831\uff08\u95a2\u7bc0\u89d2\u5ea6\u3001\u30ab\u30e1\u30e9\u753b\u50cf\u3001\u30c8\u30eb\u30af\u60c5\u5831\u306a\u3069\uff09\u3092 <code>rosbag</code> \u5f62\u5f0f\u3067\u4fdd\u5b58\u3057\u3001\u4ee5\u964d\u3067\u306f\u6a5f\u68b0\u5b66\u7fd2\u30e2\u30c7\u30eb\u306e\u305f\u3081\u306e\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u3092\u4f5c\u6210\u3059\u308b\u3002</p> <p>\u306a\u304a\u3001\u3053\u306e\u3088\u3046\u306a\u5c02\u7528\u30c7\u30d0\u30a4\u30b9\u7121\u3057\u3067\u3082\u30ed\u30dc\u30c3\u30c8\u306b\u52d5\u4f5c\u6559\u793a\u3059\u308b\u3053\u3068\u306f\u53ef\u80fd\u3067\u3042\u308b\u3002 OpenManipulator\u3092\u7528\u3044\u305f\u52d5\u4f5c\u6559\u793a\u30bb\u30af\u30b7\u30e7\u30f3\u3067\u306f\u3001 \u30ea\u30fc\u30c0\u30fb\u30d5\u30a9\u30ed\u30ef\u30b7\u30b9\u30c6\u30e0\u3068\u30b8\u30e7\u30a4\u30b9\u30c6\u30a3\u30c3\u30af\u306e2\u7a2e\u985e\u306e\u52d5\u4f5c\u6559\u793a\u65b9\u6cd5\u3068\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u4f5c\u6210\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002</p> <p> <p></p>"},{"location":"tips/augmentation/","title":"\u753b\u50cf\u62e1\u5f35","text":""},{"location":"tips/augmentation/#transformsrandomaffine","title":"transforms.RandomAffine","text":"<p>transforms.RandomAffine\u306f\u3001 \u753b\u50cf\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u30a2\u30d5\u30a3\u30f3\u5909\u63db\u3092\u9069\u7528\u3059\u308b\u305f\u3081\u306e\u95a2\u6570\u3067\u3042\u308b\u3002 \u30a2\u30d5\u30a3\u30f3\u5909\u63db\u306f\u3001\u753b\u50cf\u3092\u5e73\u884c\u79fb\u52d5\u3001\u56de\u8ee2\u3001\u62e1\u5927\u7e2e\u5c0f\u3001\u6b6a\u307f\u306a\u3069\u306e\u64cd\u4f5c\u3067\u5909\u5f62\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u4e0b\u56f3\u306f\u753b\u50cf\u3092\u4e0a\u4e0b\u5de6\u53f3\u306b\u5e73\u884c\u79fb\u52d5\u3055\u305b\u305f\u7d50\u679c\u3067\u3042\u308b\u3002 \u30a2\u30d5\u30a3\u30f3\u5909\u63db\u3092AutoEncoder\u306e\u5b66\u7fd2\u306b\u7528\u3044\u308b\u3068\u3001 \u7269\u4f53\u306e\u4f4d\u7f6e\u60c5\u5831\u304c\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u3057\u3066\u8868\u73fe\uff08\u62bd\u51fa\uff09\u3055\u308c\u308b\u305f\u3081\u3001 \u672a\u5b66\u7fd2\u4f4d\u7f6e\u3067\u3082\u9069\u5207\u306b\u753b\u50cf\u518d\u69cb\u6210\u3055\u308c\u308b\u3002</p> <p></p>"},{"location":"tips/augmentation/#transformsrandomverticalflip","title":"transforms.RandomVerticalFlip","text":"<p>transforms.RandomVerticalFlip\u306f\u3001 \u5165\u529b\u753b\u50cf\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u4e0a\u4e0b\u53cd\u8ee2\u3059\u308b\u95a2\u6570\u3067\u3042\u308a\u3001\u30c7\u30fc\u30bf\u306e\u591a\u69d8\u6027\u3092\u5897\u3084\u3059\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p></p>"},{"location":"tips/augmentation/#transformsrandomhorizontalflip","title":"transforms.RandomHorizontalFlip","text":"<p>transforms.RandomHorizontalFlip\u306f\u3001 \u5165\u529b\u753b\u50cf\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u5de6\u53f3\u53cd\u8ee2\u3059\u308b\u95a2\u6570\u3067\u3042\u308a\u3001 <code>RandomVerticalFlip</code>\u3068\u7d44\u307f\u5408\u308f\u305b\u308b\u3053\u3068\u3067\u30e2\u30c7\u30eb\u306e\u6c4e\u5316\u6027\u80fd\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p></p>"},{"location":"tips/augmentation/#transformscolorjitter","title":"transforms.ColorJitter","text":"<p>transforms.ColorJitter\u306f\u3001 \u5165\u529b\u753b\u50cf\u306b\u5bfe\u3057\u3066\u30e9\u30f3\u30c0\u30e0\u306a\u8272\u5909\u63db\u3092\u884c\u3046\u95a2\u6570\u3067\u3042\u308a\u3001 \u4e0b\u56f3\u306b\u793a\u3059\u3088\u3046\u306b\u3001\u753b\u50cf\u306e\u660e\u308b\u3055\u3001\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u3001\u5f69\u5ea6\u3001\u8272\u76f8\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p></p>"},{"location":"tips/augmentation/#gridmask","title":"GridMask","text":"<p>GridMask\u3068\u306f\u3001\u30b0\u30ea\u30c3\u30c9\u72b6\u306e\u30d1\u30bf\u30fc\u30f3\u3092\u4f7f\u3063\u3066\u753b\u50cf\u306e\u4e00\u90e8\u3092\u975e\u8868\u793a\u306b\u3059\u308b\u3053\u3068\u3067\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u591a\u69d8\u6027\u3092\u5897\u3084\u3059\u624b\u6cd5\u3067\u3042\u308b1\u3002 \u4e0b\u56f3\u306b\u793a\u3059\u3088\u3046\u306b\u3001\u753b\u50cf\u5185\u306e\u4e00\u90e8\u5206\u304c\u6b20\u3051\u308b\u305f\u3081\u3001\u30e2\u30c7\u30eb\u306f\u3088\u308a\u8907\u96d1\u306a\u30d1\u30bf\u30fc\u30f3\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3067\u6c4e\u5316\u6027\u80fd\u306e\u5411\u4e0a\u304c\u671f\u5f85\u3067\u304d\u308b\u3002 \u6ce8\u610f\u6a5f\u69cb\u3092\u5099\u3048\u305f\u30ed\u30dc\u30c3\u30c8\u52d5\u4f5c\u751f\u6210\u30e2\u30c7\u30eb\u306b\u9069\u7528\u3059\u308b\u3068\u3001\u753b\u50cf\u5185\u306e\u6b20\u3051\u305f\u90e8\u5206\u306b\u306f\u6ce8\u610f\u304c\u5411\u304b\u306a\u3044\u3053\u3068\u304b\u3089\u3001\u7d50\u679c\u7684\u306b\u3001\u52d5\u4f5c\u4e88\u6e2c\u306b\u91cd\u8981\u306a\u7a7a\u9593\u7684\u6ce8\u610f\u3092\u63a2\u7d22\uff08\u5b66\u7fd2\uff09\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002 \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306f\u3053\u3061\u3089\u304b\u3089\u3002</p> <p></p> <ol> <li> <p>Pengguang Chen, Shu Liu, Hengshuang Zhao, and Jiaya Jia. Gridmask data augmentation. arXiv preprint arXiv:2001.04086, 2020.\u00a0\u21a9</p> </li> </ol>"},{"location":"tips/normalization/","title":"\u95a2\u7bc0\u89d2\u5ea6\u51e6\u7406","text":""},{"location":"tips/normalization/#joint_norm","title":"\u95a2\u7bc0\u89d2\u5ea6\u6b63\u898f\u5316","text":"<p>\u30ed\u30dc\u30c3\u30c8\u306e\u30ab\u30e1\u30e9\u753b\u50cf\u306f256\u968e\u8abf\uff080\uff5e255 = 8bit\uff09\u306e\u6574\u6570\u5024\u3067\u8868\u73fe\u3055\u308c\u3066\u3044\u308b\u305f\u3081\u3001\uff3b0, 255\uff3d\u304b\u3089\u4efb\u610f\u306e\u7bc4\u56f2\uff08\u4f8b\u3048\u3070\uff3b0.0\u30011.0\uff3d\uff09\u306b\u53ce\u307e\u308b\u3088\u3046\u306b\u6b63\u898f\u5316\u3092\u884c\u3048\u3070\u826f\u3044\u3002 \u4e00\u65b9\u3067\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u306f\u3001\u95a2\u7bc0\u69cb\u9020\u3084\u53ef\u52d5\u7bc4\u56f2\u3001\u3055\u3089\u306b\u6559\u793a\u30bf\u30b9\u30af\u306b\u3088\u3063\u3066\u53d6\u308a\u3046\u308b\u7bc4\u56f2\u304c\u7570\u306a\u308b\u3002 \u6700\u3082\u5358\u7d14\u306a\u6b63\u898f\u5316\u65b9\u6cd5\u3068\u3057\u3066\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u6700\u5927\u30fb\u6700\u5c0f\u5024\u306b\u57fa\u3065\u3044\u3066\u6b63\u898f\u5316\u3059\u308b\u65b9\u6cd5\u304c\u8003\u3048\u3089\u308c\u308b\u304c\u3001\u5927\u304d\u306a\u52d5\u304d\u3092\u3059\u308b\u95a2\u7bc0\u306b\u6b63\u898f\u5316\u7bc4\u56f2\u304c\u5f15\u3063\u5f35\u3089\u308c\u3066\u3057\u307e\u3044\u3001\u7e4a\u7d30\u306a\u52d5\u304d\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u304c\u56f0\u96e3\u3067\u3042\u308b\u3002 \u305d\u3053\u3067\u3001\u5404\u95a2\u7bc0\u306e\u6700\u5927\u30fb\u6700\u5c0f\u5024\u306b\u57fa\u3065\u3044\u3066\u6b63\u898f\u5316\u3059\u308b\u3053\u3068\u3067\u3001\u7d30\u304b\u3044\u52d5\u304d\u3082\u5f37\u8abf\u3057\u3066\u5b66\u7fd2\u3055\u305b\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p>\u4e0b\u56f3\u306f\u3001\u7269\u4f53\u628a\u6301\u52d5\u4f5c\u6642\u306e\u95a2\u7bc0\u89d2\u5ea6\u306e\u6b63\u898f\u5316\u7d50\u679c\u3092\u793a\u3057\u3066\u3044\u308b\u3002 \u5de6\u304b\u3089\u53ce\u96c6\u3057\u305f\u751f\u30c7\u30fc\u30bf\u3001\u5b66\u7fd2\u30c7\u30fc\u30bf\u306e\u6700\u5927\u30fb\u6700\u5c0f\u5024\u306b\u57fa\u3065\u3044\u3066\u6b63\u898f\u5316\uff08\u5168\u4f53\u6b63\u898f\u5316\uff09\u3001\u5404\u95a2\u7bc0\u89d2\u5ea6\u306e\u6700\u5927\u30fb\u6700\u5c0f\u5024\u306b\u57fa\u3065\u3044\u3066\u6b63\u898f\u5316\uff08\u95a2\u7bc0\u6b63\u898f\u5316\uff09\u3057\u305f\u7d50\u679c\u3067\u3042\u308b\u3002 \u5168\u4f53\u6b63\u898f\u5316\u3092\u884c\u3063\u305f\u5834\u5408\u3001\u751f\u30c7\u30fc\u30bf\u3068\u6bd4\u8f03\u3057\u3066\u6b63\u898f\u5316\u5f8c\u306e\u6ce2\u5f62\u306b\u5927\u304d\u306a\u5909\u5316\u306f\u306a\u304f\u3001\u5358\u7d14\u306b\u95a2\u7bc0\u89d2\u5ea6\u306e\u7bc4\u56f2\u304c0.0\u304b\u30891.0\u306b\u5909\u63db\u3055\u308c\u3066\u3044\u308b\u3002 \u4e00\u65b9\u3067\u95a2\u7bc0\u6b63\u898f\u5316\u3092\u884c\u3063\u305f\u5834\u5408\u3001\u95a2\u7bc0\u6bce\u306b\u6b63\u898f\u5316\u3092\u884c\u3046\u305f\u3081\u5927\u307e\u304b\u306a\u52d5\u304d\uff08\u4f8b\u3048\u3070\u7070\u8272\u6ce2\u5f62\uff09\u3068\u7d30\u304b\u3044\u52d5\u304d\uff08\u9752\u8272\u6ce2\u5f62\uff09\u306e\u4e21\u65b9\u304c\u9855\u8457\u306b\u306a\u3063\u3066\u3044\u308b\u3002 \u3053\u308c\u306b\u3088\u308a\u3001\u5168\u4f53\u6b63\u898f\u5316\u3088\u308a\u3082\u9ad8\u7cbe\u5ea6\u306b\u30ed\u30dc\u30c3\u30c8\u306e\u52d5\u4f5c\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p></p> <p>Note</p> <p>\u30bf\u30b9\u30af\u306b\u3088\u3063\u3066\u306f\u3001\u5168\u304f\u52d5\u304b\u306a\u3044\u3082\u3057\u304f\u306f\u5909\u5316\u91cf\u304c\u3054\u304f\u50c5\u304b\u306a\u95a2\u7bc0\u3082\u3042\u308b\u3002\u305d\u306e\u3088\u3046\u306a\u95a2\u7bc0\u306b\u5bfe\u3057\u95a2\u7bc0\u6b63\u898f\u5316\u3092\u9069\u7528\u3057\u305f\u5834\u5408\u3001\u6b63\u898f\u5316\u5f8c\u306e\u6ce2\u5f62\u304c\u5927\u304d\u304f\u4e71\u308c\u308b\u305f\u3081\u5b66\u7fd2\u306b\u60aa\u5f71\u97ff\u3092\u53ca\u307c\u3059\u5834\u5408\u304c\u3042\u308b\u3002\u6b63\u898f\u5316\u5f8c\u306e\u6ce2\u5f62\u3092\u78ba\u8a8d\u306e\u4e0a\u3001\u305d\u306e\u3088\u3046\u306a\u95a2\u7bc0\u6ce2\u5f62\u304c\u3042\u308b\u5834\u5408\u3001\u624b\u52d5\u3067\u6b63\u898f\u5316\u7bc4\u56f2\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u3092\u63a8\u5968\u3059\u308b\u3002\u307e\u305f\u30c8\u30eb\u30af\u3084\u96fb\u6d41\u5024\u306e\u3088\u3046\u306b\u3001\u5143\u3005\u30ce\u30a4\u30b8\u30fc\u306a\u30c7\u30fc\u30bf\u306b\u5bfe\u3057\u95a2\u7bc0\u6b63\u898f\u5316\u306f\u9069\u3055\u306a\u3044\u3053\u3068\u306b\u6ce8\u610f\u3055\u308c\u305f\u3044\u3002</p>"},{"location":"tips/normalization/#cos-interpolation","title":"\u30b3\u30b5\u30a4\u30f3\u88dc\u5b8c","text":"<p>\u30ed\u30dc\u30c3\u30c8\u30cf\u30f3\u30c9\u306e\u958b\u9589\u30b3\u30de\u30f3\u30c9\u3084\u3001PSD\uff08Position Sensitive Detector\uff09\u30bb\u30f3\u30b5\u306e\u3088\u3046\u306b\u3001ON/OFF\u3067\u8868\u73fe\u3055\u308c\u308b\u30c7\u30fc\u30bf\u3092\u5b66\u7fd2\u3059\u308b\u5834\u5408\u3001\u4e8b\u524d\u306b\u5e73\u6ed1\u5316\u51e6\u7406\u3092\u884c\u3046\u3053\u3068\u3067\u5b66\u7fd2\u3092\u5bb9\u6613\u306b\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u4ee5\u4e0b\u306f\u3001\u5143\u30c7\u30fc\u30bf\uff08\u9752\u8272\u77e9\u5f62\u6ce2\uff09\u306b\u5bfe\u3057\u5e73\u6ed1\u5316\u51e6\u7406\u3092\u9069\u7528\u3057\u305f\u7d50\u679c\u3067\u3042\u308a\u3001\u5f15\u6570\uff08 <code>step</code> \u30b5\u30a4\u30ba\uff09\u306b\u5fdc\u3058\u3066\u6ed1\u3089\u304b\u3055\u3092\u8abf\u6574\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p></p>"},{"location":"zoo/CAE-RNN/","title":"\u6982\u8981","text":"<p>CAE-RNN\u306f\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u611f\u899a\u904b\u52d5\u60c5\u5831\u3092\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306b\u3001\u753b\u50cf\u7279\u5fb4\u62bd\u51fa\u90e8\u3068\u6642\u7cfb\u5217\u5b66\u7fd2\u90e8\u304b\u3089\u69cb\u6210\u3055\u308c\u308b1 2\u3002 \u4e0b\u56f3\u306f\u3001CAE-RNN\u30e2\u30c7\u30eb\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u6210\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u8996\u899a\u60c5\u5831\u3067\u3042\u308b\u30ab\u30e1\u30e9\u753b\u50cf\u304b\u3089\u753b\u50cf\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308bConvolutional Auto-Encoder(CAE)\u3068\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u8eab\u4f53\u60c5\u5831\u3067\u3042\u308b\u95a2\u7bc0\u89d2\u3068\u753b\u50cf\u7279\u5fb4\u91cf\u306e\u6642\u7cfb\u5217\u60c5\u5831\u3092\u5b66\u7fd2\u3059\u308bRecurrent Neural Network(RNN)\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3002 CAE-RNN\u306f\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u62bd\u51fa\u90e8\u3068\u6642\u7cfb\u5217\u5b66\u7fd2\u90e8\u3092\u72ec\u7acb\u3057\u3066\u5b66\u7fd2\u3092\u884c\u3046\u3053\u3068\u3092\u7279\u5fb4\u3068\u3057\u3066\u304a\u308a\u3001CAE\u3068RNN\u306e\u9806\u306b\u5b66\u7fd2\u3092\u884c\u3046\u3002 \u591a\u69d8\u306a\u611f\u899a\u904b\u52d5\u60c5\u5831\u3092\u5b66\u7fd2\u3055\u305b\u308b\u3053\u3068\u3067\u3001\u5f93\u6765\u3067\u306f\u8a8d\u8b58\u56f0\u96e3\u306a\u67d4\u8edf\u7269\u4f53\u306e\u4f4d\u7f6e\u3001\u5f62\u72b6\u306a\u3069\u306e\u753b\u50cf\u7279\u5fb4\u91cf\u306e\u62bd\u51fa\u3068\u3001\u305d\u308c\u306b\u5bfe\u5fdc\u3057\u305f\u52d5\u4f5c\u3092\u5b66\u7fd2\u3001\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u3053\u3053\u3067\u306f\u3001CAE\u3001RNN\u306e\u9806\u306b\u30e2\u30c7\u30eb\u306e\u5b9f\u88c5\u3001\u63a8\u8ad6\u3001\u5185\u90e8\u8868\u73fe\u89e3\u6790\u305d\u3057\u3066\u307e\u3067\u306e\u4e00\u9023\u306e\u30d7\u30ed\u30bb\u30b9\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002</p> <p></p>"},{"location":"zoo/CAE-RNN/#cae","title":"CAE","text":""},{"location":"zoo/CAE-RNN/#cae_overview","title":"\u6982\u8981","text":"<p>\u30ed\u30dc\u30c3\u30c8\u306e\u904b\u52d5\u60c5\u5831\u3068\u6bd4\u8f03\u3057\u3066\u8996\u899a\u753b\u50cf\u306f\u9ad8\u6b21\u5143\u60c5\u5831\u3067\u3042\u308b\u305f\u3081\u3001\u611f\u899a\u904b\u52d5\u60c5\u5831\u3092\u9069\u5207\u306b\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306b\u306f\u3001\u5404\u30e2\u30fc\u30c0\u30eb\u306e\u6b21\u5143\u3092\u63c3\u3048\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 \u3055\u3089\u306b\u3001\u5bfe\u8c61\u7269\u306e\u4f4d\u7f6e\u3068\u904b\u52d5\u306e\u95a2\u4fc2\u3092\u5b66\u7fd2\u3055\u305b\u308b\u305f\u3081\u306b\u3001\u9ad8\u6b21\u5143\u306a\u8996\u899a\u753b\u50cf\u304b\u3089\u5bfe\u8c61\u7269\u3084\u30ed\u30dc\u30c3\u30c8\u306e\u8eab\u4f53\u306e\u7279\u5fb4\uff08\u4f4d\u7f6e\u3084\u8272\u3001\u5f62\u72b6\u306a\u3069\uff09\u3092\u4f4e\u6b21\u5143\u306e\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u3057\u3066\u62bd\u51fa\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002 \u305d\u3053\u3067\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u306e\u62bd\u51fa\u306bConvolutional Auto-Encoder(CAE)\u3092\u7528\u3044\u308b\u3002 \u4e0b\u56f3\u306fCAE-RNN\u306e\u3046\u3061\u3001CAE\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u306e\u307f\u3092\u30cf\u30a4\u30e9\u30a4\u30c8\u3057\u3066\u304a\u308a\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u8996\u899a\u60c5\u5831\uff08$i_t$\uff09\u304b\u3089\u753b\u50cf\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308bEncoder\u3068\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u304b\u3089\u753b\u50cf\uff08$\\hat i_t$\uff09\u3092\u518d\u69cb\u6210\u3059\u308bDecoder\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3002 \u5165\u51fa\u529b\u5024\u304c\u4e00\u81f4\u3059\u308b\u3088\u3046\u306b\u5404\u5c64\u306e\u91cd\u307f\u3092\u66f4\u65b0\u3059\u308b\u3053\u3068\u3067\u3001\u4e2d\u9593\u5c64\u306e\u3046\u3061\u6700\u3082\u30cb\u30e5\u30fc\u30ed\u30f3\u6570\u304c\u5c11\u306a\u3044\u5c64\uff08\u30dc\u30c8\u30eb\u30cd\u30c3\u30af\u5c64\uff09\u3067\u306f\u3001\u5165\u529b\u60c5\u5831\u306e\u62bd\u8c61\u8868\u73fe\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u3053\u3053\u3067\u306f\u3001\u30e2\u30c7\u30eb\u3001\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5\u3001\u5b66\u7fd2\u3001\u305d\u3057\u3066\u63a8\u8ad6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002</p> <p></p>"},{"location":"zoo/CAE-RNN/#cae_files","title":"\u30d5\u30a1\u30a4\u30eb","text":"<p>CAE\u3067\u7528\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u4e00\u5f0f\u3068\u3001\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3042\u308b\u3002</p> <ul> <li>bin/train.py\uff1a\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3001\u5b66\u7fd2\u3001\u305d\u3057\u3066\u30e2\u30c7\u30eb\u306e\u4fdd\u5b58\u3092\u884c\u3046\u5b66\u7fd2\u30d7\u30ed\u30b0\u30e9\u30e0\u3002</li> <li>bin/test.py\uff1a\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u63a8\u8ad6\u7d50\u679c\u306e\u53ef\u8996\u5316\u3092\u884c\u3046\u8a55\u4fa1\u30d7\u30ed\u30b0\u30e9\u30e0\u3002</li> <li>bin/extract.py\uff1aCAE\u304c\u62bd\u51fa\u3057\u305f\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u3001\u6b63\u898f\u5316\u306e\u305f\u3081\u306e\u4e0a\u4e0b\u9650\u5024\u3092\u8a08\u7b97\u3057\u3001\u4fdd\u5b58\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3002</li> <li>libs/trainer.py\uff1aCAE\u306e\u305f\u3081\u306e\u8aa4\u5dee\u9006\u4f1d\u64ad\u30af\u30e9\u30b9\u3002</li> <li>log\uff1a\u5b66\u7fd2\u7d50\u679c\u3068\u3057\u3066\u91cd\u307f\u3084\u5b66\u7fd2\u66f2\u7dda\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u60c5\u5831\u3092\u4fdd\u5b58\u3002</li> <li>output\uff1a\u63a8\u8ad6\u7d50\u679c\u3092\u4fdd\u5b58\u3002</li> <li>data\uff1aRNN\u306e\u5b66\u7fd2\u30c7\u30fc\u30bf\uff08\u95a2\u7bc0\u89d2\u5ea6\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u3001\u6b63\u898f\u5316\u60c5\u5831\u306a\u3069\uff09\u3092\u4fdd\u5b58\u3002</li> </ul>"},{"location":"zoo/CAE-RNN/#cae_model","title":"CAE\u30e2\u30c7\u30eb","text":"<p>CAE\u306f\u3001\u7573\u307f\u8fbc\u307f\u5c64\u3068\u9006\u7573\u307f\u8fbc\u307f\u5c64\u3001\u305d\u3057\u3066\u5168\u7d50\u5408\u5c64\u304b\u3089\u69cb\u6210\u3055\u308c\u308b\u3002 \u753b\u50cf\u306e\u7279\u5fb4\u91cf\u62bd\u51fa\u306b Convolution layer (CNN) \u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001Linear layer \u3060\u3051\u3067\u69cb\u6210\u3055\u308c\u308bAutoEncoder3\u3068\u6bd4\u8f03\u3057\u3066\u3001\u5c11\u306a\u3044\u30d1\u30e9\u30e1\u30fc\u30bf\u3067\u9ad8\u6b21\u5143\u60c5\u5831\u3092\u6271\u3046\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u66f4\u306bCNN\u306f\u3001\u30d5\u30a3\u30eb\u30bf\u3092\u30b7\u30d5\u30c8\u3057\u306a\u304c\u3089\u7573\u307f\u8fbc\u3080\u3053\u3068\u3067\u3001\u591a\u69d8\u306a\u753b\u50cf\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u308b\u3002 \u4e00\u822c\u7684\u306bCNN\u306e\u5f8c\u306b\u9069\u7528\u3055\u308c\u308b Pooling layer \u306f\u3001\u5165\u529b\u30c7\u30fc\u30bf\u306e\u6b21\u5143\u5727\u7e2e\u3092\u884c\u3046\u305f\u3081\u306b\u3001\u753b\u50cf\u8a8d\u8b58\u5206\u91ce\u306a\u3069\u3067\u591a\u7528\u3055\u308c\u308b\u3002 \u3057\u304b\u3057\u3001\u4f4d\u7f6e\u4e0d\u5909\u6027\u3068\u60c5\u5831\u5727\u7e2e\u304c\u540c\u6642\u306b\u884c\u3048\u308b\u53cd\u9762\u3001\u753b\u50cf\u306e\u7a7a\u9593\u7684\u306a\u69cb\u9020\u306e\u60c5\u5831\u304c\u55aa\u5931\u3059\u308b\u3068\u3044\u3046\u554f\u984c\u304c\u3042\u308b4 \u3002 \u30ed\u30dc\u30c3\u30c8\u52d5\u4f5c\u751f\u6210\u3067\u306f\u3001\u64cd\u4f5c\u5bfe\u8c61\u7269\u3084\u30ed\u30dc\u30c3\u30c8\u30cf\u30f3\u30c9\u306a\u3069\u306e\u7a7a\u9593\u7684\u306a\u4f4d\u7f6e\u60c5\u5831\u306f\u5fc5\u8981\u4e0d\u53ef\u6b20\u3067\u3042\u308b\u305f\u3081\u3001Pooling Layer \u306e\u4ee3\u308f\u308a\u306bCNN\u30d5\u30a3\u30eb\u30bf\u306e\u7573\u307f\u8fbc\u307f\u306e\u9069\u7528\u9593\u9694\uff08stride\uff09\u3092\u7528\u3044\u3066\u6b21\u5143\u5727\u7e2e\u3092\u884c\u3046\u3002</p> <p>\u4ee5\u4e0b\u306fCAE\u30e2\u30c7\u30eb\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u793a\u3057\u3066\u304a\u308a\u3001128x128\u30d4\u30af\u30bb\u30eb\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u304b\u3089 <code>feat_dim</code> \u3067\u6307\u5b9a\u3057\u305f\u6b21\u5143\u306e\u753b\u50cf\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u672c\u30e2\u30c7\u30eb\u306fCAE\u306e\u6982\u8981\u3068\u5b9f\u88c5\u65b9\u6cd5\u3092\u7406\u89e3\u3059\u308b\u305f\u3081\u306b\u3001\u30b7\u30f3\u30d7\u30eb\u306a\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u3067\u3042\u308b\u3002</p> [SOURCE] BasicCAE.py<pre><code>class BasicCAE(nn.Module):\ndef __init__(self, feat_dim=10):\nsuper(BasicCAE, self).__init__()\n# encoder\nself.encoder = nn.Sequential(\nnn.Conv2d(3, 64, 3, 2, 1),\nnn.Tanh(),\nnn.Conv2d(64, 32, 3, 2, 1),\nnn.Tanh(),\nnn.Conv2d(32, 16, 3, 2, 1),\nnn.Tanh(),\nnn.Conv2d(16, 12, 3, 2, 1),\nnn.Tanh(),\nnn.Conv2d(12, 8, 3, 2, 1),\nnn.Tanh(),\nnn.Flatten(),\nnn.Linear(8 * 4 * 4, 50),\nnn.Tanh(),\nnn.Linear(50, feat_dim),\nnn.Tanh(),\n)\n# decoder\nself.decoder = nn.Sequential(\nnn.Linear(feat_dim, 50),\nnn.Tanh(),\nnn.Linear(50, 8 * 4 * 4),\nnn.Tanh(),\nnn.Unflatten(1, (8, 4, 4)),\nnn.ConvTranspose2d(8, 12, 3, 2, padding=1, output_padding=1),\nnn.Tanh(),\nnn.ConvTranspose2d(12, 16, 3, 2, padding=1, output_padding=1),\nnn.Tanh(),\nnn.ConvTranspose2d(16, 32, 3, 2, padding=1, output_padding=1),\nnn.Tanh(),\nnn.ConvTranspose2d(32, 64, 3, 2, padding=1, output_padding=1),\nnn.Tanh(),\nnn.ConvTranspose2d(64, 3, 3, 2, padding=1, output_padding=1),\nnn.Tanh(),\n)\ndef forward(self, x):\nreturn self.decoder(self.encoder(x))\n</code></pre> <p>\u6d3b\u6027\u5316\u95a2\u6570\u306b<code>ReLU</code>\u95a2\u6570\u3084<code>Batch Normalization</code>5 \u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u5404\u5c64\u306e\u8868\u73fe\u529b\u5411\u4e0a\u3084\u52fe\u914d\u6d88\u5931\u3092\u9632\u304e\u3001\u66f4\u306b\u5b66\u7fd2\u3092\u52b9\u7387\u7684\u304b\u3064\u5b89\u5b9a\u306b\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u672c\u30e9\u30a4\u30d6\u30e9\u30ea\u3067\u306f\u3001<code>Batch Normalization</code> \u3092\u7528\u3044\u305fCAE\u30e2\u30c7\u30eb\u306f\u5b9f\u88c5\u6e08\u307f\u3067\u3042\u308a\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30e2\u30c7\u30eb\u3092\u8aad\u307f\u8fbc\u3080\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 BasicCAENE \u3068 CAEBN \u306e\u9055\u3044\u306f\u30e2\u30c7\u30eb\u306e\u69cb\u9020\uff08\u30d1\u30e9\u30e1\u30fc\u30bf\u30b5\u30a4\u30ba\uff09\u3067\u3042\u308a\u3001\u8a73\u7d30\u306f \u30bd\u30fc\u30b9\u30b3\u30fc\u30c9 \u3092\u53c2\u7167\u3055\u308c\u305f\u3044\u3002 \u306a\u304a\u3001\u5b9f\u88c5\u6e08\u307f\u30e2\u30c7\u30eb\u306e\u5165\u529b\u30d5\u30a9\u30fc\u30de\u30c3\u30c8\u306f128x128\u30d4\u30af\u30bb\u30eb\u306e\u30ab\u30e9\u30fc\u753b\u50cf\u3067\u3042\u308a\u3001\u305d\u308c\u4ee5\u5916\u306e\u753b\u50cf\u30b5\u30a4\u30ba\u3092\u5165\u529b\u3059\u308b\u5834\u5408\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u4fee\u6b63\u304c\u5fc5\u8981\u3067\u3042\u308b\u3002</p> <pre><code>from eipl.model import BasicCAENE, CAEBN\n</code></pre>"},{"location":"zoo/CAE-RNN/#cae_bp","title":"\u8aa4\u5dee\u9006\u4f1d\u642c\u6cd5","text":"<p>CAE\u306e\u5b66\u7fd2\u904e\u7a0b\u3067\u306f\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u30ab\u30e1\u30e9\u753b\u50cf\uff08$i_t$\uff09 \u3092\u5165\u529b\u3057\u3001\u518d\u69cb\u6210\u753b\u50cf\uff08$\\hat i_t$\uff09 \u3092\u751f\u6210\u3059\u308b\u3002 \u3053\u3053\u3067\u3001\u5165\u529b\u753b\u50cf\u3068\u518d\u69cb\u6210\u753b\u50cf\u306e\u8aa4\u5dee\u304c\u6700\u5c0f\u306b\u306a\u308b\u3088\u3046\u306b\u8aa4\u5dee\u9006\u4f1d\u642c\u6cd56 \u3092\u7528\u3044\u3066\u30e2\u30c7\u30eb\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u66f4\u65b0\u3059\u308b\u3002 27-33\u884c\u76ee\u3067\u306f\u3001 \u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u5206\u306e\u753b\u50cf <code>xi</code> \u3092\u30e2\u30c7\u30eb\u306b\u5165\u529b\u3057\u3001\u518d\u69cb\u6210\u753b\u50cf <code>yi_hat</code> \u3092\u5f97\u308b\u3002 \u305d\u3057\u3066\u518d\u69cb\u6210\u753b\u50cf\u3068\u771f\u5024 <code>yi</code> \u306e\u5e73\u5747\u4e8c\u4e57\u8aa4\u5dee <code>nn.MSELoss</code> \u3092\u8a08\u7b97\u3057\u3001\u8aa4\u5dee\u5024 <code>loss</code> \u306b\u57fa\u3065\u3044\u3066\u8aa4\u5dee\u4f1d\u756a\u3092\u884c\u3046\u3002 \u3053\u306e\u81ea\u5df1\u56de\u5e30\u7684\u306a\u5b66\u7fd2\u306b\u3088\u308a\u3001\u5f93\u6765\u306e\u30ed\u30dc\u30c6\u30a3\u30af\u30b9\u3067\u5fc5\u8981\u3067\u3042\u3063\u305f\u753b\u50cf\u306e\u305f\u3081\u306e\u8a73\u7d30\u306a\u30e2\u30c7\u30eb\u8a2d\u8a08\u304c\u4e0d\u8981\u3068\u306a\u308b\u3002 \u306a\u304a\u3001\u5b9f\u4e16\u754c\u306e\u591a\u69d8\u306a\u30ce\u30a4\u30ba\u306b\u5bfe\u3057\u30ed\u30d0\u30b9\u30c8\u306a\u753b\u50cf\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u305f\u3081\u306b\u3001\u30c7\u30fc\u30bf\u62e1\u5f35 \u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u8f1d\u5ea6\u3084\u30b3\u30f3\u30c8\u30e9\u30b9\u30c8\u3001\u305d\u3057\u3066\u4f4d\u7f6e\u3092\u30e9\u30f3\u30c0\u30e0\u306b\u5909\u5316\u3055\u305b\u305f\u753b\u50cf\u3092\u30e2\u30c7\u30eb\u306b\u5b66\u7fd2\u3055\u305b\u308b\u3002</p> [SOURCE] trainer.py<pre><code>class Trainer:\ndef __init__(self, model, optimizer, device=\"cpu\"):\nself.device = device\nself.optimizer = optimizer\nself.model = model.to(self.device)\ndef save(self, epoch, loss, savename):\ntorch.save(\n{\n\"epoch\": epoch,\n\"model_state_dict\": self.model.state_dict(),\n\"train_loss\": loss[0],\n\"test_loss\": loss[1],\n},\nsavename,\n)\ndef process_epoch(self, data, training=True):\nif not training:\nself.model.eval()\ntotal_loss = 0.0\nfor n_batch, (xi, yi) in enumerate(data):\nxi = xi.to(self.device)\nyi = yi.to(self.device)\nyi_hat = self.model(xi)\nloss = nn.MSELoss()(yi_hat, yi)\ntotal_loss += loss.item()\nif training:\nself.optimizer.zero_grad(set_to_none=True)\nloss.backward()\nself.optimizer.step()\nreturn total_loss / n_batch\n</code></pre>"},{"location":"zoo/CAE-RNN/#_1","title":"\u5b66\u7fd2","text":"<p><code>Model</code>\u3001<code>Trainer Class</code>\u3001\u305d\u3057\u3066\u3059\u3067\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0 <code>train.py</code> \u3092\u4f7f\u7528\u3057\u3066\u3001CAE\u3092\u5b66\u7fd2\u3059\u308b\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001\u5b9f\u884c\u3057\u305f\u65e5\u6642\u3092\u793a\u3059\u30d5\u30a9\u30eb\u30c0\u540d\uff08\u4f8b\uff1a20230427_1316_29\uff09\u304c <code>log</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306b\u4f5c\u6210\u3055\u308c\u308b\u3002 \u30d5\u30a9\u30eb\u30c0\u306b\u306f\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\uff08pth\uff09\u3068TensorBoard\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u304c\u4fdd\u5b58\u3055\u308c\u308b\u3002 \u3053\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3067\u306f\u3001\u30b3\u30de\u30f3\u30c9\u30e9\u30a4\u30f3\u5f15\u6570\u3092\u4f7f\u7528\u3057\u3066\u3001\u30e2\u30c7\u30eb\u306e\u7a2e\u985e\u3001\u30a8\u30dd\u30c3\u30af\u6570\u3001\u30d0\u30c3\u30c1\u30b5\u30a4\u30ba\u3001\u5b66\u7fd2\u7387\u3001\u6700\u9069\u5316\u624b\u6cd5\u306a\u3069\u3001\u5b66\u7fd2\u306b\u5fc5\u8981\u306a\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6307\u5b9a\u53ef\u80fd\u3067\u3042\u308b\u3002 \u307e\u305f\u3001EarlyStopping\u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u4f7f\u7528\u3057\u3066\u3001\u5b66\u7fd2\u306e\u65e9\u671f\u7d42\u4e86\u30bf\u30a4\u30df\u30f3\u30b0\u3092\u6c7a\u5b9a\u3059\u308b\u3060\u3051\u3067\u306a\u304f\u3001\u30c6\u30b9\u30c8\u8aa4\u5dee\u304c\u6700\u5c0f\u306b\u306a\u3063\u305f\u6642\u70b9\u3067\u91cd\u307f\u3092\u4fdd\u5b58\u3059\u308b\uff08<code>save_ckpt=True</code>\uff09\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8a73\u7d30\u306a\u52d5\u4f5c\u306b\u3064\u3044\u3066\u306f\u3001\u30b3\u30fc\u30c9\u5185\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</p> <pre><code>$ cd eipl/tutorials/cae/\n$ python3 train.py\n[INFO] Set tag = 20230427_1316_29\n================================\nbatch_size : 128\ndevice : 0\nepoch : 100000\nfeat_dim : 10\nlog_dir : log/\nlr : 0.001\nmodel : CAE\noptimizer : adam\nstdev : 0.02\ntag : 20230427_1316_29\nvmax : 1.0\nvmin : 0.0\n================================\n0%|               | 11/100000 [00:40&lt;101:55:18,  3.67s/it, train_loss=0.0491, test_loss=0.0454]\n</code></pre>"},{"location":"zoo/CAE-RNN/#_2","title":"\u63a8\u8ad6","text":"<p>CAE\u304c\u9069\u5207\u306b\u5b66\u7fd2\u3055\u308c\u305f\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u30c6\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0 <code>test.py</code> \u3092\u7528\u3044\u3066\u691c\u8a3c\u3059\u308b\u3002 \u5f15\u6570 <code>filename</code> \u306f\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3001 <code>idx</code> \u306f\u53ef\u8996\u5316\u3057\u305f\u3044\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u3042\u308b\u3002 \u4e0b\u56f3\uff08\u4e0a\u6bb5\uff09\u306f\u3001\u672c\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u7528\u3044\u3066\u3001CAEBN\u30e2\u30c7\u30eb\u306e\u63a8\u8ad6\u7d50\u679c\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u5de6\u56f3\u306f\u5165\u529b\u753b\u50cf\u3001\u53f3\u56f3\u306f\u518d\u69cb\u6210\u753b\u50cf\u3067\u3042\u308b\u3002 \u7279\u306b\u30ed\u30dc\u30c3\u30c8\u52d5\u4f5c\u751f\u6210\u306b\u91cd\u8981\u306a\u30ed\u30dc\u30c3\u30c8\u30cf\u30f3\u30c9\u3068\u300c\u672a\u5b66\u7fd2\u4f4d\u7f6e\u300d\u306b\u3042\u308b\u628a\u6301\u5bfe\u8c61\u7269\u304c\u518d\u69cb\u6210\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u306b\u306f\u7269\u4f53\u306e\u4f4d\u7f6e\u3084\u5f62\u72b6\u306a\u3069\u306e\u60c5\u5831\u304c\u8868\u73fe\u3055\u308c\u3066\u3044\u308b\u3068\u8003\u3048\u3089\u308c\u308b\u3002 \u307e\u305f\u4e0b\u56f3\uff08\u4e0b\u6bb5\uff09\u306f\u5931\u6557\u4f8b\u3067\u3042\u308a\u3001\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u304c\u30b7\u30f3\u30d7\u30eb\u306aBasic CAE\u30e2\u30c7\u30eb\u3067\u306f\u3001\u5bfe\u8c61\u7269\u304c\u9069\u5207\u306b\u4e88\u6e2c\u3067\u304d\u3066\u3044\u306a\u3044\u3053\u3068\u304c\u308f\u304b\u308b\u3002 \u3053\u306e\u5834\u5408\u3001\u6700\u9069\u5316\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u624b\u6cd5\u3084\u5b66\u7fd2\u7387\u3001\u8aa4\u5dee\u95a2\u6570\u3001\u66f4\u306b\u30e2\u30c7\u30eb\u306e\u69cb\u9020\u3092\u8abf\u6574\u3059\u308b\u5fc5\u8981\u304c\u3042\u308b\u3002</p> <pre><code>$ cd eipl/tutorials/cae/\n$ python3 test.py --filename ./log/20230424_1107_01/CAEBN.pth --idx 4\n$ ls output/\nCAEBN_20230424_1107_01_4.gif\n</code></pre> <p></p> <p></p>"},{"location":"zoo/CAE-RNN/#_3","title":"\u753b\u50cf\u7279\u5fb4\u91cf\u62bd\u51fa","text":"<p>RNN\u3067\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u306e\u6642\u7cfb\u5217\u5b66\u7fd2\u3092\u884c\u3046\u305f\u3081\u306e\u524d\u6e96\u5099\u3068\u3057\u3066\u3001CAE\u306e\u753b\u50cf\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3059\u308b\u3002 \u4ee5\u4e0b\u306e\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068\u3001 <code>data</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306b\u5b66\u7fd2\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u304cnpy\u5f62\u5f0f\u3067\u4fdd\u5b58\u3055\u308c\u308b\u3002 \u3053\u306e\u6642\u3001\u62bd\u51fa\u3055\u308c\u305f\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u306e\u30c7\u30fc\u30bf\u6570\u3068\u6642\u7cfb\u5217\u9577\u304c\u4e00\u81f4\u3057\u3066\u3044\u308b\u304b\u78ba\u8a8d\u3059\u308b\u3053\u3068\u3002 \u306a\u304a\u3001\u95a2\u7bc0\u89d2\u5ea6\u3092\u6539\u3081\u3066\u4fdd\u5b58\u3059\u308b\u7406\u7531\u3068\u3057\u3066\u3001RNN\u306e\u5b66\u7fd2\u3092\u884c\u3046\u969b\u306b\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u8aad\u307f\u8fbc\u307f\u3092\u5bb9\u6613\u306b\u3059\u308b\u305f\u3081\u3067\u3042\u308b\u3002</p> <pre><code>$ cd eipl/tutorials/cae/\n$ python3 extract.py ./log/20230424_1107_01/CAEBN.pth\n[INFO] train data\n==================================================\nShape of joints angle: torch.Size([12, 187, 8])\nShape of image feature: (12, 187, 10)\n==================================================\n[INFO] test data\n==================================================\nShape of joints angle: torch.Size([5, 187, 8])\nShape of image feature: (5, 187, 10)\n==================================================\n$ ls ./data/*\ndata/test:\nfeatures.npy  joints.npy\n\ndata/train:\nfeatures.npy  joints.npy\n</code></pre> <p>\u4ee5\u4e0b\u306f <code>extract.py</code> \u306e\u30bd\u30fc\u30b9\u30b3\u30fc\u30c9\u306e\u4e00\u90e8\u3067\u3042\u308a\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u306e\u62bd\u51fa\u3068\u4fdd\u5b58\u51e6\u7406\u3092\u884c\u3063\u3066\u3044\u308b\u3002 4\u884c\u76ee\u3067\u306fCAE\u306eEncoder\u51e6\u7406\u304c\u884c\u308f\u308c\u3001\u62bd\u51fa\u3055\u308c\u305f\u4f4e\u6b21\u5143\u306a\u753b\u50cf\u7279\u5fb4\u91cf\u304c\u623b\u308a\u5024\u3068\u3057\u3066\u8fd4\u3055\u308c\u308b\u3002 CAE\u3067\u62bd\u51fa\u3055\u308c\u305f\u753b\u50cf\u7279\u5fb4\u91cf\u306f\u3001\u30e6\u30fc\u30b6\u304c\u6307\u5b9a\u3057\u305f\u7bc4\u56f2\u5185\u306b\u6b63\u898f\u5316\u3055\u308c\u305f\u5f8c\u306b\u3001RNN\u306e\u5b66\u7fd2\u306b\u5229\u7528\u3055\u308c\u308b\u3002 \u30e2\u30c7\u30eb\u306e\u6d3b\u6027\u5316\u95a2\u6570\u306b <code>tanh</code> \u3092\u7528\u3044\u305f\u5834\u5408\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u306e\u4e0a\u4e0b\u9650\uff08 <code>feat_bounds</code> \uff09\u306f\u5b9a\u6570\uff08-1.0\uff5e1.0\uff09\u3067\u3042\u308b\u3002 \u3057\u304b\u3057CAEBN\u306f\u3001\u6d3b\u6027\u5316\u95a2\u6570\u306b <code>ReLU</code> \u3092\u7528\u3044\u3066\u3044\u308b\u305f\u3081\u753b\u50cf\u7279\u5fb4\u91cf\u306e\u4e0a\u4e0b\u9650\u5024\u306f\u672a\u5b9a\u3067\u3042\u308b\u3002 \u305d\u3053\u306725\u884c\u76ee\u3067\u306f\u3001\u62bd\u51fa\u3057\u305f\u5b66\u7fd2\u30fb\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u753b\u50cf\u7279\u5fb4\u91cf\u304b\u3089\u6700\u5927\u5024\u3068\u6700\u5c0f\u5024\u3092\u8a08\u7b97\u3059\u308b\u3053\u3068\u3067\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u306e\u4e0a\u4e0b\u9650\u3092\u6c7a\u5b9a\u3059\u308b\u3002</p> [SOURCE] extract.py<pre><code>    # extract image feature\nfeature_list = []\nfor i in range(N):\n_features = model.encoder(images[i])\nfeature_list.append( tensor2numpy(_features) )\nfeatures = np.array(feature_list)\nnp.save('./data/joint_bounds.npy', joint_bounds )\nnp.save('./data/{}/features.npy'.format(data_type), features )\nnp.save('./data/{}/joints.npy'.format(data_type), joints )\nprint_info('{} data'.format(data_type))\nprint(\"==================================================\")\nprint('Shape of joints angle:',  joints.shape)\nprint('Shape of image feature:', features.shape)\nprint(\"==================================================\")\nprint()\n# save features minmax bounds\nfeat_list = []\nfor data_type in ['train', 'test']:\nfeat_list.append( np.load('./data/{}/features.npy'.format(data_type) ) )\nfeat = np.vstack(feat_list)\nfeat_minmax = np.array( [feat.min(), feat.max()] )\nnp.save('./data/feat_bounds.npy', feat_minmax )\n</code></pre>"},{"location":"zoo/CAE-RNN/#rnn","title":"RNN","text":""},{"location":"zoo/CAE-RNN/#rnn_overview","title":"\u6982\u8981","text":"<p>\u30ed\u30dc\u30c3\u30c8\u306e\u611f\u899a\u904b\u52d5\u60c5\u5831\u3092\u7d71\u5408\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306b\u3001\u518d\u5e30\u578b\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\uff08Recurrent Neural Network\uff1a\u4ee5\u4e0b\u3001RNN\uff09\u3092\u7528\u3044\u308b\u3002 \u4e0b\u56f3\u306fCAE-RNN\u306e\u3046\u3061\u3001RNN\u306e\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u69cb\u9020\u306e\u307f\u3092\u30cf\u30a4\u30e9\u30a4\u30c8\u3057\u3066\u304a\u308a\u3001\u6642\u523b $t$ \u306e\u753b\u50cf\u7279\u5fb4\u91cf\uff08$f_t$\uff09 \u3068\u95a2\u7bc0\u89d2\u5ea6\uff08$a_t$\uff09\u3092\u5165\u529b\u3057\u3001\u6b21\u6642\u523b $t+1$ \u306e\u305d\u308c\u3089\u3092\u4e88\u6e2c\u3059\u308b\u3002 \u3053\u3053\u3067\u306f\u3001\u30e2\u30c7\u30eb\u3001\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5\u3001\u5b66\u7fd2\u3001\u305d\u3057\u3066\u63a8\u8ad6\u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u5b9f\u88c5\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002</p> <p></p>"},{"location":"zoo/CAE-RNN/#rnn_files","title":"\u30d5\u30a1\u30a4\u30eb","text":"<p>RNN\u3067\u7528\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u4e00\u5f0f\u3068\u3001\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3042\u308b\u3002</p> <ul> <li>bin/train.py\uff1a\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3001\u5b66\u7fd2\u3001\u305d\u3057\u3066\u30e2\u30c7\u30eb\u306e\u4fdd\u5b58\u3092\u884c\u3046\u5b66\u7fd2\u30d7\u30ed\u30b0\u30e9\u30e0\u3002</li> <li>bin/test.py\uff1a\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u63a8\u8ad6\u7d50\u679c\u3092\u53ef\u8996\u5316\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3002</li> <li>bin/test_pca_rnn.py\uff1a\u4e3b\u6210\u5206\u5206\u6790\u3092\u7528\u3044\u3066RNN\u306e\u5185\u90e8\u72b6\u614b\u3092\u53ef\u8996\u5316\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3002</li> <li>bin/rt_predict.py\uff1a\u5b66\u7fd2\u6e08\u307f\u306eCAE\u3068RNN\u3092\u7d71\u5408\u3057\u3001\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u306b\u57fa\u3065\u3044\u3066\u6bce\u6642\u523b\u306e\u52d5\u4f5c\u6307\u4ee4\u5024\u3092\u4e88\u6e2c\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3002</li> <li>libs/fullBPTT.py\uff1a\u6642\u7cfb\u5217\u5b66\u7fd2\u306e\u305f\u3081\u306e\u8aa4\u5dee\u9006\u4f1d\u64ad\u30af\u30e9\u30b9\u3002</li> <li>libs/dataloader.py\uff1aCAE\u3067\u62bd\u51fa\u3057\u305f\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u306e\u305f\u3081\u306eDataLoader\u3002</li> <li>log\uff1a\u5b66\u7fd2\u7d50\u679c\u3068\u3057\u3066\u91cd\u307f\u3084\u5b66\u7fd2\u66f2\u7dda\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u60c5\u5831\u3092\u4fdd\u5b58\u3002</li> <li>output\uff1a\u63a8\u8ad6\u7d50\u679c\u3092\u4fdd\u5b58\u3002</li> </ul>"},{"location":"zoo/CAE-RNN/#rnn_model","title":"RNN\u30e2\u30c7\u30eb","text":"<p>RNN\u306f\u3001\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u5b66\u7fd2\u3084\u63a8\u8ad6\u304c\u53ef\u80fd\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3042\u308a\u3001\u3042\u308b\u6642\u523b <code>t</code> \u3067\u306e\u5165\u529b\u5024 $x_t$ \u3068\u524d\u6642\u523b\u3067\u306e\u72b6\u614b $s_{t-1}$ \u306b\u57fa\u3065\u3044\u3066\u6b21\u306e\u72b6\u614b $s_t$ \u306b\u9077\u79fb\u3057\u3001\u4e88\u6e2c\u5024 $y_t$ \u3092\u63a8\u8ad6\u3059\u308b\u3002 \u5165\u529b\u5024\u306b\u57fa\u3065\u3044\u3066\u72b6\u614b\u3092\u9010\u6b21\u9077\u79fb\u3055\u305b\u308b\u3053\u3068\u3067\u3001\u6642\u7cfb\u5217\u4e88\u6e2c\u3092\u884c\u3046\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u305f\u3060\u3057\u3001Vanilla RNN\u3067\u306f\u9006\u8aa4\u5dee\u4f1d\u642c\u306e\u969b\u306b\u52fe\u914d\u6d88\u5931\u304c\u767a\u751f\u3057\u3084\u3059\u3044\u305f\u3081\u3001Long Short-Term Memory (LSTM)\u3084Multiple Timescales RNN (MTRNN)\u3068\u3044\u3063\u305f\u6d3e\u751f\u578b\u304c\u63d0\u6848\u3055\u308c\u3066\u3044\u308b\u3002</p> <p>\u3053\u3053\u3067\u306f\u3001LSTM\u3092\u7528\u3044\u3066\u30ed\u30dc\u30c3\u30c8\u306e\u611f\u899a\u904b\u52d5\u60c5\u5831\u3092\u7d71\u5408\u5b66\u7fd2\u3059\u308b\u65b9\u6cd5\u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002 LSTM\u306f\u30013\u3064\u306e\u30b2\u30fc\u30c8\uff08input gate\u3001forget gate\u3001output gate\uff09\u3092\u6301\u3061\u3001\u305d\u308c\u305e\u308c\u91cd\u307f\u3068\u30d0\u30a4\u30a2\u30b9\u304c\u8a2d\u5b9a\u3055\u308c\u308b\u3002 $h_{t-1}$ \u306f\u77ed\u671f\u8a18\u61b6\u3068\u3057\u3066\u6642\u7cfb\u5217\u306e\u7d30\u304b\u3044\u5909\u5316\u3092\u3001$c_{t-1}$ \u306f\u9577\u671f\u8a18\u61b6\u3068\u3057\u3066\u6642\u7cfb\u5217\u5168\u4f53\u306e\u7279\u5fb4\u3092\u5b66\u7fd2\u3057\u3001\u5404\u30b2\u30fc\u30c8\u3092\u4ecb\u3057\u3066\u904e\u53bb\u306e\u60c5\u5831\u306e\u4fdd\u6301\u3084\u5fd8\u5374\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u4ee5\u4e0b\u306f\u5b9f\u88c5\u4f8b\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u3042\u3089\u304b\u3058\u3081CAE\u3067\u62bd\u51fa\u3057\u305f\u4f4e\u6b21\u5143\u306e\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u3092\u7d50\u5408\u3057\u305f\u5165\u529b\u5024 $x$ \u3092LSTM\u306b\u5165\u529b\u3059\u308b\u3002 \u305d\u3057\u3066LSTM\u306f\u5185\u90e8\u72b6\u614b\u306b\u57fa\u3065\u3044\u3066\u3001\u6b21\u6642\u523b\u306e\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u306e\u4e88\u6e2c\u5024 $\\hat y$ \u51fa\u529b\u3059\u308b\u3002</p> BasicRNN.py<pre><code>class BasicLSTM(nn.Module):\ndef __init__(self, in_dim, rec_dim, out_dim, activation=\"tanh\"):\nsuper(BasicLSTM, self).__init__()\nif isinstance(activation, str):\nactivation = get_activation_fn(activation)\nself.rnn = nn.LSTMCell(in_dim, rec_dim)\nself.rnn_out = nn.Sequential(nn.Linear(rec_dim, out_dim), activation)\ndef forward(self, x, state=None):\nrnn_hid = self.rnn(x, state)\ny_hat = self.rnn_out(rnn_hid[0])\nreturn y_hat, rnn_hid\n</code></pre>"},{"location":"zoo/CAE-RNN/#rnn_bptt","title":"\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5","text":"<p>Backpropagation Through Time\uff08BPTT\uff09\u3068\u306f\u3001RNN\u306b\u304a\u3044\u3066\u4f7f\u7528\u3055\u308c\u308b\u8aa4\u5dee\u9006\u4f1d\u64ad\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u306e\u4e00\u7a2e\u3067\u3042\u308b6\u3002 BPTT\u306e\u8a73\u7d30\u306fSARNN\u3067\u8a18\u8f09\u6e08\u307f\u3067\u3042\u308b\u305f\u3081\u3001\u305d\u3061\u3089\u3092\u53c2\u7167\u3055\u308c\u305f\u3044\u3002</p> [SOURCE] fullBPTT.py<pre><code>class fullBPTTtrainer:\ndef __init__(self, model, optimizer, device=\"cpu\"):\nself.device = device\nself.optimizer = optimizer\nself.model = model.to(self.device)\ndef save(self, epoch, loss, savename):\ntorch.save(\n{\n\"epoch\": epoch,\n\"model_state_dict\": self.model.state_dict(),\n\"train_loss\": loss[0],\n\"test_loss\": loss[1],\n},\nsavename,\n)\ndef process_epoch(self, data, training=True):\nif not training:\nself.model.eval()\ntotal_loss = 0.0\nfor n_batch, (x, y) in enumerate(data):\nx = x.to(self.device)\ny = y.to(self.device)\nstate = None\ny_list = []\nT = x.shape[1]\nfor t in range(T - 1):\ny_hat, state = self.model(x[:, t], state)\ny_list.append(y_hat)\ny_hat = torch.permute(torch.stack(y_list), (1, 0, 2))\nloss = nn.MSELoss()(y_hat, y[:, 1:])\ntotal_loss += loss.item()\nif training:\nself.optimizer.zero_grad(set_to_none=True)\nloss.backward()\nself.optimizer.step()\nreturn total_loss / (n_batch + 1)\n</code></pre>"},{"location":"zoo/CAE-RNN/#rnn_dataloader","title":"\u30c7\u30fc\u30bf\u30ed\u30fc\u30c0","text":"<p>CAE\u3067\u62bd\u51fa\u3057\u305f\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u3092RNN\u3067\u5b66\u7fd2\u3059\u308b\u305f\u3081\u306e DataLoader \u306b\u3064\u3044\u3066\u8ff0\u3079\u308b\u3002 15-16\u884c\u76ee\u306b\u793a\u3059\u901a\u308a\u3001\u5165\u529b\u60c5\u5831\u306b\u30ac\u30a6\u30b7\u30a2\u30f3\u30ce\u30a4\u30ba\u3092\u52a0\u3048\u308b\u3002 \u4e88\u6e2c\u5024\u306f\u30ce\u30a4\u30ba\u52a0\u7b97\u524d\u306e\u5143\u30c7\u30fc\u30bf\u306b\u8fd1\u304f\u306a\u308b\u3088\u3046\u306b\u5b66\u7fd2\u3092\u884c\u3046\u3053\u3068\u3067\u3001\u5b9f\u4e16\u754c\u3067\u52d5\u4f5c\u4e88\u6e2c\u3059\u308b\u969b\u306b\u5165\u529b\u60c5\u5831\u306b\u30ce\u30a4\u30ba\u304c\u4ed8\u4e0e\u3055\u308c\u305f\u3068\u3057\u3066\u3082\u3001\u9069\u5207\u306a\u52d5\u4f5c\u6307\u4ee4\u3092\u4e88\u6e2c\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> [SOURCE] dataloader.py<pre><code>class TimeSeriesDataSet(Dataset):\ndef __init__(self, feats, joints, minmax=[0.1, 0.9], stdev=0.02):\nself.stdev = stdev\nself.feats = torch.from_numpy(feats).float()\nself.joints = torch.from_numpy(joints).float()\ndef __len__(self):\nreturn len(self.feats)\ndef __getitem__(self, idx):\ny_feat = self.feats[idx]\ny_joint = self.joints[idx]\ny_data = torch.concat((y_feat, y_joint), axis=-1)\nx_feat = self.feats[idx] + torch.normal(mean=0, std=self.stdev, size=y_feat.shape)\nx_joint = self.joints[idx] + torch.normal(mean=0, std=self.stdev, size=y_joint.shape)\nx_data = torch.concat((x_feat, x_joint), axis=-1)\nreturn [x_data, y_data]\n</code></pre>"},{"location":"zoo/CAE-RNN/#rnn_train","title":"\u5b66\u7fd2","text":"<p><code>libs/fullBPTT.py</code>\u3001 <code>libs/dataloader.py</code>\u3001\u305d\u3057\u3066\u3059\u3067\u306b\u5b9f\u88c5\u3055\u308c\u3066\u3044\u308b\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0 <code>train.py</code> \u3092\u4f7f\u7528\u3057\u3066\u3001RNN\u3092\u5b66\u7fd2\u3059\u308b\u3002 \u30e2\u30c7\u30eb\u306f\u5b9f\u88c5\u6e08\u307f\u306eBasicLSTM\u3082\u3057\u304f\u306fBasicMTRNN\u3092\u7528\u3044\u3001\u5f15\u6570\u3067\u9078\u629e\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 CAE\u540c\u69d8\u3001\u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068 <code>log</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306b\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\uff08pth\uff09\u3068Tensorboard\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u304c\u4fdd\u5b58\u3055\u308c\u308b\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8a73\u7d30\u306a\u52d5\u4f5c\u306b\u3064\u3044\u3066\u306f\u3001\u30b3\u30fc\u30c9\u5185\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</p> <pre><code>$ cd eipl/tutorials/rnn/\n$ python3 ./bin/train.py --device -1\n[INFO] Set tag = 20230510_0134_03\n================================\nbatch_size : 5\ndevice : -1\nepoch : 100000\nlog_dir : log/\nlr : 0.001\nmodel : LSTM\noptimizer : adam\nrec_dim : 50\nstdev : 0.02\ntag : 20230510_0134_03\nvmax : 1.0\nvmin : 0.0\n================================\n0%|               | 99/100000 [00:25&lt;7:05:03,  3.92it/s, train_loss=0.00379, test_loss=0.00244\n</code></pre>"},{"location":"zoo/CAE-RNN/#rnn_inference","title":"\u63a8\u8ad6","text":"<p>RNN\u304c\u9069\u5207\u306b\u5b66\u7fd2\u3055\u308c\u305f\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u30c6\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0 <code>test.py</code> \u3092\u7528\u3044\u3066\u691c\u8a3c\u3059\u308b\u3002 \u5f15\u6570 <code>filename</code> \u306f\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3001 <code>idx</code> \u306f\u53ef\u8996\u5316\u3057\u305f\u3044\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3067\u3042\u308b\u3002 \u30e2\u30c7\u30eb\u306e\u6c4e\u5316\u6027\u80fd\u3092\u8a55\u4fa1\u3059\u308b\u305f\u3081\u306b\u3001\u672a\u5b66\u7fd2\u4f4d\u7f6e\u3067\u53ce\u96c6\u3057\u305f\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\u3092\u5165\u529b\u3057\u3001\u771f\u5024\u3068\u4e88\u6e2c\u5024\u306e\u6bd4\u8f03\u3092\u884c\u3046\u3002 \u4e0b\u56f3\u306fRNN\u306e\u4e88\u6e2c\u7d50\u679c\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u5de6\u56f3\u306f\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u3001\u53f3\u56f3\u306f\u753b\u50cf\u7279\u5fb4\u91cf\u3067\u3042\u308b\u3002 \u56f3\u4e2d\u306e\u9ed2\u70b9\u7dda\u306f\u771f\u5024\u3001\u8272\u7dda\u306f\u4e88\u6e2c\u5024\u3092\u8868\u3057\u3066\u304a\u308a\u3001\u307b\u307c\u4e00\u81f4\u3057\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u9069\u5207\u306b\u52d5\u4f5c\u5b66\u7fd2\u304c\u3067\u304d\u305f\u3068\u3044\u3048\u308b\u3002</p> <pre><code>$ cd eipl/tutorials/rnn/\n$ python3 ./bin/test.py --filename ./log/20230510_0134_03/LSTM.pth --idx 4\n$ ls output/\nLSTM_20230510_0134_03_4.gif\n</code></pre> <p></p>"},{"location":"zoo/CAE-RNN/#rnn_pca","title":"\u4e3b\u6210\u5206\u5206\u6790","text":"<p>\u4e3b\u6210\u5206\u5206\u6790\u3092\u6982\u8981\u3068\u5177\u4f53\u7684\u306a\u5b9f\u88c5\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u3055\u308c\u305f\u3044\u3002</p> <pre><code>$ cd eipl/tutorials/rnn/\n$ python3 ./bin/test_pca_rnn.py --filename log/20230510_0134_03/LSTM.pth\n$ ls output/\nPCA_LSTM_20230510_0134_03.gif\n</code></pre> <p>\u4e0b\u56f3\u306f\u4e3b\u6210\u5206\u5206\u6790\u3092\u7528\u3044\u3066RNN\u306e\u5185\u90e8\u72b6\u614b\u3092\u53ef\u8996\u5316\u3057\u305f\u7d50\u679c\u3067\u3042\u308b\u3002 \u5404\u70b9\u7dda\u306fRNN\u306e\u5185\u90e8\u72b6\u614b\u306e\u6642\u7cfb\u5217\u5909\u5316\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u9ed2\u8272\u4e38\u3092\u59cb\u70b9\u306b\u9010\u6b21\u5185\u90e8\u72b6\u614b\u304c\u9077\u79fb\u3059\u308b\u3002 \u4ee5\u964d\u3001\u5185\u90e8\u72b6\u614b\u306e\u9077\u79fb\u8ecc\u9053\u3092\u30a2\u30c8\u30e9\u30af\u30bf\u3068\u547c\u3076\u3002 \u5404\u30a2\u30c8\u30e9\u30af\u30bf\u306e\u8272\u306f\u7269\u4f53\u4f4d\u7f6e\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u9752\u3001\u30aa\u30ec\u30f3\u30b8\u3001\u7dd1\u306f\u6559\u793a\u4f4d\u7f6eA\u3001C\u3001E\u306b\u3001\u8d64\u3001\u7d2b\u306f\u672a\u5b66\u7fd2\u4f4d\u7f6eB\u3001D\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002 \u7269\u4f53\u4f4d\u7f6e\u306b\u5fdc\u3058\u3066\u30a2\u30c8\u30e9\u30af\u30bf\u304c\u81ea\u5df1\u7d44\u7e54\u5316\uff08\u6574\u5217\uff09\u3057\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u7269\u4f53\u4f4d\u7f6e\u306b\u5fdc\u3058\u305f\u52d5\u4f5c\u304c\u5b66\u7fd2\uff08\u8a18\u61b6\uff09\u3055\u308c\u3066\u3044\u308b\u3068\u8a00\u3048\u308b\u3002 \u7279\u306b\u672a\u5b66\u7fd2\u4f4d\u7f6e\u306e\u30a2\u30c8\u30e9\u30af\u30bf\u306f\u3001\u6559\u793a\u4f4d\u7f6e\u306e\u9593\u306b\u751f\u6210\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u7269\u4f53\u4f4d\u7f6e\u304c\u7570\u306a\u308b\u628a\u6301\u52d5\u4f5c\u3092\u8907\u6570\u56de\u6559\u793a\u3057\u5b66\u7fd2\u3055\u305b\u308b\u3060\u3051\u3067\u3001\u672a\u5b66\u7fd2\u306e\u5185\u633f\u52d5\u4f5c\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p></p> <ol> <li> <p>Hiroshi Ito, Kenjiro Yamamoto, Hiroki Mori, and Tetsuya Ogata. Efficient multitask learning with an embodied predictive model for door opening and entry with whole-body control. Science Robotics, 7(65):eaax8177, 2022.\u00a0\u21a9</p> </li> <li> <p>Pin-Chu Yang, Kazuma Sasaki, Kanata Suzuki, Kei Kase, Shigeki Sugano, and Tetsuya Ogata. Repeatable folding task by humanoid robot worker using deep learning. IEEE Robotics and Automation Letters, 2(2):397\u2013403, 2016.\u00a0\u21a9</p> </li> <li> <p>Geoffrey E Hinton and Ruslan R Salakhutdinov. Reducing the dimensionality of data with neural networks. science, 313(5786):504\u2013507, 2006.\u00a0\u21a9</p> </li> <li> <p>Sara Sabour, Nicholas Frosst, and Geoffrey E Hinton. Dynamic routing between capsules. Advances in neural information processing systems, 2017.\u00a0\u21a9</p> </li> <li> <p>Sergey Ioffe and Christian Szegedy. Batch normalization: accelerating deep network training by reducing internal covariate shift. In International conference on machine learning, 448\u2013456. pmlr, 2015.\u00a0\u21a9</p> </li> <li> <p>David E Rumelhart, Geoffrey E Hinton, and Ronald J Williams. Learning representations by back-propagating errors. nature, 323(6088):533\u2013536, 1986.\u00a0\u21a9\u21a9</p> </li> </ol>"},{"location":"zoo/CNNRNN/","title":"\u6982\u8981","text":"<p>CAE-RNN\u306f\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u62bd\u51fa\u90e8\uff08CAE\uff09\u3068\u6642\u7cfb\u5217\u5b66\u7fd2\u90e8\uff08RNN\uff09\u3092\u72ec\u7acb\u3057\u3066\u5b66\u7fd2\u3055\u305b\u308b\u305f\u3081\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u8abf\u6574\u3084\u30e2\u30c7\u30eb\u5b66\u7fd2\u6642\u9593\u306a\u3069\u304c\u8ab2\u984c\u3067\u3042\u3063\u305f\u3002 \u3055\u3089\u306b\u3001CAE\u306f\u753b\u50cf\u60c5\u5831\u306e\u6b21\u5143\u5727\u7e2e\u306b\u7279\u5316\u3057\u305f\u753b\u50cf\u7279\u5fb4\u91cf\u3092\u62bd\u51fa\u3057\u3066\u3044\u308b\u305f\u3081\u3001\u5fc5\u305a\u3057\u3082\u30ed\u30dc\u30c3\u30c8\u306e\u52d5\u4f5c\u751f\u6210\u306b\u9069\u5207\u306a\u753b\u50cf\u7279\u5fb4\u91cf\u3067\u3042\u308b\u3068\u306f\u8a00\u3048\u306a\u3044\u3002 \u305d\u3053\u3067CNNRNN\u306f\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u62bd\u51fa\u90e8\uff08CAE\uff09\u3068\u6642\u7cfb\u5217\u5b66\u7fd2\u90e8\uff08RNN\uff09\u3092\u540c\u6642\u306b\u5b66\u7fd2\uff08End-to-End\u5b66\u7fd2\uff09\u3059\u308b\u3053\u3068\u3067\u3001\u52d5\u4f5c\u751f\u6210\u306b\u91cd\u8981\u306a\u753b\u50cf\u7279\u5fb4\u91cf\u3092\u81ea\u52d5\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306a\u52d5\u4f5c\u751f\u6210\u30e2\u30c7\u30eb\u3067\u3042\u308b\u3002 \u3053\u308c\u306b\u3088\u308a\u30ed\u30dc\u30c3\u30c8\u306f\u4f5c\u696d\u306b\u91cd\u8981\u306a\u5bfe\u8c61\u7269\u306b\u306e\u307f\u7740\u76ee\u3057\u3066\u52d5\u4f5c\u3092\u751f\u6210\u3059\u308b\u305f\u3081\u3001CAE-RNN\u3068\u6bd4\u8f03\u3057\u3066\u80cc\u666f\u5909\u5316\u306b\u5bfe\u3057\u30ed\u30d0\u30b9\u30c8\u306a\u52d5\u4f5c\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b1\u3002</p> <p></p>"},{"location":"zoo/CNNRNN/#files","title":"\u30d5\u30a1\u30a4\u30eb","text":"<p>CNNRNN\u3067\u7528\u3044\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u4e00\u5f0f\u3068\u3001\u30d5\u30a9\u30eb\u30c0\u69cb\u6210\u306f\u4ee5\u4e0b\u306e\u3068\u304a\u308a\u3067\u3042\u308b\u3002</p> <ul> <li>bin/train.py\uff1a\u30c7\u30fc\u30bf\u306e\u8aad\u307f\u8fbc\u307f\u3001\u5b66\u7fd2\u3001\u305d\u3057\u3066\u30e2\u30c7\u30eb\u306e\u4fdd\u5b58\u3092\u884c\u3046\u5b66\u7fd2\u30d7\u30ed\u30b0\u30e9\u30e0\u3002</li> <li>bin/test.py\uff1a\u30c6\u30b9\u30c8\u30c7\u30fc\u30bf\uff08\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\uff09\u306b\u57fa\u3065\u3044\u3066\u6bce\u6642\u523b\u306e\u52d5\u4f5c\u6307\u4ee4\u5024\u3092\u4e88\u6e2c\u3057\u3001\u63a8\u8ad6\u7d50\u679c\u3092\u53ef\u8996\u5316\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3002</li> <li>bin/test_pca_cnnrnn.py\uff1a\u4e3b\u6210\u5206\u5206\u6790\u3092\u7528\u3044\u3066RNN\u306e\u5185\u90e8\u72b6\u614b\u3092\u53ef\u8996\u5316\u3059\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3002</li> <li>libs/fullBPTT.py\uff1a\u6642\u7cfb\u5217\u5b66\u7fd2\u306e\u305f\u3081\u306e\u8aa4\u5dee\u9006\u4f1d\u64ad\u30af\u30e9\u30b9\u3002</li> <li>log\uff1a\u5b66\u7fd2\u7d50\u679c\u3068\u3057\u3066\u91cd\u307f\u3084\u5b66\u7fd2\u66f2\u7dda\u3001\u30d1\u30e9\u30e1\u30fc\u30bf\u306e\u60c5\u5831\u3092\u4fdd\u5b58\u3002</li> <li>output\uff1a\u63a8\u8ad6\u7d50\u679c\u3092\u4fdd\u5b58\u3002</li> </ul>"},{"location":"zoo/CNNRNN/#model","title":"CNNRNN\u30e2\u30c7\u30eb","text":"<p>CNNRNN\u306f\u3001\u30de\u30eb\u30c1\u30e2\u30fc\u30c0\u30eb\u306a\u6642\u7cfb\u5217\u30c7\u30fc\u30bf\u306e\u5b66\u7fd2\u3068\u63a8\u8ad6\u304c\u53ef\u80fd\u306a\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3067\u3042\u308a\u3001\u6642\u523b$t$\u306b\u304a\u3051\u308b\u753b\u50cf<code>xi</code>\u3001\u95a2\u7bc0\u89d2\u5ea6<code>xv</code>\u305d\u3057\u3066\u524d\u6642\u523b\u3067\u306e\u72b6\u614b<code>state</code>\u306b\u57fa\u3065\u3044\u3066\u3001\u6b21\u6642\u523b$t+1$\u306e\u753b\u50cf<code>y_image</code>\u3068\u95a2\u7bc0\u89d2\u5ea6<code>y_joint</code>\u3092\u4e88\u6e2c\u3059\u308b\u3002</p> [SOURCE] CNNRNN.py<pre><code>class CNNRNN(nn.Module):\ndef __init__(self, rec_dim=50, joint_dim=8, feat_dim=10):\nsuper(CNNRNN, self).__init__()\n# Encoder\nself.encoder_image = nn.Sequential(\nnn.Conv2d(3, 64, 3, 2, 1),\nnn.Tanh(),\nnn.Conv2d(64, 32, 3, 2, 1),\nnn.Tanh(),\nnn.Conv2d(32, 16, 3, 2, 1),\nnn.Tanh(),\nnn.Conv2d(16, 12, 3, 2, 1),\nnn.Tanh(),\nnn.Conv2d(12, 8, 3, 2, 1),\nnn.Tanh(),\nnn.Flatten(),\nnn.Linear(8 * 4 * 4, 50),\nnn.Tanh(),\nnn.Linear(50, feat_dim),\nnn.Tanh(),\n)\n# Recurrent\nrec_in = feat_dim + joint_dim\nself.rec = nn.LSTMCell(rec_in, rec_dim)\n# Decoder for joint angle\nself.decoder_joint = nn.Sequential(nn.Linear(rec_dim, joint_dim), nn.Tanh())\n# Decoder for image\nself.decoder_image = nn.Sequential(\nnn.Linear(rec_dim, 8 * 4 * 4),\nnn.Tanh(),\nnn.Unflatten(1, (8, 4, 4)),\nnn.ConvTranspose2d(8, 12, 3, 2, padding=1, output_padding=1),\nnn.Tanh(),\nnn.ConvTranspose2d(12, 16, 3, 2, padding=1, output_padding=1),\nnn.Tanh(),\nnn.ConvTranspose2d(16, 32, 3, 2, padding=1, output_padding=1),\nnn.Tanh(),\nnn.ConvTranspose2d(32, 64, 3, 2, padding=1, output_padding=1),\nnn.Tanh(),\nnn.ConvTranspose2d(64, 3, 3, 2, padding=1, output_padding=1),\nnn.Tanh(),\n)\ndef forward(self, xi, xv, state=None):\n# Encoder\nim_feat = self.encoder_image(xi)\nhid = torch.concat([im_feat, xv], -1)\n# Recurrent\nrnn_hid = self.rec(hid, state)\n# Decoder\ny_joint = self.decoder_joint(rnn_hid[0])\ny_image = self.decoder_image(rnn_hid[0])\nreturn y_image, y_joint, rnn_hid\n</code></pre>"},{"location":"zoo/CNNRNN/#bptt","title":"\u8aa4\u5dee\u9006\u4f1d\u64ad\u6cd5","text":"<p>\u6642\u7cfb\u5217\u5b66\u7fd2\u3092\u884c\u3046\u305f\u3081\u306e\u8aa4\u5dee\u9006\u4f1d\u64ad\u30a2\u30eb\u30b4\u30ea\u30ba\u30e0\u3068\u3057\u3066Backpropagation Through Time\uff08BPTT\uff09\u3092\u7528\u3044\u308b\u3002 BPTT\u306e\u8a73\u7d30\u306fSARNN\u3067\u8a18\u8f09\u6e08\u307f\u3067\u3042\u308b\u305f\u3081\u3001\u305d\u3061\u3089\u3092\u53c2\u7167\u3055\u308c\u305f\u3044\u3002</p> [SOURCE] fullBPTT.py<pre><code>class fullBPTTtrainer:\ndef __init__(self, model, optimizer, loss_weights=[1.0, 1.0], device=\"cpu\"):\nself.device = device\nself.optimizer = optimizer\nself.loss_weights = loss_weights\nself.model = model.to(self.device)\ndef save(self, epoch, loss, savename):\ntorch.save(\n{\n\"epoch\": epoch,\n\"model_state_dict\": self.model.state_dict(),\n\"train_loss\": loss[0],\n\"test_loss\": loss[1],\n},\nsavename,\n)\ndef process_epoch(self, data, training=True):\nif not training:\nself.model.eval()\ntotal_loss = 0.0\nfor n_batch, ((x_img, x_joint), (y_img, y_joint)) in enumerate(data):\nx_img = x_img.to(self.device)\ny_img = y_img.to(self.device)\nx_joint = x_joint.to(self.device)\ny_joint = y_joint.to(self.device)\nstate = None\nyi_list, yv_list = [], []\nT = x_img.shape[1]\nfor t in range(T - 1):\n_yi_hat, _yv_hat, state = self.model(x_img[:, t], x_joint[:, t], state)\nyi_list.append(_yi_hat)\nyv_list.append(_yv_hat)\nyi_hat = torch.permute(torch.stack(yi_list), (1, 0, 2, 3, 4))\nyv_hat = torch.permute(torch.stack(yv_list), (1, 0, 2))\nloss = self.loss_weights[0] * nn.MSELoss()(yi_hat, y_img[:, 1:]) \\\n                + self.loss_weights[1] * nn.MSELoss()(yv_hat, y_joint[:, 1:])\ntotal_loss += loss.item()\nif training:\nself.optimizer.zero_grad(set_to_none=True)\nloss.backward()\nself.optimizer.step()\nreturn total_loss / (n_batch + 1)\n</code></pre>"},{"location":"zoo/CNNRNN/#train","title":"\u5b66\u7fd2","text":"<p>\u30e1\u30a4\u30f3\u30d7\u30ed\u30b0\u30e9\u30e0 <code>train.py</code> \u3092\u4f7f\u7528\u3057\u3066\u3001CNNRNN\u3092\u5b66\u7fd2\u3059\u308b\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u3092\u5b9f\u884c\u3059\u308b\u3068 <code>log</code> \u30d5\u30a9\u30eb\u30c0\u5185\u306b\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\uff08pth\uff09\u3068Tensorboard\u306e\u30ed\u30b0\u30d5\u30a1\u30a4\u30eb\u304c\u4fdd\u5b58\u3055\u308c\u308b\u3002 \u30d7\u30ed\u30b0\u30e9\u30e0\u306e\u8a73\u7d30\u306a\u52d5\u4f5c\u306b\u3064\u3044\u3066\u306f\u3001\u30b3\u30fc\u30c9\u5185\u306e\u30b3\u30e1\u30f3\u30c8\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</p> <pre><code>$ cd eipl/tutorials/cnnrnn/\n$ python3 ./bin/train.py\n[INFO] Set tag = 20230514_1958_07\n================================\nbatch_size : 5\ndevice : 0\nepoch : 100000\nfeat_dim : 10\nimg_loss : 1.0\njoint_loss : 1.0\nlog_dir : log/\nlr : 0.001\nmodel : CNNRNN\noptimizer : adam\nrec_dim : 50\nstdev : 0.02\ntag : 20230514_1958_07\nvmax : 1.0\nvmin : 0.0\n================================\n0%|               | 83/100000 [05:07&lt;99:16:42,  3.58s/it, train_loss=0.0213, test_loss=0.022\n</code></pre>"},{"location":"zoo/CNNRNN/#inference","title":"\u63a8\u8ad6","text":"<p>CNNRNN\u304c\u9069\u5207\u306b\u5b66\u7fd2\u3055\u308c\u305f\u304b\u3092\u78ba\u8a8d\u3059\u308b\u305f\u3081\u306b\u3001\u30c6\u30b9\u30c8\u30d7\u30ed\u30b0\u30e9\u30e0 <code>test.py</code> \u3092\u7528\u3044\u3066\u691c\u8a3c\u3059\u308b\u3002 \u5f15\u6570 <code>filename</code> \u306f\u5b66\u7fd2\u6e08\u307f\u306e\u91cd\u307f\u30d5\u30a1\u30a4\u30eb\u306e\u30d1\u30b9\u3001 <code>idx</code> \u306f\u53ef\u8996\u5316\u3057\u305f\u3044\u30c7\u30fc\u30bf\u306e\u30a4\u30f3\u30c7\u30c3\u30af\u30b9\u3001 <code>input_param</code> \u306f\u63a8\u8ad6\u6642\u306e\u6df7\u5408\u4fc2\u6570\u3067\u3042\u308a\u3001\u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</p> <pre><code>$ cd eipl/tutorials/cnnrnn/\n$ python3 bin/test.py --filename ./log/20230514_1958_07/CNNRNN.pth --idx 4 --input_param 1.0\n\nimages shape:(187, 128, 128, 3), min=0, max=255\njoints shape:(187, 8), min=-0.8595600128173828, max=1.8292399644851685\nloop_ct:0, joint:[ 0.00226304 -0.7357931  -0.28175825  1.2895856   0.7252841   0.14539993\n-0.0266939   0.00422328]\nloop_ct:1, joint:[ 0.00307412 -0.73363686 -0.2815826   1.2874944   0.72176594  0.1542334\n-0.02719587  0.00325996]\n.\n.\n.\n\n$ ls ./output/\nCNNRNN_20230514_1958_07_4_1.0.gif\n</code></pre> <p>\u4e0b\u56f3\u306b\u3001\u672a\u5b66\u7fd2\u4f4d\u7f6e\u3067\u306e\u63a8\u8ad6\u7d50\u679c\u3092\u793a\u3059\u3002 \u5de6\u304b\u3089\u5165\u529b\u753b\u50cf\u3001\u4e88\u6e2c\u753b\u50cf\u3001\u305d\u3057\u3066\u4e88\u6e2c\u95a2\u7bc0\u89d2\u5ea6\uff08\u70b9\u7dda\u306f\u771f\u5024\uff09\u3067\u3042\u308b\u3002 CNNRNN\u306f\u62bd\u51fa\u3057\u305f\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u306b\u57fa\u3065\u3044\u3066\u6b21\u6642\u523b\u306e\u305d\u308c\u3089\u3092\u4e88\u6e2c\u3059\u308b\u3002 \u3053\u306e\u3068\u304d\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u306b\u306f\u628a\u6301\u5bfe\u8c61\u7269\u306e\u8272\u3084\u4f4d\u7f6e\u306a\u3069\u306e\u60c5\u5831\u304c\u542b\u307e\u308c\u3066\u3044\u308b\u3053\u3068\u304c\u671f\u5f85\u3055\u308c\u3001\u66f4\u306b\u4e88\u6e2c\u753b\u50cf\u3068\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u304c\u30bb\u30c3\u30c8\u3067\u9069\u5207\u306b\u4e88\u6e2c\u3055\u308c\u308b\u3053\u3068\u304c\u91cd\u8981\u3067\u3042\u308b\u3002 \u3057\u304b\u3057\u5b9f\u9a13\u3088\u308a\u3001\u95a2\u7bc0\u89d2\u5ea6\u306f\u9069\u5207\u306b\u4e88\u6e2c\u3067\u304d\u3066\u3044\u308b\u306e\u306b\u5bfe\u3057\u3001\u4e88\u6e2c\u753b\u50cf\u306b\u306f\u30ed\u30dc\u30c3\u30c8\u30cf\u30f3\u30c9\u3057\u304b\u751f\u6210\u3055\u308c\u3066\u3044\u306a\u3044\u3002 \u3053\u306e\u3053\u3068\u304b\u3089\u3001\u753b\u50cf\u7279\u5fb4\u91cf\u306b\u306f\u30ed\u30dc\u30c3\u30c8\u30cf\u30f3\u30c9\u306e\u60c5\u5831\u300c\u3057\u304b\u300d\u542b\u307e\u308c\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u7269\u4f53\u4f4d\u7f6e\u306b\u5fdc\u3058\u305f\u67d4\u8edf\u306a\u52d5\u4f5c\u751f\u6210\u306f\u56f0\u96e3\u3067\u3042\u308b\u3002</p> <p></p>"},{"location":"zoo/CNNRNN/#pca","title":"\u4e3b\u6210\u5206\u5206\u6790","text":"<p>\u4e0b\u56f3\u306f\u4e3b\u6210\u5206\u5206\u6790\u3092\u7528\u3044\u3066CNNRNN\u306e\u5185\u90e8\u72b6\u614b\u3092\u53ef\u8996\u5316\u3057\u305f\u7d50\u679c\u3067\u3042\u308b\u3002 \u5404\u70b9\u7dda\u306fCNNRNN\u306e\u5185\u90e8\u72b6\u614b\u306e\u6642\u7cfb\u5217\u5909\u5316\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u9ed2\u8272\u4e38\u3092\u59cb\u70b9\u306b\u9010\u6b21\u5185\u90e8\u72b6\u614b\u304c\u9077\u79fb\u3059\u308b\u3002 \u5404\u30a2\u30c8\u30e9\u30af\u30bf\u306e\u8272\u306f\u7269\u4f53\u4f4d\u7f6e\u3092\u793a\u3057\u3066\u304a\u308a\u3001\u9752\u3001\u30aa\u30ec\u30f3\u30b8\u3001\u7dd1\u306f\u6559\u793a\u4f4d\u7f6eA\u3001C\u3001E\u306b\u3001\u8d64\u3001\u7d2b\u306f\u672a\u5b66\u7fd2\u4f4d\u7f6eB\u3001D\u306b\u5bfe\u5fdc\u3057\u3066\u3044\u308b\u3002 \u6559\u793a\u4f4d\u7f6e\u3054\u3068\u306b\u30a2\u30c8\u30e9\u30af\u30bf\u304c\u81ea\u5df1\u7d44\u7e54\u5316\uff08\u6574\u5217\uff09\u3057\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u6559\u793a\u4f4d\u7f6e\u3067\u306f\u9069\u5207\u306b\u5b66\u7fd2\u3057\u305f\u52d5\u4f5c\u304c\u751f\u6210\u3067\u304d\u308b\u3068\u8a00\u3048\u308b\u3002 \u4e00\u65b9\u3067\u672a\u6559\u793a\u4f4d\u7f6e\u306e\u30a2\u30c8\u30e9\u30af\u30bf\u306f\u3001\u6559\u793a\u4f4d\u7f6e\u306e\u30a2\u30c8\u30e9\u30af\u30bf\u306b\u5f15\u304d\u5bc4\u305b\u3089\u308c\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u5185\u633f\u52d5\u4f5c\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u306a\u3044\u3002 \u3053\u308c\u306f\u3001\u628a\u6301\u5bfe\u8c61\u7269\u306e\u4f4d\u7f6e\u60c5\u5831\u304c\u753b\u50cf\u7279\u5fb4\u91cf\u3068\u3057\u3066\u62bd\u51fa\u3067\u304d\u306a\u304b\u3063\u305f\u3053\u3068\u304c\u539f\u56e0\u3068\u3057\u3066\u3042\u3052\u3089\u308c\u308b\u3002</p> <p></p>"},{"location":"zoo/CNNRNN/#improvement","title":"\u30e2\u30c7\u30eb\u6539\u826f","text":"<p>CAE-RNN\u3067\u306f\u3001\u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u7528\u3044\u3066\u591a\u69d8\u306a\u7269\u4f53\u4f4d\u7f6e\u60c5\u5831\u3092\u5b66\u7fd2\u3055\u305b\u308b\u3053\u3068\u3067\u6c4e\u5316\u6027\u80fd\u3092\u62c5\u4fdd\u3057\u305f\u304c\u3001CNNRNN\u306f\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u60c5\u5831\u3092\u540c\u6642\u306b\u5b66\u7fd2\u3055\u305b\u308b\u305f\u3081\u3001\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u3092\u30bb\u30c3\u30c8\u3067\u30c7\u30fc\u30bf\u62e1\u5f35\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u3001\u753b\u50cf\u306e\u4f4d\u7f6e\u5909\u5316\u306b\u5bfe\u5fdc\u3057\u305f\u30ed\u30dc\u30c3\u30c8\u95a2\u7bc0\u89d2\u5ea6\u306e\u30c7\u30fc\u30bf\u62e1\u5f35\u65b9\u6cd5\u8ab2\u984c\u3067\u3042\u308b\u3002\u305d\u3053\u3067\u3001CNNRNN\u3067\u4f4d\u7f6e\u6c4e\u5316\u6027\u80fd\u3092\u7372\u5f97\u3059\u308b\u305f\u3081\u306e\u89e3\u6c7a\u7b56\u3068\u3057\u3066\u3001\u4ee5\u4e0b3\u3064\u304c\u6319\u3052\u3089\u308c\u308b\u3002</p> <ol> <li> <p>\u4e8b\u524d\u5b66\u7fd2</p> <p>CNNRNN\u306e\u3046\u3061\u3001CAE\u306e\u90e8\u5206\u306e\u307f\u3092\u53d6\u308a\u51fa\u3057\u4e8b\u524d\u5b66\u7fd2\u3092\u884c\u3046\u3002 \u30c7\u30fc\u30bf\u62e1\u5f35\u3092\u7528\u3044\u3066\u753b\u50cf\u60c5\u5831\u306e\u307f\u3092\u5b66\u7fd2\u3055\u305b\u308b\u3053\u3068\u3067\u3001CAE\u3067\u306f\u591a\u69d8\u306a\u7269\u4f53\u4f4d\u7f6e\u60c5\u5831\u3092\u62bd\u51fa\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u306b\u306a\u308b\u3002 \u305d\u3057\u3066\u4e8b\u524d\u5b66\u7fd2\u3057\u305f\u91cd\u307f\u3092\u7528\u3044\u3066End-to-End\u5b66\u7fd2\u3092\u884c\u3046\u3053\u3068\u3067\u3001\u753b\u50cf\u3068\u95a2\u7bc0\u89d2\u5ea6\u306e\u5bfe\u5fdc\u4ed8\u3051\u3092\u884c\u3046\u3002 \u3057\u304b\u3057\u3001\u4e8b\u524d\u306bCAE\u3092\u5b66\u7fd2\u3055\u305b\u308b\u5fc5\u8981\u304c\u3042\u308b\u305f\u3081\u3001CAE-RNN\u3068\u540c\u7b49\u306e\u5b66\u7fd2\u5de5\u6570\u304c\u767a\u751f\u3059\u308b\u305f\u3081CNNRNN\u306e\u6069\u6075\u304c\u5c11\u306a\u3044\u3002</p> </li> <li> <p>\u6b63\u5247\u5316\uff1aCNNRNN with LayerNorm\uff08CNNRNNLN\uff09</p> <p>CAE-RNN\u3067\u306f\u3001CAE\u306e\u5b66\u7fd2\u3092\u5b89\u5b9a\u304b\u3064\u9ad8\u901f\u306b\u884c\u3046\u305f\u3081\u306b\u6b63\u5247\u5316\u624b\u6cd5\u3068\u3057\u3066 <code>BatchNormalization</code>2 \u3092\u7528\u3044\u305f\u3002 \u3057\u304b\u3057 BatchNormalization \u306f\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30d0\u30c3\u30c1\u304c\u5c0f\u3055\u3044\u3068\u5b66\u7fd2\u304c\u4e0d\u5b89\u5b9a\u306b\u306a\u308b\u3001 \u518d\u5e30\u7684\u30cb\u30e5\u30fc\u30e9\u30eb\u30cd\u30c3\u30c8\u30ef\u30fc\u30af\u3078\u306e\u9069\u7528\u304c\u56f0\u96e3\u3068\u3044\u3046\u8ab2\u984c\u304c\u3042\u308b\u3002 \u305d\u3053\u3067\u3001\u30c7\u30fc\u30bf\u30bb\u30c3\u30c8\u306e\u30d0\u30c3\u30c1\u304c\u5c0f\u3055\u304f\u3001\u66f4\u306b\u6642\u7cfb\u5217\u9577\u304c\u5909\u5316\u3057\u3066\u3082\u5b89\u5b9a\u3057\u3066\u5b66\u7fd2\u304c\u884c\u3048\u308b <code>Layer Normalization</code>3 \u3092\u7528\u3044\u308b\u3053\u3068\u3067\u6c4e\u5316\u6027\u80fd\u5411\u4e0a\u3092\u5b9f\u73fe\u3059\u308b\u3002</p> <p>\u4e0b\u56f3\u306f\u4e3b\u6210\u5206\u5206\u6790\u3092\u7528\u3044\u3066CNNRNNLN\u306e\u5185\u90e8\u72b6\u614b\u3092\u53ef\u8996\u5316\u3057\u305f\u7d50\u679c\u3067\u3042\u308b\u3002 \u5bfe\u8c61\u7269\u306e\u4f4d\u7f6e\u3054\u3068\u306b\u30a2\u30c8\u30e9\u30af\u30bf\u304c\u81ea\u5df1\u7d44\u7e54\u5316\uff08\u6574\u5217\uff09\u3057\u3066\u3044\u308b\u3053\u3068\u304b\u3089\u3001\u672a\u5b66\u7fd2\u4f4d\u7f6e\u3067\u3082\u9069\u5207\u306b\u52d5\u4f5c\u3092\u751f\u6210\u3059\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002</p> <p></p> </li> <li> <p>\u7a7a\u9593\u7684\u6ce8\u610f\u6a5f\u69cb\uff08Spatial Attention\uff09</p> <p>\u3053\u308c\u307e\u3067\u753b\u50cf\u4e2d\u306e\u591a\u69d8\u306a\u60c5\u5831\uff08\u4f4d\u7f6e\u3001\u8272\u3001\u5f62\u72b6\u3001\u80cc\u666f\u3001\u7167\u660e\u72b6\u6cc1\u306a\u3069\uff09\u304c\u542b\u307e\u308c\u305f\u753b\u50cf\u7279\u5fb4\u91cf\u306b\u57fa\u3065\u3044\u3066\u52d5\u4f5c\u5b66\u7fd2\u304c\u884c\u308f\u308c\u3066\u3044\u305f\u305f\u3081\u3001\u52d5\u4f5c\u751f\u6210\u6642\u306e\u30ed\u30d0\u30b9\u30c8\u6027\u304c\u8ab2\u984c\u3067\u3042\u3063\u305f\u3002 \u305d\u3053\u3067\u3001\u753b\u50cf\u304b\u3089\u30bf\u30b9\u30af\u306b\u91cd\u8981\u306a\u4f4d\u7f6e\uff08\u4f5c\u696d\u5bfe\u8c61\u7269\u3084\u30a2\u30fc\u30e0\uff09\u306e\u7a7a\u9593\u5ea7\u6a19\u3092\u300c\u660e\u793a\u7684\u300d\u306b\u62bd\u51fa\u3059\u308b\u7a7a\u9593\u7684\u6ce8\u610f\u6a5f\u69cb\u3092\u7528\u3044\u3066\u3001\u7a7a\u9593\u5ea7\u6a19\u3068\u30ed\u30dc\u30c3\u30c8\u306e\u95a2\u7bc0\u89d2\u5ea6\u3092\u5b66\u7fd2\u3059\u308b\u3053\u3068\u3067\u30ed\u30d0\u30b9\u30c8\u6027\u3092\u5411\u4e0a\u3055\u305b\u308b\u3053\u3068\u304c\u53ef\u80fd\u3067\u3042\u308b\u3002 \u7a7a\u9593\u7684\u6ce8\u610f\u6a5f\u69cb\u306e\u8a73\u7d30\u306f\u3053\u3061\u3089\u3092\u53c2\u7167\u304f\u3060\u3055\u3044\u3002</p> </li> </ol> <ol> <li> <p>Hiroshi Ito, Kenjiro Yamamoto, Hiroki Mori, Shuki Goto, and Tetsuya Ogata. Visualization of focal cues for visuomotor coordination by gradient-based methods: a recurrent neural network shifts the attention depending on task requirements. In 2020 IEEE/SICE International Symposium on System Integration (SII), 188\u2013194. IEEE, 2020.\u00a0\u21a9</p> </li> <li> <p>Sergey Ioffe and Christian Szegedy. Batch normalization: accelerating deep network training by reducing internal covariate shift. In International conference on machine learning, 448\u2013456. pmlr, 2015.\u00a0\u21a9</p> </li> <li> <p>Jimmy Lei Ba, Jamie Ryan Kiros, and Geoffrey E Hinton. Layer normalization. arXiv preprint arXiv:1607.06450, 2016.\u00a0\u21a9</p> </li> </ol>"},{"location":"zoo/MTRNN/","title":"\u6982\u8981","text":"<p>MTRNN\u306f\u3001\u5fdc\u7b54\u901f\u5ea6\u306e\u7570\u306a\u308b\u968e\u5c64\u7684\u306a\u30cb\u30e5\u30fc\u30ed\u30f3\u7fa4\u304b\u3089\u69cb\u6210\u3055\u308c\u308bRNN\u306e\u4e00\u7a2e\u3067\u3042\u308b1\u3002 IO\u5c64\u3068\u7570\u306a\u308b\u767a\u706b\u901f\u5ea6\uff08\u6642\u5b9a\u6570\uff09\u3092\u6301\u3064\u30b3\u30f3\u30c6\u30ad\u30b9\u30c8\u5c64\uff08Cf\u5c64\u3068Cs\u5c64\uff09\u306e3\u5c64\u304b\u3089\u306a\u308a\u3001\u305d\u308c\u305e\u308c\u518d\u5e30\u7684\u306a\u5165\u529b\u3092\u6301\u3064\u3002 \u6642\u5b9a\u6570\u306f\u3001Cf\u5c64\u304b\u3089Cs\u5c64\u306e\u9806\u3067\u5024\u304c\u5927\u304d\u304f\u306a\u308a\u3001\u5165\u529b\u306b\u5bfe\u3059\u308b\u5fdc\u7b54\u901f\u5ea6\u304c\u9045\u304f\u306a\u308b\u3002 \u5165\u529b\u3055\u308c\u305f\u60c5\u5831\u306f\u3001Cf\u5c64\u3068Cs\u5c64\u3092\u4ecb\u3057\u3066Output\u5c64\u3067\u51fa\u529b\u3055\u308c\u308b\u3002 IO\u5c64\u3068Cs\u5c64\u306e\u9593\u306b\u76f4\u63a5\u306e\u7d50\u5408\u306f\u5b58\u5728\u305b\u305a\u3001Cf\u5c64\u3092\u4ecb\u3057\u3066\u76f8\u4e92\u4f5c\u7528\u3059\u308b\u3002 MTRNN\u3092\u7528\u3044\u308b\u3053\u3068\u3067\u3001\u30ed\u30dc\u30c3\u30c8\u306e\u52d5\u4f5c\u5b66\u7fd2\u304c\u53ef\u80fd\u3068\u306a\u308a\u3001Cf\u5c64\u3067\u306f\u52d5\u4f5c\u30d7\u30ea\u30df\u30c6\u30a3\u30d6\u3001Cs\u5c64\u3067\u306f\u305d\u308c\u3089\u306e\u7d44\u307f\u5408\u308f\u305b\u304c\u8868\u73fe\uff08\u5b66\u7fd2\uff09\u3055\u308c\u308b\u3002 LSTM\u3068\u6bd4\u8f03\u3057\u3066MTRNN\u306f\u89e3\u91c8\u6027\u304c\u9ad8\u3044\u305f\u3081\u3001\u5c3e\u5f62\u7814\u7a76\u5ba4\u3067\u3088\u304f\u7528\u3044\u3066\u3044\u308b\u3002</p> <p></p> <ol> <li> <p>Yuichi Yamashita and Jun Tani. Emergence of functional hierarchy in a multiple timescale neural network model: a humanoid robot experiment. PLoS computational biology, 4(11):e1000220, 2008.\u00a0\u21a9</p> </li> </ol>"},{"location":"zoo/MTRNN/#MTRNN.MTRNNCell","title":"<code>MTRNN.MTRNNCell</code>","text":"<p>         Bases: <code>nn.Module</code></p> <p>Multiple Timescale RNN.</p> <p>Implements a form of Recurrent Neural Network (RNN) that operates with multiple timescales. This is based on the idea of hierarchical organization in human cognitive functions.</p> <p>Parameters:</p> Name Type Description Default <code>input_dim</code> <code>int</code> <p>Number of input features.</p> required <code>fast_dim</code> <code>int</code> <p>Number of fast context neurons.</p> required <code>slow_dim</code> <code>int</code> <p>Number of slow context neurons.</p> required <code>fast_tau</code> <code>float</code> <p>Time constant value of fast context.</p> required <code>slow_tau</code> <code>float</code> <p>Time constant value of slow context.</p> required <code>activation</code> <code>string</code> <p>If you set <code>None</code>, no activation is applied (ie. \"linear\" activation: <code>a(x) = x</code>).</p> <code>'tanh'</code> <code>use_bias</code> <code>Boolean</code> <p>whether the layer uses a bias vector. The default is False.</p> <code>False</code> <code>use_pb</code> <code>Boolean</code> <p>whether the recurrent uses a pb vector. The default is False.</p> <code>False</code> <p>Yuichi Yamashita, Jun Tani, \"Emergence of Functional Hierarchy in a Multiple Timescale Neural Network Model: A Humanoid Robot Experiment.\", NeurIPS 2018. https://arxiv.org/abs/1807.03247v2</p> Source code in <code>ja/docs/zoo/src/MTRNN.py</code> <pre><code>class MTRNNCell(nn.Module):\n#:: MTRNNCell\n\"\"\"Multiple Timescale RNN.\n    Implements a form of Recurrent Neural Network (RNN) that operates with multiple timescales.\n    This is based on the idea of hierarchical organization in human cognitive functions.\n    Arguments:\n        input_dim (int): Number of input features.\n        fast_dim (int): Number of fast context neurons.\n        slow_dim (int): Number of slow context neurons.\n        fast_tau (float): Time constant value of fast context.\n        slow_tau (float): Time constant value of slow context.\n        activation (string, optional): If you set `None`, no activation is applied (ie. \"linear\" activation: `a(x) = x`).\n        use_bias (Boolean, optional): whether the layer uses a bias vector. The default is False.\n        use_pb (Boolean, optional): whether the recurrent uses a pb vector. The default is False.\n    Yuichi Yamashita, Jun Tani,\n    \"Emergence of Functional Hierarchy in a Multiple Timescale Neural Network Model: A Humanoid Robot Experiment.\", NeurIPS 2018.\n    https://arxiv.org/abs/1807.03247v2\n    \"\"\"\ndef __init__(\nself,\ninput_dim,\nfast_dim,\nslow_dim,\nfast_tau,\nslow_tau,\nactivation=\"tanh\",\nuse_bias=False,\nuse_pb=False,\n):\nsuper(MTRNNCell, self).__init__()\nself.input_dim = input_dim\nself.fast_dim = fast_dim\nself.slow_dim = slow_dim\nself.fast_tau = fast_tau\nself.slow_tau = slow_tau\nself.use_bias = use_bias\nself.use_pb = use_pb\n# Legacy string support for activation function.\nif isinstance(activation, str):\nself.activation = get_activation_fn(activation)\nelse:\nself.activation = activation\n# Input Layers\nself.i2f = nn.Linear(input_dim, fast_dim, bias=use_bias)\n# Fast context layer\nself.f2f = nn.Linear(fast_dim, fast_dim, bias=False)\nself.f2s = nn.Linear(fast_dim, slow_dim, bias=use_bias)\n# Slow context layer\nself.s2s = nn.Linear(slow_dim, slow_dim, bias=False)\nself.s2f = nn.Linear(slow_dim, fast_dim, bias=use_bias)\ndef forward(self, x, state=None, pb=None):\n\"\"\"Forward propagation of the MTRNN.\n        Arguments:\n            x (torch.Tensor): Input tensor of shape (batch_size, input_dim).\n            state (list): Previous states (h_fast, h_slow, u_fast, u_slow), each of shape (batch_size, context_dim).\n                   If None, initialize states to zeros.\n            pb (bool): pb vector. Used if self.use_pb is set to True.\n        Returns:\n            new_h_fast (torch.Tensor): Updated fast context state.\n            new_h_slow (torch.Tensor): Updated slow context state.\n            new_u_fast (torch.Tensor): Updated fast internal state.\n            new_u_slow (torch.Tensor): Updated slow internal state.\n        \"\"\"\nbatch_size = x.shape[0]\nif state is not None:\nprev_h_fast, prev_h_slow, prev_u_fast, prev_u_slow = state\nelse:\ndevice = x.device\nprev_h_fast = torch.zeros(batch_size, self.fast_dim).to(device)\nprev_h_slow = torch.zeros(batch_size, self.slow_dim).to(device)\nprev_u_fast = torch.zeros(batch_size, self.fast_dim).to(device)\nprev_u_slow = torch.zeros(batch_size, self.slow_dim).to(device)\n# Update of fast internal state\nnew_u_fast = (1.0 - 1.0 / self.fast_tau) * prev_u_fast + 1.0 / self.fast_tau * (\nself.i2f(x) + self.f2f(prev_h_fast) + self.s2f(prev_h_slow)\n)\n# Update of slow internal state\n_input_slow = self.f2s(prev_h_fast) + self.s2s(prev_h_slow)\nif pb is not None:\n_input_slow += pb\nnew_u_slow = (1.0 - 1.0 / self.slow_tau) * prev_u_slow + 1.0 / self.slow_tau * _input_slow\n# Compute the activation for both fast and slow context states\nnew_h_fast = self.activation(new_u_fast)\nnew_h_slow = self.activation(new_u_slow)\nreturn new_h_fast, new_h_slow, new_u_fast, new_u_slow\n</code></pre>"},{"location":"zoo/MTRNN/#MTRNN.MTRNNCell.forward","title":"<code>forward(x, state=None, pb=None)</code>","text":"<p>Forward propagation of the MTRNN.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>torch.Tensor</code> <p>Input tensor of shape (batch_size, input_dim).</p> required <code>state</code> <code>list</code> <p>Previous states (h_fast, h_slow, u_fast, u_slow), each of shape (batch_size, context_dim).    If None, initialize states to zeros.</p> <code>None</code> <code>pb</code> <code>bool</code> <p>pb vector. Used if self.use_pb is set to True.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>new_h_fast</code> <code>torch.Tensor</code> <p>Updated fast context state.</p> <code>new_h_slow</code> <code>torch.Tensor</code> <p>Updated slow context state.</p> <code>new_u_fast</code> <code>torch.Tensor</code> <p>Updated fast internal state.</p> <code>new_u_slow</code> <code>torch.Tensor</code> <p>Updated slow internal state.</p> Source code in <code>ja/docs/zoo/src/MTRNN.py</code> <pre><code>def forward(self, x, state=None, pb=None):\n\"\"\"Forward propagation of the MTRNN.\n    Arguments:\n        x (torch.Tensor): Input tensor of shape (batch_size, input_dim).\n        state (list): Previous states (h_fast, h_slow, u_fast, u_slow), each of shape (batch_size, context_dim).\n               If None, initialize states to zeros.\n        pb (bool): pb vector. Used if self.use_pb is set to True.\n    Returns:\n        new_h_fast (torch.Tensor): Updated fast context state.\n        new_h_slow (torch.Tensor): Updated slow context state.\n        new_u_fast (torch.Tensor): Updated fast internal state.\n        new_u_slow (torch.Tensor): Updated slow internal state.\n    \"\"\"\nbatch_size = x.shape[0]\nif state is not None:\nprev_h_fast, prev_h_slow, prev_u_fast, prev_u_slow = state\nelse:\ndevice = x.device\nprev_h_fast = torch.zeros(batch_size, self.fast_dim).to(device)\nprev_h_slow = torch.zeros(batch_size, self.slow_dim).to(device)\nprev_u_fast = torch.zeros(batch_size, self.fast_dim).to(device)\nprev_u_slow = torch.zeros(batch_size, self.slow_dim).to(device)\n# Update of fast internal state\nnew_u_fast = (1.0 - 1.0 / self.fast_tau) * prev_u_fast + 1.0 / self.fast_tau * (\nself.i2f(x) + self.f2f(prev_h_fast) + self.s2f(prev_h_slow)\n)\n# Update of slow internal state\n_input_slow = self.f2s(prev_h_fast) + self.s2s(prev_h_slow)\nif pb is not None:\n_input_slow += pb\nnew_u_slow = (1.0 - 1.0 / self.slow_tau) * prev_u_slow + 1.0 / self.slow_tau * _input_slow\n# Compute the activation for both fast and slow context states\nnew_h_fast = self.activation(new_u_fast)\nnew_h_slow = self.activation(new_u_slow)\nreturn new_h_fast, new_h_slow, new_u_fast, new_u_slow\n</code></pre>"},{"location":"zoo/MTRNN/#MTRNN.BasicMTRNN","title":"<code>MTRNN.BasicMTRNN</code>","text":"<p>         Bases: <code>nn.Module</code></p> <p>MTRNN Wrapper Module.</p> <p>This module encapsulates the MTRNNCell, adding an output layer to it.</p> <p>Parameters:</p> Name Type Description Default <code>in_dim</code> <code>int</code> <p>Number of input features.</p> required <code>fast_dim</code> <code>int</code> <p>Number of fast context neurons.</p> required <code>slow_dim</code> <code>int</code> <p>Number of slow context neurons.</p> required <code>fast_tau</code> <code>float</code> <p>Time constant value of fast context.</p> required <code>slow_tau</code> <code>float</code> <p>Time constant value of slow context.</p> required <code>out_dim</code> <code>int</code> <p>Number of output features. If None, set equal to in_dim.</p> <code>None</code> <code>activation</code> <code>string</code> <p>If you set <code>None</code>, no activation is applied (ie. \"linear\" activation: <code>a(x) = x</code>).</p> <code>'tanh'</code> Source code in <code>ja/docs/zoo/src/MTRNN.py</code> <pre><code>class BasicMTRNN(nn.Module):\n#:: BasicMTRNN\n\"\"\"MTRNN Wrapper Module.\n    This module encapsulates the MTRNNCell, adding an output layer to it.\n    Arguments:\n        in_dim (int):  Number of input features.\n        fast_dim (int): Number of fast context neurons.\n        slow_dim (int): Number of slow context neurons.\n        fast_tau (float): Time constant value of fast context.\n        slow_tau (float): Time constant value of slow context.\n        out_dim (int, optional): Number of output features. If None, set equal to in_dim.\n        activation (string, optional): If you set `None`, no activation is applied (ie. \"linear\" activation: `a(x) = x`).\n    \"\"\"\ndef __init__(\nself, in_dim, fast_dim, slow_dim, fast_tau, slow_tau, out_dim=None, activation=\"tanh\"\n):\nsuper(BasicMTRNN, self).__init__()\nif out_dim is None:\nout_dim = in_dim\n# Legacy string support for activation function.\nif isinstance(activation, str):\nactivation = get_activation_fn(activation)\nself.mtrnn = MTRNNCell(\nin_dim, fast_dim, slow_dim, fast_tau, slow_tau, activation=activation\n)\n# Output of RNN\nself.rnn_out = nn.Sequential(nn.Linear(fast_dim, out_dim), activation)\ndef forward(self, x, state=None):\n\"\"\"Forward propagation of the BasicMTRNN.\n        Arguments:\n            x (torch.Tensor): Input tensor of shape (batch_size, input_dim).\n            state (list): Previous states (h_fast, h_slow, u_fast, u_slow), each of shape (batch_size, context_dim).\n                   If None, initialize states to zeros.\n        Returns:\n            y_hat (torch.Tensor): Output tensor of shape (batch_size, out_dim).\n            rnn_hid (list): Updated states (h_fast, h_slow, u_fast, u_slow).\n        \"\"\"\nrnn_hid = self.mtrnn(x, state)\ny_hat = self.rnn_out(rnn_hid[0])\nreturn y_hat, rnn_hid\n</code></pre>"},{"location":"zoo/MTRNN/#MTRNN.BasicMTRNN.forward","title":"<code>forward(x, state=None)</code>","text":"<p>Forward propagation of the BasicMTRNN.</p> <p>Parameters:</p> Name Type Description Default <code>x</code> <code>torch.Tensor</code> <p>Input tensor of shape (batch_size, input_dim).</p> required <code>state</code> <code>list</code> <p>Previous states (h_fast, h_slow, u_fast, u_slow), each of shape (batch_size, context_dim).    If None, initialize states to zeros.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>y_hat</code> <code>torch.Tensor</code> <p>Output tensor of shape (batch_size, out_dim).</p> <code>rnn_hid</code> <code>list</code> <p>Updated states (h_fast, h_slow, u_fast, u_slow).</p> Source code in <code>ja/docs/zoo/src/MTRNN.py</code> <pre><code>def forward(self, x, state=None):\n\"\"\"Forward propagation of the BasicMTRNN.\n    Arguments:\n        x (torch.Tensor): Input tensor of shape (batch_size, input_dim).\n        state (list): Previous states (h_fast, h_slow, u_fast, u_slow), each of shape (batch_size, context_dim).\n               If None, initialize states to zeros.\n    Returns:\n        y_hat (torch.Tensor): Output tensor of shape (batch_size, out_dim).\n        rnn_hid (list): Updated states (h_fast, h_slow, u_fast, u_slow).\n    \"\"\"\nrnn_hid = self.mtrnn(x, state)\ny_hat = self.rnn_out(rnn_hid[0])\nreturn y_hat, rnn_hid\n</code></pre>"},{"location":"zoo/overview/","title":"\u6982\u8981","text":"<p>EIPL\u306b\u5b9f\u88c5\u3055\u308c\u305f\u30ec\u30a4\u30e4\u30fc\u3084\u30e2\u30c7\u30eb\u3092\u9806\u6b21\u516c\u958b\u3059\u308b\u3002</p> <ul> <li> Multiple Timescale Recurrent Neural Network</li> <li> CAE-RNN</li> <li> CNNRNN</li> <li> SARNN with image feature\uff08\u8fd1\u65e5\u516c\u958b\uff09</li> <li> Stochastic Recurrent Neural Network\uff08\u8fd1\u65e5\u516c\u958b\uff09</li> </ul>"}]}